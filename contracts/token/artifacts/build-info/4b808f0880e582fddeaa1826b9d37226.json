{
	"id": "4b808f0880e582fddeaa1826b9d37226",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token/CrocodiloBomberdino.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"contracts/token/utils/FeeManager.sol\";\r\n\r\n/**\r\n * @title CrocodiloBomberdino\r\n * @dev Upgradeable ERC20 token with a 5% fee on transfers:\r\n *      2% burn, 2% utility, and 1% liquidity.\r\n *      Uses the UUPS upgradeable pattern and integrates fee management.\r\n */\r\ncontract CrocodiloBomberdino is ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, FeeManager {\r\n    // Total supply: 1 Billion tokens (with 18 decimals)\r\n    uint256 private constant INITIAL_SUPPLY = 1_000_000_000 * 1e18;\r\n\r\n    /**\r\n     * @dev Initializes the contract: sets token details, mints the total supply,\r\n     *      initializes fee wallet addresses (replace these with your secure addresses before mainnet deployment),\r\n     *      and exempts the deployer and the contract itself from fees.\r\n     */\r\n    function initialize() public initializer {\r\n        __ERC20_init(\"Crocodilo Bomberdino\", \"BOMBERDINO\");\r\n        __Ownable_init(msg.sender); // Initialize the contract with msg.sender as owner. // OwnableUpgradeable initializes owner as msg.sender internally.\r\n        __UUPSUpgradeable_init();\r\n\r\n        // Mint the full supply to the deployer (owner)\r\n        _mint(msg.sender, INITIAL_SUPPLY);\r\n\r\n        // Set initial fee wallet addresses (replace with secure addresses before mainnet deployment)\r\n        burnWallet = 0x077da53e0865f111B35912d400822bA89401Ca64;\r\n        utilityWallet = 0x775AFE34497a187350607d669c097DD9F6DDfaad;\r\n        liquidityWallet = 0xd42509a701A192ce204E5FB1be4fBa0C8b08a982;\r\n\r\n        // Exempt the deployer (owner) and the contract itself from fees.\r\n        isFeeExempt[msg.sender] = true;\r\n        isFeeExempt[address(this)] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev UUPS upgrade authorization function. Only the owner can upgrade.\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Overrides the ERC20 _transfer function to apply a 5% fee on transfers.\r\n     *      The fee is split as follows:\r\n     *        - 2% is sent to the burn wallet.\r\n     *        - 2% is sent to the utility wallet.\r\n     *        - 1% is sent to the liquidity wallet.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal override {\r\n        if (isFeeExempt[sender] || isFeeExempt[recipient]) {\r\n            // If either sender or recipient is fee-exempt, transfer full amount.\r\n            super._transfer(sender, recipient, amount);\r\n        } else {\r\n            // Calculate fee amounts.\r\n            uint256 feeTotal = (amount * totalFee()) / 100;\r\n            uint256 burnAmount = (amount * burnFee) / 100;\r\n            uint256 utilityAmount = (amount * utilityFee) / 100;\r\n            uint256 liquidityAmount = feeTotal - burnAmount - utilityAmount;\r\n\r\n            // Transfer fees to respective wallets.\r\n            super._transfer(sender, burnWallet, burnAmount);\r\n            super._transfer(sender, utilityWallet, utilityAmount);\r\n            super._transfer(sender, liquidityWallet, liquidityAmount);\r\n\r\n            // Transfer the net amount to the recipient.\r\n            super._transfer(sender, recipient, amount - feeTotal);\r\n        }\r\n    }\r\n\r\n    // -----------------------------------------------------------\r\n    // Owner-Protected Functions for Updating Fee Parameters and Wallets\r\n    // -----------------------------------------------------------\r\n\r\n    /**\r\n     * @notice Updates the fee exemption status for an account.\r\n     * @param account The address to update.\r\n     * @param exempt  Boolean flag indicating if the account should be fee-exempt.\r\n     */\r\n    function updateFeeExemption(address account, bool exempt) external onlyOwner {\r\n        require(account != address(0), \"Invalid account address\");\r\n        isFeeExempt[account] = exempt;\r\n    }\r\n\r\n    /**\r\n     * @notice Updates the fee wallet addresses.\r\n     * @param _burnWallet      New burn wallet address.\r\n     * @param _utilityWallet   New utility wallet address.\r\n     * @param _liquidityWallet New liquidity wallet address.\r\n     */\r\n    function updateWallets(\r\n        address _burnWallet,\r\n        address _utilityWallet,\r\n        address _liquidityWallet\r\n    ) external onlyOwner {\r\n        require(_burnWallet != address(0), \"Burn wallet cannot be zero\");\r\n        require(_utilityWallet != address(0), \"Utility wallet cannot be zero\");\r\n        require(_liquidityWallet != address(0), \"Liquidity wallet cannot be zero\");\r\n\r\n        burnWallet = _burnWallet;\r\n        utilityWallet = _utilityWallet;\r\n        liquidityWallet = _liquidityWallet;\r\n    }\r\n}\r\n"
			},
			"contracts/token/utils/FeeManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title FeeManager\r\n * @dev Contains fee parameters, wallet address storage, and fee calculation.\r\n *      This abstract contract does NOT enforce access control;\r\n *      functions that need protection will be implemented in the derived token contract.\r\n */\r\nabstract contract FeeManager {\r\n    // Wallet addresses for fee distribution.\r\n    address public burnWallet;\r\n    address public utilityWallet;\r\n    address public liquidityWallet;\r\n\r\n    // Fee percentages (expressed as whole numbers, where 2 means 2%).\r\n    uint256 public burnFee = 2;        // 2% burn fee\r\n    uint256 public utilityFee = 2;     // 2% utility fee\r\n    uint256 public liquidityFee = 1;   // 1% auto-liquidity fee\r\n    // Total fee = 2 + 2 + 1 = 5%\r\n\r\n    // Mapping for addresses exempt from fees.\r\n    mapping(address => bool) public isFeeExempt;\r\n\r\n    /**\r\n     * @notice Returns the total fee percentage.\r\n     */\r\n    function totalFee() public view returns (uint256) {\r\n        return burnFee + utilityFee + liquidityFee;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "    // SPDX-License-Identifier: MIT\n    // OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\n    pragma solidity ^0.8.20;\n\n    import {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\n    import {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n    /**\n    * @dev Contract module which provides a basic access control mechanism, where\n    * there is an account (an owner) that can be granted exclusive access to\n    * specific functions.\n    *\n    * The initial owner is set to the address provided by the deployer. This can\n    * later be changed with {transferOwnership}.\n    *\n    * This module is used through inheritance. It will make available the modifier\n    * `onlyOwner`, which can be applied to your functions to restrict their use to\n    * the owner.\n    */\n    abstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n        /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n        struct OwnableStorage {\n            address _owner;\n        }\n\n        // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n        bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n        function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n            assembly {\n                $.slot := OwnableStorageLocation\n            }\n        }\n\n        /**\n        * @dev The caller account is not authorized to perform an operation.\n        */\n        error OwnableUnauthorizedAccount(address account);\n\n        /**\n        * @dev The owner is not a valid owner account. (eg. `address(0)`)\n        */\n        error OwnableInvalidOwner(address owner);\n\n        event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n        /**\n        * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n        */\n        function __Ownable_init(address initialOwner) internal initializer {\n        require(initialOwner != address(0), \"ERC20: ownwer is zero\");\n        _transferOwnership(initialOwner);\n    }\n\n        function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n            if (initialOwner == address(0)) {\n                revert OwnableInvalidOwner(address(0));\n            }\n            _transferOwnership(initialOwner);\n        }\n\n        /**\n        * @dev Throws if called by any account other than the owner.\n        */\n        modifier onlyOwner() {\n            _checkOwner();\n            _;\n        }\n\n        /**\n        * @dev Returns the address of the current owner.\n        */\n        function owner() public view virtual returns (address) {\n            OwnableStorage storage $ = _getOwnableStorage();\n            return $._owner;\n        }\n\n        /**\n        * @dev Throws if the sender is not the owner.\n        */\n        function _checkOwner() internal view virtual {\n            if (owner() != _msgSender()) {\n                revert OwnableUnauthorizedAccount(_msgSender());\n            }\n        }\n\n        /**\n        * @dev Leaves the contract without owner. It will not be possible to call\n        * `onlyOwner` functions. Can only be called by the current owner.\n        *\n        * NOTE: Renouncing ownership will leave the contract without an owner,\n        * thereby disabling any functionality that is only available to the owner.\n        */\n        function renounceOwnership() public virtual onlyOwner {\n            _transferOwnership(address(0));\n        }\n\n        /**\n        * @dev Transfers ownership of the contract to a new account (`newOwner`).\n        * Can only be called by the current owner.\n        */\n        function transferOwnership(address newOwner) public virtual onlyOwner {\n            if (newOwner == address(0)) {\n                revert OwnableInvalidOwner(address(0));\n            }\n            _transferOwnership(newOwner);\n        }\n\n        /**\n        * @dev Transfers ownership of the contract to a new account (`newOwner`).\n        * Internal function without access restriction.\n        */\n        function _transferOwnership(address newOwner) internal virtual {\n            OwnableStorage storage $ = _getOwnableStorage();\n            address oldOwner = $._owner;\n            $._owner = newOwner;\n            emit OwnershipTransferred(oldOwner, newOwner);\n        }\n    }\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x77b5db0459729eb68e45320a715ee280490bf11132a73a9b1b520acfab5cec9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a22d0a284028864a39d89fc3383137eb08887948c4a7913b708d19b1fa542d2\",\"dweb:/ipfs/Qmedc7f7yAzuGdHLMKEwngkVUD99mVecaMSYhABabSGMG7\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x17e0e9e31ea417d52145013c539f4b2071813a186e30c7e13ee2fbf98387942a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5188bf47196aacb99e3f9705d5c6c322f7c21ff5c78e3dd92d449f2e96cfc289\",\"dweb:/ipfs/QmboqyLLcxRRh9AwHyKES3LQbVAhhAUTyz7TWQtgMzrCCA\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB4 0x28 0xF 0x28 CALLCODE 0xE9 0xE5 0xC7 MULMOD PUSH25 0xB391E29239CB2DDB8DA64EB6C00253D7D5A286906564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB4 0x28 0xF 0x28 CALLCODE 0xE9 0xE5 0xC7 MULMOD PUSH25 0xB391E29239CB2DDB8DA64EB6C00253D7D5A286906564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/token/CrocodiloBomberdino.sol",
								"contracts/token/utils/FeeManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x74DC4FF634ADBD05 0x28 0xB3 0xCB 0xE5 DIV SWAP9 MSTORE8 SDIV 0xB3 0x28 PUSH22 0x4B8ED3A8EDE8AE34ADCE94C864736F6C634300081A00 CALLER ",
							"sourceMap": "233:5815:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x74DC4FF634ADBD05 0x28 0xB3 0xCB 0xE5 DIV SWAP9 MSTORE8 SDIV 0xB3 0x28 PUSH22 0x4B8ED3A8EDE8AE34ADCE94C864736F6C634300081A00 CALLER ",
							"sourceMap": "233:5815:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/token/CrocodiloBomberdino.sol",
								"contracts/token/utils/FeeManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/token/CrocodiloBomberdino.sol",
								"contracts/token/utils/FeeManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/token/CrocodiloBomberdino.sol",
								"contracts/token/utils/FeeManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/CrocodiloBomberdino.sol": {
				"CrocodiloBomberdino": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isFeeExempt",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "exempt",
									"type": "bool"
								}
							],
							"name": "updateFeeExemption",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_burnWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_utilityWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_liquidityWallet",
									"type": "address"
								}
							],
							"name": "updateWallets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "utilityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "utilityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Upgradeable ERC20 token with a 5% fee on transfers:      2% burn, 2% utility, and 1% liquidity.      Uses the UUPS upgradeable pattern and integrates fee management.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"initialize()": {
								"details": "Initializes the contract: sets token details, mints the total supply,      initializes fee wallet addresses (replace these with your secure addresses before mainnet deployment),      and exempts the deployer and the contract itself from fees."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateFeeExemption(address,bool)": {
								"params": {
									"account": "The address to update.",
									"exempt": "Boolean flag indicating if the account should be fee-exempt."
								}
							},
							"updateWallets(address,address,address)": {
								"params": {
									"_burnWallet": "New burn wallet address.",
									"_liquidityWallet": "New liquidity wallet address.",
									"_utilityWallet": "New utility wallet address."
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"title": "CrocodiloBomberdino",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/CrocodiloBomberdino.sol\":571:4883  contract CrocodiloBomberdino is ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, FeeManager {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/token/utils/FeeManager.sol\":614:615  2 */\n  0x02\n    /* \"contracts/token/utils/FeeManager.sol\":589:615  uint256 public burnFee = 2 */\n  0x03\n  sstore\n    /* \"contracts/token/utils/FeeManager.sol\":672:673  2 */\n  0x02\n    /* \"contracts/token/utils/FeeManager.sol\":644:673  uint256 public utilityFee = 2 */\n  0x04\n  sstore\n    /* \"contracts/token/utils/FeeManager.sol\":732:733  1 */\n  0x01\n    /* \"contracts/token/utils/FeeManager.sol\":702:733  uint256 public liquidityFee = 1 */\n  0x05\n  sstore\n    /* \"contracts/token/CrocodiloBomberdino.sol\":571:4883  contract CrocodiloBomberdino is ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, FeeManager {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7ce5bcbaa570e6c26aabc2e17cbdf41b64b52824b9d0da4a1a221d2c48e00972\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/CrocodiloBomberdino.sol\":571:4883  contract CrocodiloBomberdino is ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, FeeManager {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xdccd8bd2\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdccd8bd2\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfce589d8\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0xad3cb1cc\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbf4cc52b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd4698016\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x98118cb4\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x23b872dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x4f1ef286\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5e4043e9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4218e0\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x06228749\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x147c9f6d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1df4ccfc\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token/utils/FeeManager.sol\":411:436  address public burnWallet */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4361:4880  function updateWallets(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/utils/FeeManager.sol\":972:1083  function totalFee() public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/utils/FeeManager.sol\":852:895  mapping(address => bool) public isFeeExempt */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_11:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3913:4106  function updateFeeExemption(address account, bool exempt) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3497:3606  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1095:1972  function initialize() public initializer {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2715:2871  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/utils/FeeManager.sol\":702:733  uint256 public liquidityFee = 1 */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/utils/FeeManager.sol\":443:471  address public utilityWallet */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/utils/FeeManager.sol\":478:508  address public liquidityWallet */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/utils/FeeManager.sol\":644:673  uint256 public utilityFee = 2 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3772:4007  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      stop\n        /* \"contracts/token/utils/FeeManager.sol\":589:615  uint256 public burnFee = 2 */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/utils/FeeManager.sol\":411:436  address public burnWallet */\n    tag_35:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2742:2755  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2789  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2808  _getERC20Storage */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2810  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2828  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2834  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_157\n      jump\t// in\n    tag_158:\n      dup1\n      iszero\n      tag_159\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_160\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_159)\n    tag_160:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_161:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_161\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5264:5268  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5280:5293  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5296:5308  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5296:5306  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5296:5308  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5280:5308  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5327:5332  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5334:5341  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5343:5348  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5326  _approve */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5366:5370  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5359:5370  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4361:4880  function updateWallets(... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2597  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4550:4551  0 */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4527:4552  _burnWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4527:4538  _burnWallet */\n      dup4\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4527:4552  _burnWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4519:4583  require(_burnWallet != address(0), \"Burn wallet cannot be zero\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4628:4629  0 */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4602:4630  _utilityWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4602:4616  _utilityWallet */\n      dup3\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4602:4630  _utilityWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4594:4664  require(_utilityWallet != address(0), \"Utility wallet cannot be zero\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4711:4712  0 */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4683:4713  _liquidityWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4683:4699  _liquidityWallet */\n      dup2\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4683:4713  _liquidityWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4675:4749  require(_liquidityWallet != address(0), \"Liquidity wallet cannot be zero\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4775:4786  _burnWallet */\n      dup3\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4762:4772  burnWallet */\n      0x00\n      dup1\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4762:4786  burnWallet = _burnWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4813:4827  _utilityWallet */\n      dup2\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4797:4810  utilityWallet */\n      0x01\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4797:4827  utilityWallet = _utilityWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4856:4872  _liquidityWallet */\n      dup1\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4838:4853  liquidityWallet */\n      0x02\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4838:4872  liquidityWallet = _liquidityWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4361:4880  function updateWallets(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3929:3936  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3970  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3973:3991  _getERC20Storage() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3973:3989  _getERC20Storage */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3973:3991  _getERC20Storage() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3991  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4009  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4001:4022  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/utils/FeeManager.sol\":972:1083  function totalFee() public view returns (uint256) {... */\n    tag_62:\n        /* \"contracts/token/utils/FeeManager.sol\":1013:1020  uint256 */\n      0x00\n        /* \"contracts/token/utils/FeeManager.sol\":1063:1075  liquidityFee */\n      sload(0x05)\n        /* \"contracts/token/utils/FeeManager.sol\":1050:1060  utilityFee */\n      sload(0x04)\n        /* \"contracts/token/utils/FeeManager.sol\":1040:1047  burnFee */\n      sload(0x03)\n        /* \"contracts/token/utils/FeeManager.sol\":1040:1060  burnFee + utilityFee */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/token/utils/FeeManager.sol\":1040:1075  burnFee + utilityFee + liquidityFee */\n      tag_185\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_185:\n        /* \"contracts/token/utils/FeeManager.sol\":1033:1075  return burnFee + utilityFee + liquidityFee */\n      swap1\n      pop\n        /* \"contracts/token/utils/FeeManager.sol\":972:1083  function totalFee() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6056:6060  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6072:6087  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6090:6102  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6090:6100  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6090:6102  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6072:6102  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6149  _spendAllowance(from, spender, value) */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6128:6132  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6134:6141  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6143:6148  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6127  _spendAllowance */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6149  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6185  _transfer(from, to, value) */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6169:6173  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6175:6177  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6179:6184  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6168  _transfer */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6185  _transfer(from, to, value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6202:6206  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6195:6206  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3784:3789  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3808:3810  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3801:3810  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/utils/FeeManager.sol\":852:895  mapping(address => bool) public isFeeExempt */\n    tag_79:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3913:4106  function updateFeeExemption(address account, bool exempt) external onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2597  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4028:4029  0 */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4009:4030  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4009:4016  account */\n      dup3\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4009:4030  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4001:4058  require(account != address(0), \"Invalid account address\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4092:4098  exempt */\n      dup1\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4069:4080  isFeeExempt */\n      0x06\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4069:4089  isFeeExempt[account] */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4081:4088  account */\n      dup5\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4069:4089  isFeeExempt[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":4069:4098  isFeeExempt[account] = exempt */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3913:4106  function updateFeeExemption(address account, bool exempt) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4152:4159  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4193  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4196:4214  _getERC20Storage() */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4196:4212  _getERC20Storage */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4196:4214  _getERC20Storage() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4214  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4232  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4242  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4250  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4224:4251  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3497:3606  function renounceOwnership() public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2597  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3565:3595  _transferOwnership(address(0)) */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3592:3593  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3565:3583  _transferOwnership */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3565:3595  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3497:3606  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1095:1972  function initialize() public initializer {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_221\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_223\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_225:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1147:1197  __ERC20_init(\"Crocodilo Bomberdino\", \"BOMBERDINO\") */\n      tag_227\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      0x43726f636f64696c6f20426f6d62657264696e6f000000000000000000000000\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x424f4d42455244494e4f00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1147:1159  __ERC20_init */\n      tag_228\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1147:1197  __ERC20_init(\"Crocodilo Bomberdino\", \"BOMBERDINO\") */\n      jump\t// in\n    tag_227:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1208:1234  __Ownable_init(msg.sender) */\n      tag_229\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1223:1233  msg.sender */\n      caller\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1208:1222  __Ownable_init */\n      tag_230\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1208:1234  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1364:1388  __UUPSUpgradeable_init() */\n      tag_231\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1364:1386  __UUPSUpgradeable_init */\n      tag_232\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1364:1388  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1458:1491  _mint(msg.sender, INITIAL_SUPPLY) */\n      tag_233\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/token/CrocodiloBomberdino.sol\":776:796  1_000_000_000 * 1e18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1458:1463  _mint */\n      tag_234\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1458:1491  _mint(msg.sender, INITIAL_SUPPLY) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1620:1662  0x077da53e0865f111B35912d400822bA89401Ca64 */\n      0x077da53e0865f111b35912d400822ba89401ca64\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1607:1617  burnWallet */\n      0x00\n      dup1\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1607:1662  burnWallet = 0x077da53e0865f111B35912d400822bA89401Ca64 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1689:1731  0x775AFE34497a187350607d669c097DD9F6DDfaad */\n      0x775afe34497a187350607d669c097dd9f6ddfaad\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1673:1686  utilityWallet */\n      0x01\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1673:1731  utilityWallet = 0x775AFE34497a187350607d669c097DD9F6DDfaad */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1760:1802  0xd42509a701A192ce204E5FB1be4fBa0C8b08a982 */\n      0xd42509a701a192ce204e5fb1be4fba0c8b08a982\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1742:1757  liquidityWallet */\n      0x02\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1742:1802  liquidityWallet = 0xd42509a701A192ce204E5FB1be4fBa0C8b08a982 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1916:1920  true */\n      0x01\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1890:1901  isFeeExempt */\n      0x06\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1890:1913  isFeeExempt[msg.sender] */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1902:1912  msg.sender */\n      caller\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1890:1913  isFeeExempt[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1890:1920  isFeeExempt[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1960:1964  true */\n      0x01\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1931:1942  isFeeExempt */\n      0x06\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1931:1957  isFeeExempt[address(this)] */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1951:1955  this */\n      address\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1931:1957  isFeeExempt[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1931:1964  isFeeExempt[address(this)] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":1095:1972  function initialize() public initializer {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2715:2871  function owner() public view virtual returns (address) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2761:2768  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2784:2808  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2811:2831  _getOwnableStorage() */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2811:2829  _getOwnableStorage */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2811:2831  _getOwnableStorage() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2784:2831  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2852:2853  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2852:2860  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2845:2860  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2715:2871  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3001:3014  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3048  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3067  _getERC20Storage */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3069  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3087  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3095  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      dup1\n      sload\n      tag_243\n      swap1\n      tag_157\n      jump\t// in\n    tag_243:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_244\n      swap1\n      tag_157\n      jump\t// in\n    tag_244:\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_246\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_245)\n    tag_246:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_247:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_247\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_245:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/utils/FeeManager.sol\":702:733  uint256 public liquidityFee = 1 */\n    tag_116:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4522:4526  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4551  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4554:4566  _msgSender() */\n      tag_249\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4554:4564  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4554:4566  _msgSender() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4566  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4603  _transfer(owner, to, value) */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4586:4591  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4593:4595  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4597:4602  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4585  _transfer */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4603  _transfer(owner, to, value) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4620:4624  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4613:4624  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_125:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/token/utils/FeeManager.sol\":443:471  address public utilityWallet */\n    tag_129:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/token/utils/FeeManager.sol\":478:508  address public liquidityWallet */\n    tag_133:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/token/utils/FeeManager.sol\":644:673  uint256 public utilityFee = 2 */\n    tag_137:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4769:4776  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4810  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4813:4831  _getERC20Storage() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4813:4829  _getERC20Storage */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4813:4831  _getERC20Storage() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4831  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4849  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4861  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4862:4867  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4877  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4869:4876  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4877  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4841:4877  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3772:4007  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2597  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3880:3881  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3860:3882  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3860:3868  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3860:3882  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3856:3955  if (newOwner == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3937:3938  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3909:3940  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3856:3955  if (newOwner == address(0)) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3968:3996  _transferOwnership(newOwner) */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3987:3995  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3968:3986  _transferOwnership */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3968:3996  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3772:4007  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/token/utils/FeeManager.sol\":589:615  uint256 public burnFee = 2 */\n    tag_151:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9990:10118  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10074:10111  _approve(owner, spender, value, true) */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10083:10088  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10090:10097  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10099:10104  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10106:10110  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10074:10082  _approve */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10074:10111  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9990:10118  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2958:3136  function _checkOwner() internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3032:3044  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3032:3042  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3032:3044  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3021:3044  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3021:3028  owner() */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3021:3026  owner */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3021:3028  owner() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3021:3044  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3017:3126  if (owner() != _msgSender()) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3098:3110  _msgSender() */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3098:3108  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3098:3110  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3071:3111  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3017:3126  if (owner() != _msgSender()) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2958:3136  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11734:12210  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11833:11857  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11860:11885  allowance(owner, spender) */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11870:11875  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11877:11884  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11860:11869  allowance */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11860:11885  allowance(owner, spender) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11833:11885  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11918:11935  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11899:11915  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11899:11935  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11895:12204  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11974:11979  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11955:11971  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11955:11979  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11951:12081  if (currentAllowance < value) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12033:12040  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12042:12058  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12060:12065  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12006:12066  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11951:12081  if (currentAllowance < value) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12122:12179  _approve(owner, spender, currentAllowance - value, false) */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12131:12136  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12138:12145  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12166:12171  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12147:12163  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12147:12171  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12173:12178  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12122:12130  _approve */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12122:12179  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11895:12204  if (currentAllowance < type(uint256).max) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11823:12210  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11734:12210  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2464:3480  function _transfer(address sender, address recipient, uint256 amount) internal override {... */\n    tag_191:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2567:2578  isFeeExempt */\n      0x06\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2567:2586  isFeeExempt[sender] */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2579:2585  sender */\n      dup5\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2567:2586  isFeeExempt[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2567:2612  isFeeExempt[sender] || isFeeExempt[recipient] */\n      dup1\n      tag_278\n      jumpi\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2590:2601  isFeeExempt */\n      0x06\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2590:2612  isFeeExempt[recipient] */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2602:2611  recipient */\n      dup4\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2590:2612  isFeeExempt[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2567:2612  isFeeExempt[sender] || isFeeExempt[recipient] */\n    tag_278:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2563:3473  if (isFeeExempt[sender] || isFeeExempt[recipient]) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2712:2754  super._transfer(sender, recipient, amount) */\n      tag_280\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2728:2734  sender */\n      dup4\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2736:2745  recipient */\n      dup4\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2747:2753  amount */\n      dup4\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2712:2727  super._transfer */\n      tag_281\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2712:2754  super._transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2563:3473  if (isFeeExempt[sender] || isFeeExempt[recipient]) {... */\n      jump(tag_282)\n    tag_279:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2826:2842  uint256 feeTotal */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2869:2872  100 */\n      0x64\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2855:2865  totalFee() */\n      tag_283\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2855:2863  totalFee */\n      tag_62\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2855:2865  totalFee() */\n      jump\t// in\n    tag_283:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2846:2852  amount */\n      dup4\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2846:2865  amount * totalFee() */\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2845:2872  (amount * totalFee()) / 100 */\n      tag_286\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2826:2872  uint256 feeTotal = (amount * totalFee()) / 100 */\n      swap1\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2887:2905  uint256 burnAmount */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2929:2932  100 */\n      0x64\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2918:2925  burnFee */\n      sload(0x03)\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2909:2915  amount */\n      dup5\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2909:2925  amount * burnFee */\n      tag_288\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_288:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2908:2932  (amount * burnFee) / 100 */\n      tag_289\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_289:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2887:2932  uint256 burnAmount = (amount * burnFee) / 100 */\n      swap1\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2947:2968  uint256 utilityAmount */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2995:2998  100 */\n      0x64\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2981:2991  utilityFee */\n      sload(0x04)\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2972:2978  amount */\n      dup6\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2972:2991  amount * utilityFee */\n      tag_290\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_290:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2971:2998  (amount * utilityFee) / 100 */\n      tag_291\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_291:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2947:2998  uint256 utilityAmount = (amount * utilityFee) / 100 */\n      swap1\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3013:3036  uint256 liquidityAmount */\n      0x00\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3063:3076  utilityAmount */\n      dup2\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3050:3060  burnAmount */\n      dup4\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3039:3047  feeTotal */\n      dup6\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3039:3060  feeTotal - burnAmount */\n      tag_292\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3039:3076  feeTotal - burnAmount - utilityAmount */\n      tag_294\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_294:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3013:3076  uint256 liquidityAmount = feeTotal - burnAmount - utilityAmount */\n      swap1\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3146:3193  super._transfer(sender, burnWallet, burnAmount) */\n      tag_295\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3162:3168  sender */\n      dup8\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3170:3180  burnWallet */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3182:3192  burnAmount */\n      dup6\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3146:3161  super._transfer */\n      tag_281\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3146:3193  super._transfer(sender, burnWallet, burnAmount) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3208:3261  super._transfer(sender, utilityWallet, utilityAmount) */\n      tag_296\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3224:3230  sender */\n      dup8\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3232:3245  utilityWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3247:3260  utilityAmount */\n      dup5\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3208:3223  super._transfer */\n      tag_281\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3208:3261  super._transfer(sender, utilityWallet, utilityAmount) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3276:3333  super._transfer(sender, liquidityWallet, liquidityAmount) */\n      tag_297\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3292:3298  sender */\n      dup8\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3300:3315  liquidityWallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3317:3332  liquidityAmount */\n      dup4\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3276:3291  super._transfer */\n      tag_281\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3276:3333  super._transfer(sender, liquidityWallet, liquidityAmount) */\n      jump\t// in\n    tag_297:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3408:3461  super._transfer(sender, recipient, amount - feeTotal) */\n      tag_298\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3424:3430  sender */\n      dup8\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3432:3441  recipient */\n      dup8\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3452:3460  feeTotal */\n      dup7\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3443:3449  amount */\n      dup9\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3443:3460  amount - feeTotal */\n      tag_299\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_299:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3408:3423  super._transfer */\n      tag_281\n        /* \"contracts/token/CrocodiloBomberdino.sol\":3408:3461  super._transfer(sender, recipient, amount - feeTotal) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2772:3473  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2563:3473  if (isFeeExempt[sender] || isFeeExempt[recipient]) {... */\n    tag_282:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2464:3480  function _transfer(address sender, address recipient, uint256 amount) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4667:4673  __self */\n      immutable(\"0x7ce5bcbaa570e6c26aabc2e17cbdf41b64b52824b9d0da4a1a221d2c48e00972\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4662  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_301\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4764:4770  __self */\n      immutable(\"0x7ce5bcbaa570e6c26aabc2e17cbdf41b64b52824b9d0da4a1a221d2c48e00972\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4758  ERC1967Utils.getImplementation */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n      iszero\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4844:4873  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2076:2160  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      tag_306\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2597  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2586:2599  _checkOwner() */\n      jump\t// in\n    tag_306:\n        /* \"contracts/token/CrocodiloBomberdino.sol\":2076:2160  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6149:6166  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6181  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6183  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_309\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_310\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      0x01\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6535:6552  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6233:6265  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6229  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6265  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6321:6325  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6384:6401  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6403:6407  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6383  ERC1967Utils.upgradeToAndCall */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6184:6419  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5096  __self */\n      immutable(\"0x7ce5bcbaa570e6c26aabc2e17cbdf41b64b52824b9d0da4a1a221d2c48e00972\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5081:5085  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5174:5203  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4178:4446  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4255:4279  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4282:4302  _getOwnableStorage() */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4282:4300  _getOwnableStorage */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4282:4302  _getOwnableStorage() */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4255:4302  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4316:4332  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4335:4336  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4335:4343  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4316:4343  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4368:4376  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4357:4358  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4357:4365  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4357:4376  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4426:4434  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4395:4435  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4416:4424  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4395:4435  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4241:4446  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4178:4446  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_327\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_328\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_331\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2388:2393  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2395:2402  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2387  __ERC20_init_unchained */\n      tag_334\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2184  function __Ownable_init(address initialOwner) internal initializer {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_337\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_338\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_339\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2107:2108  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2083:2109  initialOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2083:2095  initialOwner */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2083:2109  initialOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2075:2135  require(initialOwner != address(0), \"ERC20: ownwer is zero\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2145:2177  _transferOwnership(initialOwner) */\n      tag_346\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2164:2176  initialOwner */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2145:2163  _transferOwnership */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2145:2177  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_348\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2184  function __Ownable_init(address initialOwner) internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_331\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8722:8930  function _mint(address account, uint256 value) internal {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8811:8812  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8792:8813  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8792:8799  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8792:8813  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8788:8879  if (account == address(0)) {... */\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8865:8866  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8836:8868  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8788:8879  if (account == address(0)) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8888:8923  _update(address(0), account, value) */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8904:8905  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8908:8915  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8917:8922  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8888:8895  _update */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8888:8923  _update(address(0), account, value) */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8722:8930  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1281:1456  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1333:1357  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1410:1432  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1400:1432  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1281:1456  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10965:11452  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11073:11095  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11116  _getERC20Storage() */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11114  _getERC20Storage */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11116  _getERC20Storage() */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11073:11116  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11147:11148  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11130:11149  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11130:11135  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11130:11149  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11126:11215  if (owner == address(0)) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11201:11202  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11172:11204  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11126:11215  if (owner == address(0)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11247:11248  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11249  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11235  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11249  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11224:11314  if (spender == address(0)) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11300:11301  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11272:11303  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_363\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11224:11314  if (spender == address(0)) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11360  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11323:11324  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11323:11336  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11323:11343  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11337:11342  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11323:11343  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11323:11352  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11344:11351  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11323:11352  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11323:11360  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11374:11383  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11370:11446  if (emitEvent) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11420:11427  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11404:11435  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11413:11418  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11404:11435  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11429:11434  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11404:11435  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_365\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11370:11446  if (emitEvent) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11063:11452  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10965:11452  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6586:6894  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6693:6694  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6677:6695  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6677:6681  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6677:6695  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6673:6759  if (from == address(0)) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6745:6746  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6718:6748  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_368\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6673:6759  if (from == address(0)) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6786:6787  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6772:6788  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6772:6774  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6772:6788  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6768:6854  if (to == address(0)) {... */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6840:6841  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6811:6843  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_370\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6768:6854  if (to == address(0)) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6863:6887  _update(from, to, value) */\n      tag_371\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6871:6875  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6877:6879  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6881:6886  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6863:6870  _update */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6863:6887  _update(from, to, value) */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6586:6894  function _transfer(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_373\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_374\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_376\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_377\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_379\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_380\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_379:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_381)\n    tag_378:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_382\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_383\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_386\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_334:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_390\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_331\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2550  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      tag_392\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2569  _getERC20Storage */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2571  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2591:2596  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2582  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      swap1\n      dup2\n      tag_393\n      swap2\n      swap1\n      tag_394\n      jump\t// in\n    tag_393:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2618:2625  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2607  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_395\n      swap2\n      swap1\n      tag_394\n      jump\t// in\n    tag_395:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2518:2632  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7209:8379  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7294:7316  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7319:7337  _getERC20Storage() */\n      tag_397\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7319:7335  _getERC20Storage */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7319:7337  _getERC20Storage() */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7294:7337  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7367:7368  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7351:7369  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7351:7355  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7351:7369  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7347:7893  if (from == address(0)) {... */\n      tag_398\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7505:7510  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7487:7488  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7487:7501  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7487:7510  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_399\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_399:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7347:7893  if (from == address(0)) {... */\n      jump(tag_400)\n    tag_398:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7541:7560  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7563:7564  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7563:7574  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7563:7580  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7575:7579  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7563:7580  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7541:7580  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7612:7617  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7598:7609  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7598:7617  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7594:7709  if (fromBalance < value) {... */\n      iszero\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7669:7673  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7675:7686  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7688:7693  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7644:7694  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_402\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_402:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7594:7709  if (fromBalance < value) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7863:7868  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7849:7860  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7849:7868  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7829:7830  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7829:7840  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7829:7846  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7841:7845  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7829:7846  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7829:7868  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7527:7893  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7347:7893  if (from == address(0)) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7921:7922  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7907:7923  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7907:7909  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7907:7923  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7903:8332  if (to == address(0)) {... */\n      tag_403\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8088:8093  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8070:8071  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8070:8084  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8070:8093  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7903:8332  if (to == address(0)) {... */\n      jump(tag_404)\n    tag_403:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8302:8307  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8283:8284  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8283:8294  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8283:8298  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8295:8297  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8283:8298  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8283:8307  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7903:8332  if (to == address(0)) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8362:8364  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8347:8372  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8356:8360  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8347:8372  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8366:8371  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8347:8372  Transfer(from, to, value) */\n      mload(0x40)\n      tag_405\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_405:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:8379  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7209:8379  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_409\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_409:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_410\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_374\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_410:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_412\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_412:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_416\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_415)\n    tag_416:\n      0x60\n      swap2\n      pop\n    tag_415:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_417\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_418\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_383:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_420\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_420:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_422\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_418:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_424\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_425\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_426\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_425:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_427)\n    tag_424:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4878:4879  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4867  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_428\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4905:4906  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4889  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_428:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_429\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_430\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_430:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_429:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4985:5002  return returndata */\n      swap1\n      pop\n      jump(tag_423)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_427:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_423:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_426:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5710:5711  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5700  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      iszero\n      tag_432\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_432:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:133   */\n    tag_434:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_435:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_508\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_434\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_436:\n        /* \"#utility.yul\":328:352   */\n      tag_510\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_435\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_37:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_512\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_436\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:692   */\n    tag_437:\n        /* \"#utility.yul\":645:651   */\n      0x00\n        /* \"#utility.yul\":679:684   */\n      dup2\n        /* \"#utility.yul\":673:685   */\n      mload\n        /* \"#utility.yul\":663:685   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":698:867   */\n    tag_438:\n        /* \"#utility.yul\":782:793   */\n      0x00\n        /* \"#utility.yul\":816:822   */\n      dup3\n        /* \"#utility.yul\":811:814   */\n      dup3\n        /* \"#utility.yul\":804:823   */\n      mstore\n        /* \"#utility.yul\":856:860   */\n      0x20\n        /* \"#utility.yul\":851:854   */\n      dup3\n        /* \"#utility.yul\":847:861   */\n      add\n        /* \"#utility.yul\":832:861   */\n      swap1\n      pop\n        /* \"#utility.yul\":698:867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":873:1012   */\n    tag_439:\n        /* \"#utility.yul\":962:968   */\n      dup3\n        /* \"#utility.yul\":957:960   */\n      dup2\n        /* \"#utility.yul\":952:955   */\n      dup4\n        /* \"#utility.yul\":946:969   */\n      mcopy\n        /* \"#utility.yul\":1003:1004   */\n      0x00\n        /* \"#utility.yul\":994:1000   */\n      dup4\n        /* \"#utility.yul\":989:992   */\n      dup4\n        /* \"#utility.yul\":985:1001   */\n      add\n        /* \"#utility.yul\":978:1005   */\n      mstore\n        /* \"#utility.yul\":873:1012   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1018:1120   */\n    tag_440:\n        /* \"#utility.yul\":1059:1065   */\n      0x00\n        /* \"#utility.yul\":1110:1112   */\n      0x1f\n        /* \"#utility.yul\":1106:1113   */\n      not\n        /* \"#utility.yul\":1101:1103   */\n      0x1f\n        /* \"#utility.yul\":1094:1099   */\n      dup4\n        /* \"#utility.yul\":1090:1104   */\n      add\n        /* \"#utility.yul\":1086:1114   */\n      and\n        /* \"#utility.yul\":1076:1114   */\n      swap1\n      pop\n        /* \"#utility.yul\":1018:1120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1503   */\n    tag_441:\n        /* \"#utility.yul\":1214:1217   */\n      0x00\n        /* \"#utility.yul\":1242:1281   */\n      tag_518\n        /* \"#utility.yul\":1275:1280   */\n      dup3\n        /* \"#utility.yul\":1242:1281   */\n      tag_437\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":1297:1368   */\n      tag_519\n        /* \"#utility.yul\":1361:1367   */\n      dup2\n        /* \"#utility.yul\":1356:1359   */\n      dup6\n        /* \"#utility.yul\":1297:1368   */\n      tag_438\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":1290:1368   */\n      swap4\n      pop\n        /* \"#utility.yul\":1377:1442   */\n      tag_520\n        /* \"#utility.yul\":1435:1441   */\n      dup2\n        /* \"#utility.yul\":1430:1433   */\n      dup6\n        /* \"#utility.yul\":1423:1427   */\n      0x20\n        /* \"#utility.yul\":1416:1421   */\n      dup7\n        /* \"#utility.yul\":1412:1428   */\n      add\n        /* \"#utility.yul\":1377:1442   */\n      tag_439\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":1467:1496   */\n      tag_521\n        /* \"#utility.yul\":1489:1495   */\n      dup2\n        /* \"#utility.yul\":1467:1496   */\n      tag_440\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":1462:1465   */\n      dup5\n        /* \"#utility.yul\":1458:1497   */\n      add\n        /* \"#utility.yul\":1451:1497   */\n      swap2\n      pop\n        /* \"#utility.yul\":1218:1503   */\n      pop\n        /* \"#utility.yul\":1126:1503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1822   */\n    tag_42:\n        /* \"#utility.yul\":1622:1626   */\n      0x00\n        /* \"#utility.yul\":1660:1662   */\n      0x20\n        /* \"#utility.yul\":1649:1658   */\n      dup3\n        /* \"#utility.yul\":1645:1663   */\n      add\n        /* \"#utility.yul\":1637:1663   */\n      swap1\n      pop\n        /* \"#utility.yul\":1709:1718   */\n      dup2\n        /* \"#utility.yul\":1703:1707   */\n      dup2\n        /* \"#utility.yul\":1699:1719   */\n      sub\n        /* \"#utility.yul\":1695:1696   */\n      0x00\n        /* \"#utility.yul\":1684:1693   */\n      dup4\n        /* \"#utility.yul\":1680:1697   */\n      add\n        /* \"#utility.yul\":1673:1720   */\n      mstore\n        /* \"#utility.yul\":1737:1815   */\n      tag_523\n        /* \"#utility.yul\":1810:1814   */\n      dup2\n        /* \"#utility.yul\":1801:1807   */\n      dup5\n        /* \"#utility.yul\":1737:1815   */\n      tag_441\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":1729:1815   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1828:1903   */\n    tag_442:\n        /* \"#utility.yul\":1861:1867   */\n      0x00\n        /* \"#utility.yul\":1894:1896   */\n      0x40\n        /* \"#utility.yul\":1888:1897   */\n      mload\n        /* \"#utility.yul\":1878:1897   */\n      swap1\n      pop\n        /* \"#utility.yul\":1828:1903   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1909:2026   */\n    tag_443:\n        /* \"#utility.yul\":2018:2019   */\n      0x00\n        /* \"#utility.yul\":2015:2016   */\n      dup1\n        /* \"#utility.yul\":2008:2020   */\n      revert\n        /* \"#utility.yul\":2032:2149   */\n    tag_444:\n        /* \"#utility.yul\":2141:2142   */\n      0x00\n        /* \"#utility.yul\":2138:2139   */\n      dup1\n        /* \"#utility.yul\":2131:2143   */\n      revert\n        /* \"#utility.yul\":2155:2277   */\n    tag_445:\n        /* \"#utility.yul\":2228:2252   */\n      tag_528\n        /* \"#utility.yul\":2246:2251   */\n      dup2\n        /* \"#utility.yul\":2228:2252   */\n      tag_435\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2221:2226   */\n      dup2\n        /* \"#utility.yul\":2218:2253   */\n      eq\n        /* \"#utility.yul\":2208:2271   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":2267:2268   */\n      0x00\n        /* \"#utility.yul\":2264:2265   */\n      dup1\n        /* \"#utility.yul\":2257:2269   */\n      revert\n        /* \"#utility.yul\":2208:2271   */\n    tag_529:\n        /* \"#utility.yul\":2155:2277   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2283:2422   */\n    tag_446:\n        /* \"#utility.yul\":2329:2334   */\n      0x00\n        /* \"#utility.yul\":2367:2373   */\n      dup2\n        /* \"#utility.yul\":2354:2374   */\n      calldataload\n        /* \"#utility.yul\":2345:2374   */\n      swap1\n      pop\n        /* \"#utility.yul\":2383:2416   */\n      tag_531\n        /* \"#utility.yul\":2410:2415   */\n      dup2\n        /* \"#utility.yul\":2383:2416   */\n      tag_445\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":2283:2422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2505   */\n    tag_447:\n        /* \"#utility.yul\":2465:2472   */\n      0x00\n        /* \"#utility.yul\":2494:2499   */\n      dup2\n        /* \"#utility.yul\":2483:2499   */\n      swap1\n      pop\n        /* \"#utility.yul\":2428:2505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_448:\n        /* \"#utility.yul\":2584:2608   */\n      tag_534\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_447\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      dup1\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_535:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_449:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_537\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_448\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_46:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      dup1\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_540\n      tag_443\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":2877:2996   */\n    tag_539:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_541\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_446\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_542\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_449\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_450:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_451:\n        /* \"#utility.yul\":3441:3462   */\n      tag_545\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_450\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_49:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_547\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_451\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_53:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_550\n      tag_443\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":3801:3920   */\n    tag_549:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_551\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_446\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_552\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_446\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_553\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_446\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4434   */\n    tag_452:\n        /* \"#utility.yul\":4403:4427   */\n      tag_555\n        /* \"#utility.yul\":4421:4426   */\n      dup2\n        /* \"#utility.yul\":4403:4427   */\n      tag_447\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":4398:4401   */\n      dup3\n        /* \"#utility.yul\":4391:4428   */\n      mstore\n        /* \"#utility.yul\":4316:4434   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4440:4662   */\n    tag_59:\n        /* \"#utility.yul\":4533:4537   */\n      0x00\n        /* \"#utility.yul\":4571:4573   */\n      0x20\n        /* \"#utility.yul\":4560:4569   */\n      dup3\n        /* \"#utility.yul\":4556:4574   */\n      add\n        /* \"#utility.yul\":4548:4574   */\n      swap1\n      pop\n        /* \"#utility.yul\":4584:4655   */\n      tag_557\n        /* \"#utility.yul\":4652:4653   */\n      0x00\n        /* \"#utility.yul\":4641:4650   */\n      dup4\n        /* \"#utility.yul\":4637:4654   */\n      add\n        /* \"#utility.yul\":4628:4634   */\n      dup5\n        /* \"#utility.yul\":4584:4655   */\n      tag_452\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":4440:4662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4668:5287   */\n    tag_67:\n        /* \"#utility.yul\":4745:4751   */\n      0x00\n        /* \"#utility.yul\":4753:4759   */\n      dup1\n        /* \"#utility.yul\":4761:4767   */\n      0x00\n        /* \"#utility.yul\":4810:4812   */\n      0x60\n        /* \"#utility.yul\":4798:4807   */\n      dup5\n        /* \"#utility.yul\":4789:4796   */\n      dup7\n        /* \"#utility.yul\":4785:4808   */\n      sub\n        /* \"#utility.yul\":4781:4813   */\n      slt\n        /* \"#utility.yul\":4778:4897   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":4816:4895   */\n      tag_560\n      tag_443\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":4778:4897   */\n    tag_559:\n        /* \"#utility.yul\":4936:4937   */\n      0x00\n        /* \"#utility.yul\":4961:5014   */\n      tag_561\n        /* \"#utility.yul\":5006:5013   */\n      dup7\n        /* \"#utility.yul\":4997:5003   */\n      dup3\n        /* \"#utility.yul\":4986:4995   */\n      dup8\n        /* \"#utility.yul\":4982:5004   */\n      add\n        /* \"#utility.yul\":4961:5014   */\n      tag_446\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":4951:5014   */\n      swap4\n      pop\n        /* \"#utility.yul\":4907:5024   */\n      pop\n        /* \"#utility.yul\":5063:5065   */\n      0x20\n        /* \"#utility.yul\":5089:5142   */\n      tag_562\n        /* \"#utility.yul\":5134:5141   */\n      dup7\n        /* \"#utility.yul\":5125:5131   */\n      dup3\n        /* \"#utility.yul\":5114:5123   */\n      dup8\n        /* \"#utility.yul\":5110:5132   */\n      add\n        /* \"#utility.yul\":5089:5142   */\n      tag_446\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":5079:5142   */\n      swap3\n      pop\n        /* \"#utility.yul\":5034:5152   */\n      pop\n        /* \"#utility.yul\":5191:5193   */\n      0x40\n        /* \"#utility.yul\":5217:5270   */\n      tag_563\n        /* \"#utility.yul\":5262:5269   */\n      dup7\n        /* \"#utility.yul\":5253:5259   */\n      dup3\n        /* \"#utility.yul\":5242:5251   */\n      dup8\n        /* \"#utility.yul\":5238:5260   */\n      add\n        /* \"#utility.yul\":5217:5270   */\n      tag_449\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":5207:5270   */\n      swap2\n      pop\n        /* \"#utility.yul\":5162:5280   */\n      pop\n        /* \"#utility.yul\":4668:5287   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5293:5379   */\n    tag_453:\n        /* \"#utility.yul\":5328:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5372   */\n      0xff\n        /* \"#utility.yul\":5361:5366   */\n      dup3\n        /* \"#utility.yul\":5357:5373   */\n      and\n        /* \"#utility.yul\":5346:5373   */\n      swap1\n      pop\n        /* \"#utility.yul\":5293:5379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5385:5497   */\n    tag_454:\n        /* \"#utility.yul\":5468:5490   */\n      tag_566\n        /* \"#utility.yul\":5484:5489   */\n      dup2\n        /* \"#utility.yul\":5468:5490   */\n      tag_453\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":5463:5466   */\n      dup3\n        /* \"#utility.yul\":5456:5491   */\n      mstore\n        /* \"#utility.yul\":5385:5497   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5503:5717   */\n    tag_74:\n        /* \"#utility.yul\":5592:5596   */\n      0x00\n        /* \"#utility.yul\":5630:5632   */\n      0x20\n        /* \"#utility.yul\":5619:5628   */\n      dup3\n        /* \"#utility.yul\":5615:5633   */\n      add\n        /* \"#utility.yul\":5607:5633   */\n      swap1\n      pop\n        /* \"#utility.yul\":5643:5710   */\n      tag_568\n        /* \"#utility.yul\":5707:5708   */\n      0x00\n        /* \"#utility.yul\":5696:5705   */\n      dup4\n        /* \"#utility.yul\":5692:5709   */\n      add\n        /* \"#utility.yul\":5683:5689   */\n      dup5\n        /* \"#utility.yul\":5643:5710   */\n      tag_454\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":5503:5717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5723:6052   */\n    tag_78:\n        /* \"#utility.yul\":5782:5788   */\n      0x00\n        /* \"#utility.yul\":5831:5833   */\n      0x20\n        /* \"#utility.yul\":5819:5828   */\n      dup3\n        /* \"#utility.yul\":5810:5817   */\n      dup5\n        /* \"#utility.yul\":5806:5829   */\n      sub\n        /* \"#utility.yul\":5802:5834   */\n      slt\n        /* \"#utility.yul\":5799:5918   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":5837:5916   */\n      tag_571\n      tag_443\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":5799:5918   */\n    tag_570:\n        /* \"#utility.yul\":5957:5958   */\n      0x00\n        /* \"#utility.yul\":5982:6035   */\n      tag_572\n        /* \"#utility.yul\":6027:6034   */\n      dup5\n        /* \"#utility.yul\":6018:6024   */\n      dup3\n        /* \"#utility.yul\":6007:6016   */\n      dup6\n        /* \"#utility.yul\":6003:6025   */\n      add\n        /* \"#utility.yul\":5982:6035   */\n      tag_446\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":5972:6035   */\n      swap2\n      pop\n        /* \"#utility.yul\":5928:6045   */\n      pop\n        /* \"#utility.yul\":5723:6052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6175   */\n    tag_455:\n        /* \"#utility.yul\":6167:6168   */\n      0x00\n        /* \"#utility.yul\":6164:6165   */\n      dup1\n        /* \"#utility.yul\":6157:6169   */\n      revert\n        /* \"#utility.yul\":6181:6298   */\n    tag_456:\n        /* \"#utility.yul\":6290:6291   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      dup1\n        /* \"#utility.yul\":6280:6292   */\n      revert\n        /* \"#utility.yul\":6304:6484   */\n    tag_457:\n        /* \"#utility.yul\":6352:6429   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6349:6350   */\n      0x00\n        /* \"#utility.yul\":6342:6430   */\n      mstore\n        /* \"#utility.yul\":6449:6453   */\n      0x41\n        /* \"#utility.yul\":6446:6447   */\n      0x04\n        /* \"#utility.yul\":6439:6454   */\n      mstore\n        /* \"#utility.yul\":6473:6477   */\n      0x24\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6463:6478   */\n      revert\n        /* \"#utility.yul\":6490:6771   */\n    tag_458:\n        /* \"#utility.yul\":6573:6600   */\n      tag_577\n        /* \"#utility.yul\":6595:6599   */\n      dup3\n        /* \"#utility.yul\":6573:6600   */\n      tag_440\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":6565:6571   */\n      dup2\n        /* \"#utility.yul\":6561:6601   */\n      add\n        /* \"#utility.yul\":6703:6709   */\n      dup2\n        /* \"#utility.yul\":6691:6701   */\n      dup2\n        /* \"#utility.yul\":6688:6710   */\n      lt\n        /* \"#utility.yul\":6667:6685   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6655:6665   */\n      dup3\n        /* \"#utility.yul\":6652:6686   */\n      gt\n        /* \"#utility.yul\":6649:6711   */\n      or\n        /* \"#utility.yul\":6646:6734   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":6714:6732   */\n      tag_579\n      tag_457\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":6646:6734   */\n    tag_578:\n        /* \"#utility.yul\":6754:6764   */\n      dup1\n        /* \"#utility.yul\":6750:6752   */\n      0x40\n        /* \"#utility.yul\":6743:6765   */\n      mstore\n        /* \"#utility.yul\":6533:6771   */\n      pop\n        /* \"#utility.yul\":6490:6771   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6777:6906   */\n    tag_459:\n        /* \"#utility.yul\":6811:6817   */\n      0x00\n        /* \"#utility.yul\":6838:6858   */\n      tag_581\n      tag_442\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":6828:6858   */\n      swap1\n      pop\n        /* \"#utility.yul\":6867:6900   */\n      tag_582\n        /* \"#utility.yul\":6895:6899   */\n      dup3\n        /* \"#utility.yul\":6887:6893   */\n      dup3\n        /* \"#utility.yul\":6867:6900   */\n      tag_458\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":6777:6906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6912:7219   */\n    tag_460:\n        /* \"#utility.yul\":6973:6977   */\n      0x00\n        /* \"#utility.yul\":7063:7081   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7055:7061   */\n      dup3\n        /* \"#utility.yul\":7052:7082   */\n      gt\n        /* \"#utility.yul\":7049:7105   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":7085:7103   */\n      tag_585\n      tag_457\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":7049:7105   */\n    tag_584:\n        /* \"#utility.yul\":7123:7152   */\n      tag_586\n        /* \"#utility.yul\":7145:7151   */\n      dup3\n        /* \"#utility.yul\":7123:7152   */\n      tag_440\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":7115:7152   */\n      swap1\n      pop\n        /* \"#utility.yul\":7207:7211   */\n      0x20\n        /* \"#utility.yul\":7201:7205   */\n      dup2\n        /* \"#utility.yul\":7197:7212   */\n      add\n        /* \"#utility.yul\":7189:7212   */\n      swap1\n      pop\n        /* \"#utility.yul\":6912:7219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7225:7373   */\n    tag_461:\n        /* \"#utility.yul\":7323:7329   */\n      dup3\n        /* \"#utility.yul\":7318:7321   */\n      dup2\n        /* \"#utility.yul\":7313:7316   */\n      dup4\n        /* \"#utility.yul\":7300:7330   */\n      calldatacopy\n        /* \"#utility.yul\":7364:7365   */\n      0x00\n        /* \"#utility.yul\":7355:7361   */\n      dup4\n        /* \"#utility.yul\":7350:7353   */\n      dup4\n        /* \"#utility.yul\":7346:7362   */\n      add\n        /* \"#utility.yul\":7339:7366   */\n      mstore\n        /* \"#utility.yul\":7225:7373   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7379:7802   */\n    tag_462:\n        /* \"#utility.yul\":7456:7461   */\n      0x00\n        /* \"#utility.yul\":7481:7546   */\n      tag_589\n        /* \"#utility.yul\":7497:7545   */\n      tag_590\n        /* \"#utility.yul\":7538:7544   */\n      dup5\n        /* \"#utility.yul\":7497:7545   */\n      tag_460\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":7481:7546   */\n      tag_459\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":7472:7546   */\n      swap1\n      pop\n        /* \"#utility.yul\":7569:7575   */\n      dup3\n        /* \"#utility.yul\":7562:7567   */\n      dup2\n        /* \"#utility.yul\":7555:7576   */\n      mstore\n        /* \"#utility.yul\":7607:7611   */\n      0x20\n        /* \"#utility.yul\":7600:7605   */\n      dup2\n        /* \"#utility.yul\":7596:7612   */\n      add\n        /* \"#utility.yul\":7645:7648   */\n      dup5\n        /* \"#utility.yul\":7636:7642   */\n      dup5\n        /* \"#utility.yul\":7631:7634   */\n      dup5\n        /* \"#utility.yul\":7627:7643   */\n      add\n        /* \"#utility.yul\":7624:7649   */\n      gt\n        /* \"#utility.yul\":7621:7733   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":7652:7731   */\n      tag_592\n      tag_456\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":7621:7733   */\n    tag_591:\n        /* \"#utility.yul\":7742:7796   */\n      tag_593\n        /* \"#utility.yul\":7789:7795   */\n      dup5\n        /* \"#utility.yul\":7784:7787   */\n      dup3\n        /* \"#utility.yul\":7779:7782   */\n      dup6\n        /* \"#utility.yul\":7742:7796   */\n      tag_461\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":7462:7802   */\n      pop\n        /* \"#utility.yul\":7379:7802   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7821:8159   */\n    tag_463:\n        /* \"#utility.yul\":7876:7881   */\n      0x00\n        /* \"#utility.yul\":7925:7928   */\n      dup3\n        /* \"#utility.yul\":7918:7922   */\n      0x1f\n        /* \"#utility.yul\":7910:7916   */\n      dup4\n        /* \"#utility.yul\":7906:7923   */\n      add\n        /* \"#utility.yul\":7902:7929   */\n      slt\n        /* \"#utility.yul\":7892:8014   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":7933:8012   */\n      tag_596\n      tag_455\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":7892:8014   */\n    tag_595:\n        /* \"#utility.yul\":8050:8056   */\n      dup2\n        /* \"#utility.yul\":8037:8057   */\n      calldataload\n        /* \"#utility.yul\":8075:8153   */\n      tag_597\n        /* \"#utility.yul\":8149:8152   */\n      dup5\n        /* \"#utility.yul\":8141:8147   */\n      dup3\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8126:8132   */\n      dup7\n        /* \"#utility.yul\":8122:8139   */\n      add\n        /* \"#utility.yul\":8075:8153   */\n      tag_462\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":8066:8153   */\n      swap2\n      pop\n        /* \"#utility.yul\":7882:8159   */\n      pop\n        /* \"#utility.yul\":7821:8159   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8165:8817   */\n    tag_83:\n        /* \"#utility.yul\":8242:8248   */\n      0x00\n        /* \"#utility.yul\":8250:8256   */\n      dup1\n        /* \"#utility.yul\":8299:8301   */\n      0x40\n        /* \"#utility.yul\":8287:8296   */\n      dup4\n        /* \"#utility.yul\":8278:8285   */\n      dup6\n        /* \"#utility.yul\":8274:8297   */\n      sub\n        /* \"#utility.yul\":8270:8302   */\n      slt\n        /* \"#utility.yul\":8267:8386   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":8305:8384   */\n      tag_600\n      tag_443\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":8267:8386   */\n    tag_599:\n        /* \"#utility.yul\":8425:8426   */\n      0x00\n        /* \"#utility.yul\":8450:8503   */\n      tag_601\n        /* \"#utility.yul\":8495:8502   */\n      dup6\n        /* \"#utility.yul\":8486:8492   */\n      dup3\n        /* \"#utility.yul\":8475:8484   */\n      dup7\n        /* \"#utility.yul\":8471:8493   */\n      add\n        /* \"#utility.yul\":8450:8503   */\n      tag_446\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":8440:8503   */\n      swap3\n      pop\n        /* \"#utility.yul\":8396:8513   */\n      pop\n        /* \"#utility.yul\":8580:8582   */\n      0x20\n        /* \"#utility.yul\":8569:8578   */\n      dup4\n        /* \"#utility.yul\":8565:8583   */\n      add\n        /* \"#utility.yul\":8552:8584   */\n      calldataload\n        /* \"#utility.yul\":8611:8629   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8603:8609   */\n      dup2\n        /* \"#utility.yul\":8600:8630   */\n      gt\n        /* \"#utility.yul\":8597:8714   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":8633:8712   */\n      tag_603\n      tag_444\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":8597:8714   */\n    tag_602:\n        /* \"#utility.yul\":8738:8800   */\n      tag_604\n        /* \"#utility.yul\":8792:8799   */\n      dup6\n        /* \"#utility.yul\":8783:8789   */\n      dup3\n        /* \"#utility.yul\":8772:8781   */\n      dup7\n        /* \"#utility.yul\":8768:8790   */\n      add\n        /* \"#utility.yul\":8738:8800   */\n      tag_463\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":8728:8800   */\n      swap2\n      pop\n        /* \"#utility.yul\":8523:8810   */\n      pop\n        /* \"#utility.yul\":8165:8817   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8823:8900   */\n    tag_464:\n        /* \"#utility.yul\":8860:8867   */\n      0x00\n        /* \"#utility.yul\":8889:8894   */\n      dup2\n        /* \"#utility.yul\":8878:8894   */\n      swap1\n      pop\n        /* \"#utility.yul\":8823:8900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8906:9024   */\n    tag_465:\n        /* \"#utility.yul\":8993:9017   */\n      tag_607\n        /* \"#utility.yul\":9011:9016   */\n      dup2\n        /* \"#utility.yul\":8993:9017   */\n      tag_464\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":8988:8991   */\n      dup3\n        /* \"#utility.yul\":8981:9018   */\n      mstore\n        /* \"#utility.yul\":8906:9024   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9030:9252   */\n    tag_89:\n        /* \"#utility.yul\":9123:9127   */\n      0x00\n        /* \"#utility.yul\":9161:9163   */\n      0x20\n        /* \"#utility.yul\":9150:9159   */\n      dup3\n        /* \"#utility.yul\":9146:9164   */\n      add\n        /* \"#utility.yul\":9138:9164   */\n      swap1\n      pop\n        /* \"#utility.yul\":9174:9245   */\n      tag_609\n        /* \"#utility.yul\":9242:9243   */\n      0x00\n        /* \"#utility.yul\":9231:9240   */\n      dup4\n        /* \"#utility.yul\":9227:9244   */\n      add\n        /* \"#utility.yul\":9218:9224   */\n      dup5\n        /* \"#utility.yul\":9174:9245   */\n      tag_465\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":9030:9252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9258:9374   */\n    tag_466:\n        /* \"#utility.yul\":9328:9349   */\n      tag_611\n        /* \"#utility.yul\":9343:9348   */\n      dup2\n        /* \"#utility.yul\":9328:9349   */\n      tag_450\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":9321:9326   */\n      dup2\n        /* \"#utility.yul\":9318:9350   */\n      eq\n        /* \"#utility.yul\":9308:9368   */\n      tag_612\n      jumpi\n        /* \"#utility.yul\":9364:9365   */\n      0x00\n        /* \"#utility.yul\":9361:9362   */\n      dup1\n        /* \"#utility.yul\":9354:9366   */\n      revert\n        /* \"#utility.yul\":9308:9368   */\n    tag_612:\n        /* \"#utility.yul\":9258:9374   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9380:9513   */\n    tag_467:\n        /* \"#utility.yul\":9423:9428   */\n      0x00\n        /* \"#utility.yul\":9461:9467   */\n      dup2\n        /* \"#utility.yul\":9448:9468   */\n      calldataload\n        /* \"#utility.yul\":9439:9468   */\n      swap1\n      pop\n        /* \"#utility.yul\":9477:9507   */\n      tag_614\n        /* \"#utility.yul\":9501:9506   */\n      dup2\n        /* \"#utility.yul\":9477:9507   */\n      tag_466\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":9380:9513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9519:9987   */\n    tag_93:\n        /* \"#utility.yul\":9584:9590   */\n      0x00\n        /* \"#utility.yul\":9592:9598   */\n      dup1\n        /* \"#utility.yul\":9641:9643   */\n      0x40\n        /* \"#utility.yul\":9629:9638   */\n      dup4\n        /* \"#utility.yul\":9620:9627   */\n      dup6\n        /* \"#utility.yul\":9616:9639   */\n      sub\n        /* \"#utility.yul\":9612:9644   */\n      slt\n        /* \"#utility.yul\":9609:9728   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":9647:9726   */\n      tag_617\n      tag_443\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":9609:9728   */\n    tag_616:\n        /* \"#utility.yul\":9767:9768   */\n      0x00\n        /* \"#utility.yul\":9792:9845   */\n      tag_618\n        /* \"#utility.yul\":9837:9844   */\n      dup6\n        /* \"#utility.yul\":9828:9834   */\n      dup3\n        /* \"#utility.yul\":9817:9826   */\n      dup7\n        /* \"#utility.yul\":9813:9835   */\n      add\n        /* \"#utility.yul\":9792:9845   */\n      tag_446\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":9782:9845   */\n      swap3\n      pop\n        /* \"#utility.yul\":9738:9855   */\n      pop\n        /* \"#utility.yul\":9894:9896   */\n      0x20\n        /* \"#utility.yul\":9920:9970   */\n      tag_619\n        /* \"#utility.yul\":9962:9969   */\n      dup6\n        /* \"#utility.yul\":9953:9959   */\n      dup3\n        /* \"#utility.yul\":9942:9951   */\n      dup7\n        /* \"#utility.yul\":9938:9960   */\n      add\n        /* \"#utility.yul\":9920:9970   */\n      tag_467\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":9910:9970   */\n      swap2\n      pop\n        /* \"#utility.yul\":9865:9980   */\n      pop\n        /* \"#utility.yul\":9519:9987   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9993:10467   */\n    tag_142:\n        /* \"#utility.yul\":10061:10067   */\n      0x00\n        /* \"#utility.yul\":10069:10075   */\n      dup1\n        /* \"#utility.yul\":10118:10120   */\n      0x40\n        /* \"#utility.yul\":10106:10115   */\n      dup4\n        /* \"#utility.yul\":10097:10104   */\n      dup6\n        /* \"#utility.yul\":10093:10116   */\n      sub\n        /* \"#utility.yul\":10089:10121   */\n      slt\n        /* \"#utility.yul\":10086:10205   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":10124:10203   */\n      tag_622\n      tag_443\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":10086:10205   */\n    tag_621:\n        /* \"#utility.yul\":10244:10245   */\n      0x00\n        /* \"#utility.yul\":10269:10322   */\n      tag_623\n        /* \"#utility.yul\":10314:10321   */\n      dup6\n        /* \"#utility.yul\":10305:10311   */\n      dup3\n        /* \"#utility.yul\":10294:10303   */\n      dup7\n        /* \"#utility.yul\":10290:10312   */\n      add\n        /* \"#utility.yul\":10269:10322   */\n      tag_446\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":10259:10322   */\n      swap3\n      pop\n        /* \"#utility.yul\":10215:10332   */\n      pop\n        /* \"#utility.yul\":10371:10373   */\n      0x20\n        /* \"#utility.yul\":10397:10450   */\n      tag_624\n        /* \"#utility.yul\":10442:10449   */\n      dup6\n        /* \"#utility.yul\":10433:10439   */\n      dup3\n        /* \"#utility.yul\":10422:10431   */\n      dup7\n        /* \"#utility.yul\":10418:10440   */\n      add\n        /* \"#utility.yul\":10397:10450   */\n      tag_446\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":10387:10450   */\n      swap2\n      pop\n        /* \"#utility.yul\":10342:10460   */\n      pop\n        /* \"#utility.yul\":9993:10467   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10473:10653   */\n    tag_468:\n        /* \"#utility.yul\":10521:10598   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10518:10519   */\n      0x00\n        /* \"#utility.yul\":10511:10599   */\n      mstore\n        /* \"#utility.yul\":10618:10622   */\n      0x22\n        /* \"#utility.yul\":10615:10616   */\n      0x04\n        /* \"#utility.yul\":10608:10623   */\n      mstore\n        /* \"#utility.yul\":10642:10646   */\n      0x24\n        /* \"#utility.yul\":10639:10640   */\n      0x00\n        /* \"#utility.yul\":10632:10647   */\n      revert\n        /* \"#utility.yul\":10659:10979   */\n    tag_157:\n        /* \"#utility.yul\":10703:10709   */\n      0x00\n        /* \"#utility.yul\":10740:10741   */\n      0x02\n        /* \"#utility.yul\":10734:10738   */\n      dup3\n        /* \"#utility.yul\":10730:10742   */\n      div\n        /* \"#utility.yul\":10720:10742   */\n      swap1\n      pop\n        /* \"#utility.yul\":10787:10788   */\n      0x01\n        /* \"#utility.yul\":10781:10785   */\n      dup3\n        /* \"#utility.yul\":10777:10789   */\n      and\n        /* \"#utility.yul\":10808:10826   */\n      dup1\n        /* \"#utility.yul\":10798:10879   */\n      tag_627\n      jumpi\n        /* \"#utility.yul\":10864:10868   */\n      0x7f\n        /* \"#utility.yul\":10856:10862   */\n      dup3\n        /* \"#utility.yul\":10852:10869   */\n      and\n        /* \"#utility.yul\":10842:10869   */\n      swap2\n      pop\n        /* \"#utility.yul\":10798:10879   */\n    tag_627:\n        /* \"#utility.yul\":10926:10928   */\n      0x20\n        /* \"#utility.yul\":10918:10924   */\n      dup3\n        /* \"#utility.yul\":10915:10929   */\n      lt\n        /* \"#utility.yul\":10895:10913   */\n      dup2\n        /* \"#utility.yul\":10892:10930   */\n      sub\n        /* \"#utility.yul\":10889:10973   */\n      tag_628\n      jumpi\n        /* \"#utility.yul\":10945:10963   */\n      tag_629\n      tag_468\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":10889:10973   */\n    tag_628:\n        /* \"#utility.yul\":10710:10979   */\n      pop\n        /* \"#utility.yul\":10659:10979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10985:11161   */\n    tag_469:\n        /* \"#utility.yul\":11125:11153   */\n      0x4275726e2077616c6c65742063616e6e6f74206265207a65726f000000000000\n        /* \"#utility.yul\":11121:11122   */\n      0x00\n        /* \"#utility.yul\":11113:11119   */\n      dup3\n        /* \"#utility.yul\":11109:11123   */\n      add\n        /* \"#utility.yul\":11102:11154   */\n      mstore\n        /* \"#utility.yul\":10985:11161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11167:11533   */\n    tag_470:\n        /* \"#utility.yul\":11309:11312   */\n      0x00\n        /* \"#utility.yul\":11330:11397   */\n      tag_632\n        /* \"#utility.yul\":11394:11396   */\n      0x1a\n        /* \"#utility.yul\":11389:11392   */\n      dup4\n        /* \"#utility.yul\":11330:11397   */\n      tag_438\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":11323:11397   */\n      swap2\n      pop\n        /* \"#utility.yul\":11406:11499   */\n      tag_633\n        /* \"#utility.yul\":11495:11498   */\n      dup3\n        /* \"#utility.yul\":11406:11499   */\n      tag_469\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":11524:11526   */\n      0x20\n        /* \"#utility.yul\":11519:11522   */\n      dup3\n        /* \"#utility.yul\":11515:11527   */\n      add\n        /* \"#utility.yul\":11508:11527   */\n      swap1\n      pop\n        /* \"#utility.yul\":11167:11533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11539:11958   */\n    tag_173:\n        /* \"#utility.yul\":11705:11709   */\n      0x00\n        /* \"#utility.yul\":11743:11745   */\n      0x20\n        /* \"#utility.yul\":11732:11741   */\n      dup3\n        /* \"#utility.yul\":11728:11746   */\n      add\n        /* \"#utility.yul\":11720:11746   */\n      swap1\n      pop\n        /* \"#utility.yul\":11792:11801   */\n      dup2\n        /* \"#utility.yul\":11786:11790   */\n      dup2\n        /* \"#utility.yul\":11782:11802   */\n      sub\n        /* \"#utility.yul\":11778:11779   */\n      0x00\n        /* \"#utility.yul\":11767:11776   */\n      dup4\n        /* \"#utility.yul\":11763:11780   */\n      add\n        /* \"#utility.yul\":11756:11803   */\n      mstore\n        /* \"#utility.yul\":11820:11951   */\n      tag_635\n        /* \"#utility.yul\":11946:11950   */\n      dup2\n        /* \"#utility.yul\":11820:11951   */\n      tag_470\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":11812:11951   */\n      swap1\n      pop\n        /* \"#utility.yul\":11539:11958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11964:12143   */\n    tag_471:\n        /* \"#utility.yul\":12104:12135   */\n      0x5574696c6974792077616c6c65742063616e6e6f74206265207a65726f000000\n        /* \"#utility.yul\":12100:12101   */\n      0x00\n        /* \"#utility.yul\":12092:12098   */\n      dup3\n        /* \"#utility.yul\":12088:12102   */\n      add\n        /* \"#utility.yul\":12081:12136   */\n      mstore\n        /* \"#utility.yul\":11964:12143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12149:12515   */\n    tag_472:\n        /* \"#utility.yul\":12291:12294   */\n      0x00\n        /* \"#utility.yul\":12312:12379   */\n      tag_638\n        /* \"#utility.yul\":12376:12378   */\n      0x1d\n        /* \"#utility.yul\":12371:12374   */\n      dup4\n        /* \"#utility.yul\":12312:12379   */\n      tag_438\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":12305:12379   */\n      swap2\n      pop\n        /* \"#utility.yul\":12388:12481   */\n      tag_639\n        /* \"#utility.yul\":12477:12480   */\n      dup3\n        /* \"#utility.yul\":12388:12481   */\n      tag_471\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":12506:12508   */\n      0x20\n        /* \"#utility.yul\":12501:12504   */\n      dup3\n        /* \"#utility.yul\":12497:12509   */\n      add\n        /* \"#utility.yul\":12490:12509   */\n      swap1\n      pop\n        /* \"#utility.yul\":12149:12515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12521:12940   */\n    tag_176:\n        /* \"#utility.yul\":12687:12691   */\n      0x00\n        /* \"#utility.yul\":12725:12727   */\n      0x20\n        /* \"#utility.yul\":12714:12723   */\n      dup3\n        /* \"#utility.yul\":12710:12728   */\n      add\n        /* \"#utility.yul\":12702:12728   */\n      swap1\n      pop\n        /* \"#utility.yul\":12774:12783   */\n      dup2\n        /* \"#utility.yul\":12768:12772   */\n      dup2\n        /* \"#utility.yul\":12764:12784   */\n      sub\n        /* \"#utility.yul\":12760:12761   */\n      0x00\n        /* \"#utility.yul\":12749:12758   */\n      dup4\n        /* \"#utility.yul\":12745:12762   */\n      add\n        /* \"#utility.yul\":12738:12785   */\n      mstore\n        /* \"#utility.yul\":12802:12933   */\n      tag_641\n        /* \"#utility.yul\":12928:12932   */\n      dup2\n        /* \"#utility.yul\":12802:12933   */\n      tag_472\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":12794:12933   */\n      swap1\n      pop\n        /* \"#utility.yul\":12521:12940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12946:13127   */\n    tag_473:\n        /* \"#utility.yul\":13086:13119   */\n      0x4c69717569646974792077616c6c65742063616e6e6f74206265207a65726f00\n        /* \"#utility.yul\":13082:13083   */\n      0x00\n        /* \"#utility.yul\":13074:13080   */\n      dup3\n        /* \"#utility.yul\":13070:13084   */\n      add\n        /* \"#utility.yul\":13063:13120   */\n      mstore\n        /* \"#utility.yul\":12946:13127   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13133:13499   */\n    tag_474:\n        /* \"#utility.yul\":13275:13278   */\n      0x00\n        /* \"#utility.yul\":13296:13363   */\n      tag_644\n        /* \"#utility.yul\":13360:13362   */\n      0x1f\n        /* \"#utility.yul\":13355:13358   */\n      dup4\n        /* \"#utility.yul\":13296:13363   */\n      tag_438\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":13289:13363   */\n      swap2\n      pop\n        /* \"#utility.yul\":13372:13465   */\n      tag_645\n        /* \"#utility.yul\":13461:13464   */\n      dup3\n        /* \"#utility.yul\":13372:13465   */\n      tag_473\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":13490:13492   */\n      0x20\n        /* \"#utility.yul\":13485:13488   */\n      dup3\n        /* \"#utility.yul\":13481:13493   */\n      add\n        /* \"#utility.yul\":13474:13493   */\n      swap1\n      pop\n        /* \"#utility.yul\":13133:13499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13505:13924   */\n    tag_179:\n        /* \"#utility.yul\":13671:13675   */\n      0x00\n        /* \"#utility.yul\":13709:13711   */\n      0x20\n        /* \"#utility.yul\":13698:13707   */\n      dup3\n        /* \"#utility.yul\":13694:13712   */\n      add\n        /* \"#utility.yul\":13686:13712   */\n      swap1\n      pop\n        /* \"#utility.yul\":13758:13767   */\n      dup2\n        /* \"#utility.yul\":13752:13756   */\n      dup2\n        /* \"#utility.yul\":13748:13768   */\n      sub\n        /* \"#utility.yul\":13744:13745   */\n      0x00\n        /* \"#utility.yul\":13733:13742   */\n      dup4\n        /* \"#utility.yul\":13729:13746   */\n      add\n        /* \"#utility.yul\":13722:13769   */\n      mstore\n        /* \"#utility.yul\":13786:13917   */\n      tag_647\n        /* \"#utility.yul\":13912:13916   */\n      dup2\n        /* \"#utility.yul\":13786:13917   */\n      tag_474\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":13778:13917   */\n      swap1\n      pop\n        /* \"#utility.yul\":13505:13924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13930:14110   */\n    tag_475:\n        /* \"#utility.yul\":13978:14055   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13975:13976   */\n      0x00\n        /* \"#utility.yul\":13968:14056   */\n      mstore\n        /* \"#utility.yul\":14075:14079   */\n      0x11\n        /* \"#utility.yul\":14072:14073   */\n      0x04\n        /* \"#utility.yul\":14065:14080   */\n      mstore\n        /* \"#utility.yul\":14099:14103   */\n      0x24\n        /* \"#utility.yul\":14096:14097   */\n      0x00\n        /* \"#utility.yul\":14089:14104   */\n      revert\n        /* \"#utility.yul\":14116:14307   */\n    tag_184:\n        /* \"#utility.yul\":14156:14159   */\n      0x00\n        /* \"#utility.yul\":14175:14195   */\n      tag_650\n        /* \"#utility.yul\":14193:14194   */\n      dup3\n        /* \"#utility.yul\":14175:14195   */\n      tag_447\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":14170:14195   */\n      swap2\n      pop\n        /* \"#utility.yul\":14209:14229   */\n      tag_651\n        /* \"#utility.yul\":14227:14228   */\n      dup4\n        /* \"#utility.yul\":14209:14229   */\n      tag_447\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":14204:14229   */\n      swap3\n      pop\n        /* \"#utility.yul\":14252:14253   */\n      dup3\n        /* \"#utility.yul\":14249:14250   */\n      dup3\n        /* \"#utility.yul\":14245:14254   */\n      add\n        /* \"#utility.yul\":14238:14254   */\n      swap1\n      pop\n        /* \"#utility.yul\":14273:14276   */\n      dup1\n        /* \"#utility.yul\":14270:14271   */\n      dup3\n        /* \"#utility.yul\":14267:14277   */\n      gt\n        /* \"#utility.yul\":14264:14300   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":14280:14298   */\n      tag_653\n      tag_475\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":14264:14300   */\n    tag_652:\n        /* \"#utility.yul\":14116:14307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14313:14486   */\n    tag_476:\n        /* \"#utility.yul\":14453:14478   */\n      0x496e76616c6964206163636f756e742061646472657373000000000000000000\n        /* \"#utility.yul\":14449:14450   */\n      0x00\n        /* \"#utility.yul\":14441:14447   */\n      dup3\n        /* \"#utility.yul\":14437:14451   */\n      add\n        /* \"#utility.yul\":14430:14479   */\n      mstore\n        /* \"#utility.yul\":14313:14486   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14492:14858   */\n    tag_477:\n        /* \"#utility.yul\":14634:14637   */\n      0x00\n        /* \"#utility.yul\":14655:14722   */\n      tag_656\n        /* \"#utility.yul\":14719:14721   */\n      0x17\n        /* \"#utility.yul\":14714:14717   */\n      dup4\n        /* \"#utility.yul\":14655:14722   */\n      tag_438\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":14648:14722   */\n      swap2\n      pop\n        /* \"#utility.yul\":14731:14824   */\n      tag_657\n        /* \"#utility.yul\":14820:14823   */\n      dup3\n        /* \"#utility.yul\":14731:14824   */\n      tag_476\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":14849:14851   */\n      0x20\n        /* \"#utility.yul\":14844:14847   */\n      dup3\n        /* \"#utility.yul\":14840:14852   */\n      add\n        /* \"#utility.yul\":14833:14852   */\n      swap1\n      pop\n        /* \"#utility.yul\":14492:14858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14864:15283   */\n    tag_210:\n        /* \"#utility.yul\":15030:15034   */\n      0x00\n        /* \"#utility.yul\":15068:15070   */\n      0x20\n        /* \"#utility.yul\":15057:15066   */\n      dup3\n        /* \"#utility.yul\":15053:15071   */\n      add\n        /* \"#utility.yul\":15045:15071   */\n      swap1\n      pop\n        /* \"#utility.yul\":15117:15126   */\n      dup2\n        /* \"#utility.yul\":15111:15115   */\n      dup2\n        /* \"#utility.yul\":15107:15127   */\n      sub\n        /* \"#utility.yul\":15103:15104   */\n      0x00\n        /* \"#utility.yul\":15092:15101   */\n      dup4\n        /* \"#utility.yul\":15088:15105   */\n      add\n        /* \"#utility.yul\":15081:15128   */\n      mstore\n        /* \"#utility.yul\":15145:15276   */\n      tag_659\n        /* \"#utility.yul\":15271:15275   */\n      dup2\n        /* \"#utility.yul\":15145:15276   */\n      tag_477\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":15137:15276   */\n      swap1\n      pop\n        /* \"#utility.yul\":14864:15283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15289:15374   */\n    tag_478:\n        /* \"#utility.yul\":15334:15341   */\n      0x00\n        /* \"#utility.yul\":15363:15368   */\n      dup2\n        /* \"#utility.yul\":15352:15368   */\n      swap1\n      pop\n        /* \"#utility.yul\":15289:15374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15380:15481   */\n    tag_479:\n        /* \"#utility.yul\":15416:15423   */\n      0x00\n        /* \"#utility.yul\":15456:15474   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15449:15454   */\n      dup3\n        /* \"#utility.yul\":15445:15475   */\n      and\n        /* \"#utility.yul\":15434:15475   */\n      swap1\n      pop\n        /* \"#utility.yul\":15380:15481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15487:15547   */\n    tag_480:\n        /* \"#utility.yul\":15515:15518   */\n      0x00\n        /* \"#utility.yul\":15536:15541   */\n      dup2\n        /* \"#utility.yul\":15529:15541   */\n      swap1\n      pop\n        /* \"#utility.yul\":15487:15547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15553:15709   */\n    tag_481:\n        /* \"#utility.yul\":15610:15619   */\n      0x00\n        /* \"#utility.yul\":15643:15703   */\n      tag_664\n        /* \"#utility.yul\":15660:15702   */\n      tag_665\n        /* \"#utility.yul\":15669:15701   */\n      tag_666\n        /* \"#utility.yul\":15695:15700   */\n      dup5\n        /* \"#utility.yul\":15669:15701   */\n      tag_478\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":15660:15702   */\n      tag_480\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":15643:15703   */\n      tag_479\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":15630:15703   */\n      swap1\n      pop\n        /* \"#utility.yul\":15553:15709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15715:15860   */\n    tag_482:\n        /* \"#utility.yul\":15809:15853   */\n      tag_668\n        /* \"#utility.yul\":15847:15852   */\n      dup2\n        /* \"#utility.yul\":15809:15853   */\n      tag_481\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":15804:15807   */\n      dup3\n        /* \"#utility.yul\":15797:15854   */\n      mstore\n        /* \"#utility.yul\":15715:15860   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15866:16102   */\n    tag_237:\n        /* \"#utility.yul\":15966:15970   */\n      0x00\n        /* \"#utility.yul\":16004:16006   */\n      0x20\n        /* \"#utility.yul\":15993:16002   */\n      dup3\n        /* \"#utility.yul\":15989:16007   */\n      add\n        /* \"#utility.yul\":15981:16007   */\n      swap1\n      pop\n        /* \"#utility.yul\":16017:16095   */\n      tag_670\n        /* \"#utility.yul\":16092:16093   */\n      0x00\n        /* \"#utility.yul\":16081:16090   */\n      dup4\n        /* \"#utility.yul\":16077:16094   */\n      add\n        /* \"#utility.yul\":16068:16074   */\n      dup5\n        /* \"#utility.yul\":16017:16095   */\n      tag_482\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":15866:16102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16108:16550   */\n    tag_275:\n        /* \"#utility.yul\":16257:16261   */\n      0x00\n        /* \"#utility.yul\":16295:16297   */\n      0x60\n        /* \"#utility.yul\":16284:16293   */\n      dup3\n        /* \"#utility.yul\":16280:16298   */\n      add\n        /* \"#utility.yul\":16272:16298   */\n      swap1\n      pop\n        /* \"#utility.yul\":16308:16379   */\n      tag_672\n        /* \"#utility.yul\":16376:16377   */\n      0x00\n        /* \"#utility.yul\":16365:16374   */\n      dup4\n        /* \"#utility.yul\":16361:16378   */\n      add\n        /* \"#utility.yul\":16352:16358   */\n      dup7\n        /* \"#utility.yul\":16308:16379   */\n      tag_436\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":16389:16461   */\n      tag_673\n        /* \"#utility.yul\":16457:16459   */\n      0x20\n        /* \"#utility.yul\":16446:16455   */\n      dup4\n        /* \"#utility.yul\":16442:16460   */\n      add\n        /* \"#utility.yul\":16433:16439   */\n      dup6\n        /* \"#utility.yul\":16389:16461   */\n      tag_452\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":16471:16543   */\n      tag_674\n        /* \"#utility.yul\":16539:16541   */\n      0x40\n        /* \"#utility.yul\":16528:16537   */\n      dup4\n        /* \"#utility.yul\":16524:16542   */\n      add\n        /* \"#utility.yul\":16515:16521   */\n      dup5\n        /* \"#utility.yul\":16471:16543   */\n      tag_452\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":16108:16550   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16556:16966   */\n    tag_285:\n        /* \"#utility.yul\":16596:16603   */\n      0x00\n        /* \"#utility.yul\":16619:16639   */\n      tag_676\n        /* \"#utility.yul\":16637:16638   */\n      dup3\n        /* \"#utility.yul\":16619:16639   */\n      tag_447\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":16614:16639   */\n      swap2\n      pop\n        /* \"#utility.yul\":16653:16673   */\n      tag_677\n        /* \"#utility.yul\":16671:16672   */\n      dup4\n        /* \"#utility.yul\":16653:16673   */\n      tag_447\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":16648:16673   */\n      swap3\n      pop\n        /* \"#utility.yul\":16708:16709   */\n      dup3\n        /* \"#utility.yul\":16705:16706   */\n      dup3\n        /* \"#utility.yul\":16701:16710   */\n      mul\n        /* \"#utility.yul\":16730:16760   */\n      tag_678\n        /* \"#utility.yul\":16748:16759   */\n      dup2\n        /* \"#utility.yul\":16730:16760   */\n      tag_447\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":16719:16760   */\n      swap2\n      pop\n        /* \"#utility.yul\":16909:16910   */\n      dup3\n        /* \"#utility.yul\":16900:16907   */\n      dup3\n        /* \"#utility.yul\":16896:16911   */\n      div\n        /* \"#utility.yul\":16893:16894   */\n      dup5\n        /* \"#utility.yul\":16890:16912   */\n      eq\n        /* \"#utility.yul\":16870:16871   */\n      dup4\n        /* \"#utility.yul\":16863:16872   */\n      iszero\n        /* \"#utility.yul\":16843:16926   */\n      or\n        /* \"#utility.yul\":16820:16959   */\n      tag_679\n      jumpi\n        /* \"#utility.yul\":16939:16957   */\n      tag_680\n      tag_475\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":16820:16959   */\n    tag_679:\n        /* \"#utility.yul\":16604:16966   */\n      pop\n        /* \"#utility.yul\":16556:16966   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16972:17152   */\n    tag_483:\n        /* \"#utility.yul\":17020:17097   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17017:17018   */\n      0x00\n        /* \"#utility.yul\":17010:17098   */\n      mstore\n        /* \"#utility.yul\":17117:17121   */\n      0x12\n        /* \"#utility.yul\":17114:17115   */\n      0x04\n        /* \"#utility.yul\":17107:17122   */\n      mstore\n        /* \"#utility.yul\":17141:17145   */\n      0x24\n        /* \"#utility.yul\":17138:17139   */\n      0x00\n        /* \"#utility.yul\":17131:17146   */\n      revert\n        /* \"#utility.yul\":17158:17343   */\n    tag_287:\n        /* \"#utility.yul\":17198:17199   */\n      0x00\n        /* \"#utility.yul\":17215:17235   */\n      tag_683\n        /* \"#utility.yul\":17233:17234   */\n      dup3\n        /* \"#utility.yul\":17215:17235   */\n      tag_447\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":17210:17235   */\n      swap2\n      pop\n        /* \"#utility.yul\":17249:17269   */\n      tag_684\n        /* \"#utility.yul\":17267:17268   */\n      dup4\n        /* \"#utility.yul\":17249:17269   */\n      tag_447\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":17244:17269   */\n      swap3\n      pop\n        /* \"#utility.yul\":17288:17289   */\n      dup3\n        /* \"#utility.yul\":17278:17313   */\n      tag_685\n      jumpi\n        /* \"#utility.yul\":17293:17311   */\n      tag_686\n      tag_483\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":17278:17313   */\n    tag_685:\n        /* \"#utility.yul\":17335:17336   */\n      dup3\n        /* \"#utility.yul\":17332:17333   */\n      dup3\n        /* \"#utility.yul\":17328:17337   */\n      div\n        /* \"#utility.yul\":17323:17337   */\n      swap1\n      pop\n        /* \"#utility.yul\":17158:17343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17349:17543   */\n    tag_293:\n        /* \"#utility.yul\":17389:17393   */\n      0x00\n        /* \"#utility.yul\":17409:17429   */\n      tag_688\n        /* \"#utility.yul\":17427:17428   */\n      dup3\n        /* \"#utility.yul\":17409:17429   */\n      tag_447\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":17404:17429   */\n      swap2\n      pop\n        /* \"#utility.yul\":17443:17463   */\n      tag_689\n        /* \"#utility.yul\":17461:17462   */\n      dup4\n        /* \"#utility.yul\":17443:17463   */\n      tag_447\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":17438:17463   */\n      swap3\n      pop\n        /* \"#utility.yul\":17487:17488   */\n      dup3\n        /* \"#utility.yul\":17484:17485   */\n      dup3\n        /* \"#utility.yul\":17480:17489   */\n      sub\n        /* \"#utility.yul\":17472:17489   */\n      swap1\n      pop\n        /* \"#utility.yul\":17511:17512   */\n      dup2\n        /* \"#utility.yul\":17505:17509   */\n      dup2\n        /* \"#utility.yul\":17502:17513   */\n      gt\n        /* \"#utility.yul\":17499:17536   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":17516:17534   */\n      tag_691\n      tag_475\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":17499:17536   */\n    tag_690:\n        /* \"#utility.yul\":17349:17543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17549:17671   */\n    tag_484:\n        /* \"#utility.yul\":17622:17646   */\n      tag_693\n        /* \"#utility.yul\":17640:17645   */\n      dup2\n        /* \"#utility.yul\":17622:17646   */\n      tag_464\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":17615:17620   */\n      dup2\n        /* \"#utility.yul\":17612:17647   */\n      eq\n        /* \"#utility.yul\":17602:17665   */\n      tag_694\n      jumpi\n        /* \"#utility.yul\":17661:17662   */\n      0x00\n        /* \"#utility.yul\":17658:17659   */\n      dup1\n        /* \"#utility.yul\":17651:17663   */\n      revert\n        /* \"#utility.yul\":17602:17665   */\n    tag_694:\n        /* \"#utility.yul\":17549:17671   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17677:17820   */\n    tag_485:\n        /* \"#utility.yul\":17734:17739   */\n      0x00\n        /* \"#utility.yul\":17765:17771   */\n      dup2\n        /* \"#utility.yul\":17759:17772   */\n      mload\n        /* \"#utility.yul\":17750:17772   */\n      swap1\n      pop\n        /* \"#utility.yul\":17781:17814   */\n      tag_696\n        /* \"#utility.yul\":17808:17813   */\n      dup2\n        /* \"#utility.yul\":17781:17814   */\n      tag_484\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":17677:17820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17826:18177   */\n    tag_311:\n        /* \"#utility.yul\":17896:17902   */\n      0x00\n        /* \"#utility.yul\":17945:17947   */\n      0x20\n        /* \"#utility.yul\":17933:17942   */\n      dup3\n        /* \"#utility.yul\":17924:17931   */\n      dup5\n        /* \"#utility.yul\":17920:17943   */\n      sub\n        /* \"#utility.yul\":17916:17948   */\n      slt\n        /* \"#utility.yul\":17913:18032   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":17951:18030   */\n      tag_699\n      tag_443\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":17913:18032   */\n    tag_698:\n        /* \"#utility.yul\":18071:18072   */\n      0x00\n        /* \"#utility.yul\":18096:18160   */\n      tag_700\n        /* \"#utility.yul\":18152:18159   */\n      dup5\n        /* \"#utility.yul\":18143:18149   */\n      dup3\n        /* \"#utility.yul\":18132:18141   */\n      dup6\n        /* \"#utility.yul\":18128:18150   */\n      add\n        /* \"#utility.yul\":18096:18160   */\n      tag_485\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":18086:18160   */\n      swap2\n      pop\n        /* \"#utility.yul\":18042:18170   */\n      pop\n        /* \"#utility.yul\":17826:18177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18183:18354   */\n    tag_486:\n        /* \"#utility.yul\":18323:18346   */\n      0x45524332303a206f776e776572206973207a65726f0000000000000000000000\n        /* \"#utility.yul\":18319:18320   */\n      0x00\n        /* \"#utility.yul\":18311:18317   */\n      dup3\n        /* \"#utility.yul\":18307:18321   */\n      add\n        /* \"#utility.yul\":18300:18347   */\n      mstore\n        /* \"#utility.yul\":18183:18354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18360:18726   */\n    tag_487:\n        /* \"#utility.yul\":18502:18505   */\n      0x00\n        /* \"#utility.yul\":18523:18590   */\n      tag_703\n        /* \"#utility.yul\":18587:18589   */\n      0x15\n        /* \"#utility.yul\":18582:18585   */\n      dup4\n        /* \"#utility.yul\":18523:18590   */\n      tag_438\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":18516:18590   */\n      swap2\n      pop\n        /* \"#utility.yul\":18599:18692   */\n      tag_704\n        /* \"#utility.yul\":18688:18691   */\n      dup3\n        /* \"#utility.yul\":18599:18692   */\n      tag_486\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":18717:18719   */\n      0x20\n        /* \"#utility.yul\":18712:18715   */\n      dup3\n        /* \"#utility.yul\":18708:18720   */\n      add\n        /* \"#utility.yul\":18701:18720   */\n      swap1\n      pop\n        /* \"#utility.yul\":18360:18726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18732:19151   */\n    tag_345:\n        /* \"#utility.yul\":18898:18902   */\n      0x00\n        /* \"#utility.yul\":18936:18938   */\n      0x20\n        /* \"#utility.yul\":18925:18934   */\n      dup3\n        /* \"#utility.yul\":18921:18939   */\n      add\n        /* \"#utility.yul\":18913:18939   */\n      swap1\n      pop\n        /* \"#utility.yul\":18985:18994   */\n      dup2\n        /* \"#utility.yul\":18979:18983   */\n      dup2\n        /* \"#utility.yul\":18975:18995   */\n      sub\n        /* \"#utility.yul\":18971:18972   */\n      0x00\n        /* \"#utility.yul\":18960:18969   */\n      dup4\n        /* \"#utility.yul\":18956:18973   */\n      add\n        /* \"#utility.yul\":18949:18996   */\n      mstore\n        /* \"#utility.yul\":19013:19144   */\n      tag_706\n        /* \"#utility.yul\":19139:19143   */\n      dup2\n        /* \"#utility.yul\":19013:19144   */\n      tag_487\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":19005:19144   */\n      swap1\n      pop\n        /* \"#utility.yul\":18732:19151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19157:19298   */\n    tag_488:\n        /* \"#utility.yul\":19206:19210   */\n      0x00\n        /* \"#utility.yul\":19229:19232   */\n      dup2\n        /* \"#utility.yul\":19221:19232   */\n      swap1\n      pop\n        /* \"#utility.yul\":19252:19255   */\n      dup2\n        /* \"#utility.yul\":19249:19250   */\n      0x00\n        /* \"#utility.yul\":19242:19256   */\n      mstore\n        /* \"#utility.yul\":19286:19290   */\n      0x20\n        /* \"#utility.yul\":19283:19284   */\n      0x00\n        /* \"#utility.yul\":19273:19291   */\n      keccak256\n        /* \"#utility.yul\":19265:19291   */\n      swap1\n      pop\n        /* \"#utility.yul\":19157:19298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19304:19397   */\n    tag_489:\n        /* \"#utility.yul\":19341:19347   */\n      0x00\n        /* \"#utility.yul\":19388:19390   */\n      0x20\n        /* \"#utility.yul\":19383:19385   */\n      0x1f\n        /* \"#utility.yul\":19376:19381   */\n      dup4\n        /* \"#utility.yul\":19372:19386   */\n      add\n        /* \"#utility.yul\":19368:19391   */\n      div\n        /* \"#utility.yul\":19358:19391   */\n      swap1\n      pop\n        /* \"#utility.yul\":19304:19397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19403:19510   */\n    tag_490:\n        /* \"#utility.yul\":19447:19455   */\n      0x00\n        /* \"#utility.yul\":19497:19502   */\n      dup3\n        /* \"#utility.yul\":19491:19495   */\n      dup3\n        /* \"#utility.yul\":19487:19503   */\n      shl\n        /* \"#utility.yul\":19466:19503   */\n      swap1\n      pop\n        /* \"#utility.yul\":19403:19510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19516:19909   */\n    tag_491:\n        /* \"#utility.yul\":19585:19591   */\n      0x00\n        /* \"#utility.yul\":19635:19636   */\n      0x08\n        /* \"#utility.yul\":19623:19633   */\n      dup4\n        /* \"#utility.yul\":19619:19637   */\n      mul\n        /* \"#utility.yul\":19658:19755   */\n      tag_711\n        /* \"#utility.yul\":19688:19754   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19677:19686   */\n      dup3\n        /* \"#utility.yul\":19658:19755   */\n      tag_490\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":19776:19815   */\n      tag_712\n        /* \"#utility.yul\":19806:19814   */\n      dup7\n        /* \"#utility.yul\":19795:19804   */\n      dup4\n        /* \"#utility.yul\":19776:19815   */\n      tag_490\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":19764:19815   */\n      swap6\n      pop\n        /* \"#utility.yul\":19848:19852   */\n      dup1\n        /* \"#utility.yul\":19844:19853   */\n      not\n        /* \"#utility.yul\":19837:19842   */\n      dup5\n        /* \"#utility.yul\":19833:19854   */\n      and\n        /* \"#utility.yul\":19824:19854   */\n      swap4\n      pop\n        /* \"#utility.yul\":19897:19901   */\n      dup1\n        /* \"#utility.yul\":19887:19895   */\n      dup7\n        /* \"#utility.yul\":19883:19902   */\n      and\n        /* \"#utility.yul\":19876:19881   */\n      dup5\n        /* \"#utility.yul\":19873:19903   */\n      or\n        /* \"#utility.yul\":19863:19903   */\n      swap3\n      pop\n        /* \"#utility.yul\":19592:19909   */\n      pop\n      pop\n        /* \"#utility.yul\":19516:19909   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19915:20057   */\n    tag_492:\n        /* \"#utility.yul\":19965:19974   */\n      0x00\n        /* \"#utility.yul\":19998:20051   */\n      tag_714\n        /* \"#utility.yul\":20016:20050   */\n      tag_715\n        /* \"#utility.yul\":20025:20049   */\n      tag_716\n        /* \"#utility.yul\":20043:20048   */\n      dup5\n        /* \"#utility.yul\":20025:20049   */\n      tag_447\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":20016:20050   */\n      tag_480\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":19998:20051   */\n      tag_447\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":19985:20051   */\n      swap1\n      pop\n        /* \"#utility.yul\":19915:20057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20063:20138   */\n    tag_493:\n        /* \"#utility.yul\":20106:20109   */\n      0x00\n        /* \"#utility.yul\":20127:20132   */\n      dup2\n        /* \"#utility.yul\":20120:20132   */\n      swap1\n      pop\n        /* \"#utility.yul\":20063:20138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20144:20413   */\n    tag_494:\n        /* \"#utility.yul\":20254:20293   */\n      tag_719\n        /* \"#utility.yul\":20285:20292   */\n      dup4\n        /* \"#utility.yul\":20254:20293   */\n      tag_492\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":20315:20406   */\n      tag_720\n        /* \"#utility.yul\":20364:20405   */\n      tag_721\n        /* \"#utility.yul\":20388:20404   */\n      dup3\n        /* \"#utility.yul\":20364:20405   */\n      tag_493\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":20356:20362   */\n      dup5\n        /* \"#utility.yul\":20349:20353   */\n      dup5\n        /* \"#utility.yul\":20343:20354   */\n      sload\n        /* \"#utility.yul\":20315:20406   */\n      tag_491\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":20309:20313   */\n      dup3\n        /* \"#utility.yul\":20302:20407   */\n      sstore\n        /* \"#utility.yul\":20220:20413   */\n      pop\n        /* \"#utility.yul\":20144:20413   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20419:20492   */\n    tag_495:\n        /* \"#utility.yul\":20464:20467   */\n      0x00\n        /* \"#utility.yul\":20419:20492   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20498:20687   */\n    tag_496:\n        /* \"#utility.yul\":20575:20607   */\n      tag_724\n      tag_495\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":20616:20681   */\n      tag_725\n        /* \"#utility.yul\":20674:20680   */\n      dup2\n        /* \"#utility.yul\":20666:20672   */\n      dup5\n        /* \"#utility.yul\":20660:20664   */\n      dup5\n        /* \"#utility.yul\":20616:20681   */\n      tag_494\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":20551:20687   */\n      pop\n        /* \"#utility.yul\":20498:20687   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20693:20879   */\n    tag_497:\n        /* \"#utility.yul\":20753:20873   */\n    tag_727:\n        /* \"#utility.yul\":20770:20773   */\n      dup2\n        /* \"#utility.yul\":20763:20768   */\n      dup2\n        /* \"#utility.yul\":20760:20774   */\n      lt\n        /* \"#utility.yul\":20753:20873   */\n      iszero\n      tag_729\n      jumpi\n        /* \"#utility.yul\":20824:20863   */\n      tag_730\n        /* \"#utility.yul\":20861:20862   */\n      0x00\n        /* \"#utility.yul\":20854:20859   */\n      dup3\n        /* \"#utility.yul\":20824:20863   */\n      tag_496\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":20797:20798   */\n      0x01\n        /* \"#utility.yul\":20790:20795   */\n      dup2\n        /* \"#utility.yul\":20786:20799   */\n      add\n        /* \"#utility.yul\":20777:20799   */\n      swap1\n      pop\n        /* \"#utility.yul\":20753:20873   */\n      jump(tag_727)\n    tag_729:\n        /* \"#utility.yul\":20693:20879   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20885:21428   */\n    tag_498:\n        /* \"#utility.yul\":20986:20988   */\n      0x1f\n        /* \"#utility.yul\":20981:20984   */\n      dup3\n        /* \"#utility.yul\":20978:20989   */\n      gt\n        /* \"#utility.yul\":20975:21421   */\n      iszero\n      tag_732\n      jumpi\n        /* \"#utility.yul\":21020:21058   */\n      tag_733\n        /* \"#utility.yul\":21052:21057   */\n      dup2\n        /* \"#utility.yul\":21020:21058   */\n      tag_488\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":21104:21133   */\n      tag_734\n        /* \"#utility.yul\":21122:21132   */\n      dup5\n        /* \"#utility.yul\":21104:21133   */\n      tag_489\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":21094:21102   */\n      dup2\n        /* \"#utility.yul\":21090:21134   */\n      add\n        /* \"#utility.yul\":21287:21289   */\n      0x20\n        /* \"#utility.yul\":21275:21285   */\n      dup6\n        /* \"#utility.yul\":21272:21290   */\n      lt\n        /* \"#utility.yul\":21269:21318   */\n      iszero\n      tag_735\n      jumpi\n        /* \"#utility.yul\":21308:21316   */\n      dup2\n        /* \"#utility.yul\":21293:21316   */\n      swap1\n      pop\n        /* \"#utility.yul\":21269:21318   */\n    tag_735:\n        /* \"#utility.yul\":21331:21411   */\n      tag_736\n        /* \"#utility.yul\":21387:21409   */\n      tag_737\n        /* \"#utility.yul\":21405:21408   */\n      dup6\n        /* \"#utility.yul\":21387:21409   */\n      tag_489\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":21377:21385   */\n      dup4\n        /* \"#utility.yul\":21373:21410   */\n      add\n        /* \"#utility.yul\":21360:21371   */\n      dup3\n        /* \"#utility.yul\":21331:21411   */\n      tag_497\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":20990:21421   */\n      pop\n      pop\n        /* \"#utility.yul\":20975:21421   */\n    tag_732:\n        /* \"#utility.yul\":20885:21428   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21434:21551   */\n    tag_499:\n        /* \"#utility.yul\":21488:21496   */\n      0x00\n        /* \"#utility.yul\":21538:21543   */\n      dup3\n        /* \"#utility.yul\":21532:21536   */\n      dup3\n        /* \"#utility.yul\":21528:21544   */\n      shr\n        /* \"#utility.yul\":21507:21544   */\n      swap1\n      pop\n        /* \"#utility.yul\":21434:21551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21557:21726   */\n    tag_500:\n        /* \"#utility.yul\":21601:21607   */\n      0x00\n        /* \"#utility.yul\":21634:21685   */\n      tag_740\n        /* \"#utility.yul\":21682:21683   */\n      0x00\n        /* \"#utility.yul\":21678:21684   */\n      not\n        /* \"#utility.yul\":21670:21675   */\n      dup5\n        /* \"#utility.yul\":21667:21668   */\n      0x08\n        /* \"#utility.yul\":21663:21676   */\n      mul\n        /* \"#utility.yul\":21634:21685   */\n      tag_499\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":21630:21686   */\n      not\n        /* \"#utility.yul\":21715:21719   */\n      dup1\n        /* \"#utility.yul\":21709:21713   */\n      dup4\n        /* \"#utility.yul\":21705:21720   */\n      and\n        /* \"#utility.yul\":21695:21720   */\n      swap2\n      pop\n        /* \"#utility.yul\":21608:21726   */\n      pop\n        /* \"#utility.yul\":21557:21726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21731:22026   */\n    tag_501:\n        /* \"#utility.yul\":21807:21811   */\n      0x00\n        /* \"#utility.yul\":21953:21982   */\n      tag_742\n        /* \"#utility.yul\":21978:21981   */\n      dup4\n        /* \"#utility.yul\":21972:21976   */\n      dup4\n        /* \"#utility.yul\":21953:21982   */\n      tag_500\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":21945:21982   */\n      swap2\n      pop\n        /* \"#utility.yul\":22015:22018   */\n      dup3\n        /* \"#utility.yul\":22012:22013   */\n      0x02\n        /* \"#utility.yul\":22008:22019   */\n      mul\n        /* \"#utility.yul\":22002:22006   */\n      dup3\n        /* \"#utility.yul\":21999:22020   */\n      or\n        /* \"#utility.yul\":21991:22020   */\n      swap1\n      pop\n        /* \"#utility.yul\":21731:22026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22031:23426   */\n    tag_394:\n        /* \"#utility.yul\":22148:22185   */\n      tag_744\n        /* \"#utility.yul\":22181:22184   */\n      dup3\n        /* \"#utility.yul\":22148:22185   */\n      tag_437\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":22250:22268   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":22242:22248   */\n      dup2\n        /* \"#utility.yul\":22239:22269   */\n      gt\n        /* \"#utility.yul\":22236:22292   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":22272:22290   */\n      tag_746\n      tag_457\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":22236:22292   */\n    tag_745:\n        /* \"#utility.yul\":22316:22354   */\n      tag_747\n        /* \"#utility.yul\":22348:22352   */\n      dup3\n        /* \"#utility.yul\":22342:22353   */\n      sload\n        /* \"#utility.yul\":22316:22354   */\n      tag_157\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":22401:22468   */\n      tag_748\n        /* \"#utility.yul\":22461:22467   */\n      dup3\n        /* \"#utility.yul\":22453:22459   */\n      dup3\n        /* \"#utility.yul\":22447:22451   */\n      dup6\n        /* \"#utility.yul\":22401:22468   */\n      tag_498\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":22495:22496   */\n      0x00\n        /* \"#utility.yul\":22519:22523   */\n      0x20\n        /* \"#utility.yul\":22506:22523   */\n      swap1\n      pop\n        /* \"#utility.yul\":22551:22553   */\n      0x1f\n        /* \"#utility.yul\":22543:22549   */\n      dup4\n        /* \"#utility.yul\":22540:22554   */\n      gt\n        /* \"#utility.yul\":22568:22569   */\n      0x01\n        /* \"#utility.yul\":22563:23181   */\n      dup2\n      eq\n      tag_750\n      jumpi\n        /* \"#utility.yul\":23225:23226   */\n      0x00\n        /* \"#utility.yul\":23242:23248   */\n      dup5\n        /* \"#utility.yul\":23239:23316   */\n      iszero\n      tag_751\n      jumpi\n        /* \"#utility.yul\":23291:23300   */\n      dup3\n        /* \"#utility.yul\":23286:23289   */\n      dup8\n        /* \"#utility.yul\":23282:23301   */\n      add\n        /* \"#utility.yul\":23276:23302   */\n      mload\n        /* \"#utility.yul\":23267:23302   */\n      swap1\n      pop\n        /* \"#utility.yul\":23239:23316   */\n    tag_751:\n        /* \"#utility.yul\":23342:23409   */\n      tag_752\n        /* \"#utility.yul\":23402:23408   */\n      dup6\n        /* \"#utility.yul\":23395:23400   */\n      dup3\n        /* \"#utility.yul\":23342:23409   */\n      tag_501\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":23336:23340   */\n      dup7\n        /* \"#utility.yul\":23329:23410   */\n      sstore\n        /* \"#utility.yul\":23198:23420   */\n      pop\n        /* \"#utility.yul\":22533:23420   */\n      jump(tag_749)\n        /* \"#utility.yul\":22563:23181   */\n    tag_750:\n        /* \"#utility.yul\":22615:22619   */\n      0x1f\n        /* \"#utility.yul\":22611:22620   */\n      not\n        /* \"#utility.yul\":22603:22609   */\n      dup5\n        /* \"#utility.yul\":22599:22621   */\n      and\n        /* \"#utility.yul\":22649:22686   */\n      tag_753\n        /* \"#utility.yul\":22681:22685   */\n      dup7\n        /* \"#utility.yul\":22649:22686   */\n      tag_488\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":22708:22709   */\n      0x00\n        /* \"#utility.yul\":22722:22930   */\n    tag_754:\n        /* \"#utility.yul\":22736:22743   */\n      dup3\n        /* \"#utility.yul\":22733:22734   */\n      dup2\n        /* \"#utility.yul\":22730:22744   */\n      lt\n        /* \"#utility.yul\":22722:22930   */\n      iszero\n      tag_756\n      jumpi\n        /* \"#utility.yul\":22815:22824   */\n      dup5\n        /* \"#utility.yul\":22810:22813   */\n      dup10\n        /* \"#utility.yul\":22806:22825   */\n      add\n        /* \"#utility.yul\":22800:22826   */\n      mload\n        /* \"#utility.yul\":22792:22798   */\n      dup3\n        /* \"#utility.yul\":22785:22827   */\n      sstore\n        /* \"#utility.yul\":22866:22867   */\n      0x01\n        /* \"#utility.yul\":22858:22864   */\n      dup3\n        /* \"#utility.yul\":22854:22868   */\n      add\n        /* \"#utility.yul\":22844:22868   */\n      swap2\n      pop\n        /* \"#utility.yul\":22913:22915   */\n      0x20\n        /* \"#utility.yul\":22902:22911   */\n      dup6\n        /* \"#utility.yul\":22898:22916   */\n      add\n        /* \"#utility.yul\":22885:22916   */\n      swap5\n      pop\n        /* \"#utility.yul\":22759:22763   */\n      0x20\n        /* \"#utility.yul\":22756:22757   */\n      dup2\n        /* \"#utility.yul\":22752:22764   */\n      add\n        /* \"#utility.yul\":22747:22764   */\n      swap1\n      pop\n        /* \"#utility.yul\":22722:22930   */\n      jump(tag_754)\n    tag_756:\n        /* \"#utility.yul\":22958:22964   */\n      dup7\n        /* \"#utility.yul\":22949:22956   */\n      dup4\n        /* \"#utility.yul\":22946:22965   */\n      lt\n        /* \"#utility.yul\":22943:23122   */\n      iszero\n      tag_757\n      jumpi\n        /* \"#utility.yul\":23016:23025   */\n      dup5\n        /* \"#utility.yul\":23011:23014   */\n      dup10\n        /* \"#utility.yul\":23007:23026   */\n      add\n        /* \"#utility.yul\":23001:23027   */\n      mload\n        /* \"#utility.yul\":23059:23107   */\n      tag_758\n        /* \"#utility.yul\":23101:23105   */\n      0x1f\n        /* \"#utility.yul\":23093:23099   */\n      dup10\n        /* \"#utility.yul\":23089:23106   */\n      and\n        /* \"#utility.yul\":23078:23087   */\n      dup3\n        /* \"#utility.yul\":23059:23107   */\n      tag_500\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":23051:23057   */\n      dup4\n        /* \"#utility.yul\":23044:23108   */\n      sstore\n        /* \"#utility.yul\":22966:23122   */\n      pop\n        /* \"#utility.yul\":22943:23122   */\n    tag_757:\n        /* \"#utility.yul\":23168:23169   */\n      0x01\n        /* \"#utility.yul\":23164:23165   */\n      0x02\n        /* \"#utility.yul\":23156:23162   */\n      dup9\n        /* \"#utility.yul\":23152:23166   */\n      mul\n        /* \"#utility.yul\":23148:23170   */\n      add\n        /* \"#utility.yul\":23142:23146   */\n      dup9\n        /* \"#utility.yul\":23135:23171   */\n      sstore\n        /* \"#utility.yul\":22570:23181   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22533:23420   */\n    tag_749:\n      pop\n        /* \"#utility.yul\":22123:23426   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22031:23426   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23432:23530   */\n    tag_502:\n        /* \"#utility.yul\":23483:23489   */\n      0x00\n        /* \"#utility.yul\":23517:23522   */\n      dup2\n        /* \"#utility.yul\":23511:23523   */\n      mload\n        /* \"#utility.yul\":23501:23523   */\n      swap1\n      pop\n        /* \"#utility.yul\":23432:23530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23536:23683   */\n    tag_503:\n        /* \"#utility.yul\":23637:23648   */\n      0x00\n        /* \"#utility.yul\":23674:23677   */\n      dup2\n        /* \"#utility.yul\":23659:23677   */\n      swap1\n      pop\n        /* \"#utility.yul\":23536:23683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23689:24075   */\n    tag_504:\n        /* \"#utility.yul\":23793:23796   */\n      0x00\n        /* \"#utility.yul\":23821:23859   */\n      tag_762\n        /* \"#utility.yul\":23853:23858   */\n      dup3\n        /* \"#utility.yul\":23821:23859   */\n      tag_502\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":23875:23963   */\n      tag_763\n        /* \"#utility.yul\":23956:23962   */\n      dup2\n        /* \"#utility.yul\":23951:23954   */\n      dup6\n        /* \"#utility.yul\":23875:23963   */\n      tag_503\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":23868:23963   */\n      swap4\n      pop\n        /* \"#utility.yul\":23972:24037   */\n      tag_764\n        /* \"#utility.yul\":24030:24036   */\n      dup2\n        /* \"#utility.yul\":24025:24028   */\n      dup6\n        /* \"#utility.yul\":24018:24022   */\n      0x20\n        /* \"#utility.yul\":24011:24016   */\n      dup7\n        /* \"#utility.yul\":24007:24023   */\n      add\n        /* \"#utility.yul\":23972:24037   */\n      tag_439\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":24062:24068   */\n      dup1\n        /* \"#utility.yul\":24057:24060   */\n      dup5\n        /* \"#utility.yul\":24053:24069   */\n      add\n        /* \"#utility.yul\":24046:24069   */\n      swap2\n      pop\n        /* \"#utility.yul\":23797:24075   */\n      pop\n        /* \"#utility.yul\":23689:24075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24081:24352   */\n    tag_413:\n        /* \"#utility.yul\":24211:24214   */\n      0x00\n        /* \"#utility.yul\":24233:24326   */\n      tag_766\n        /* \"#utility.yul\":24322:24325   */\n      dup3\n        /* \"#utility.yul\":24313:24319   */\n      dup5\n        /* \"#utility.yul\":24233:24326   */\n      tag_504\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":24226:24326   */\n      swap2\n      pop\n        /* \"#utility.yul\":24343:24346   */\n      dup2\n        /* \"#utility.yul\":24336:24346   */\n      swap1\n      pop\n        /* \"#utility.yul\":24081:24352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202ba0a1f7f82d3f338b53ddf2f484e756acaca96f314577e018310bca068d21a664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152506002600355600260045560016005553480156050575f80fd5b506080516130576100775f395f818161147b015281816114d0015261168a01526130575ff3fe608060405260043610610180575f3560e01c8063715018a6116100d0578063ad3cb1cc11610089578063dccd8bd211610063578063dccd8bd214610540578063dd62ed3e1461056a578063f2fde38b146105a6578063fce589d8146105ce57610180565b8063ad3cb1cc146104c2578063bf4cc52b146104ec578063d46980161461051657610180565b8063715018a6146103dc5780638129fc1c146103f25780638da5cb5b1461040857806395d89b411461043257806398118cb41461045c578063a9059cbb1461048657610180565b806323b872dd1161013d5780634f1ef286116101175780634f1ef2861461033257806352d1902d1461034e5780635e4043e91461037857806370a08231146103a057610180565b806323b872dd14610290578063313ce567146102cc5780633f4218e0146102f657610180565b8063062287491461018457806306fdde03146101ae578063095ea7b3146101d8578063147c9f6d1461021457806318160ddd1461023c5780631df4ccfc14610266575b5f80fd5b34801561018f575f80fd5b506101986105f8565b6040516101a591906123ca565b60405180910390f35b3480156101b9575f80fd5b506101c261061b565b6040516101cf9190612453565b60405180910390f35b3480156101e3575f80fd5b506101fe60048036038101906101f991906124e1565b6106b9565b60405161020b9190612539565b60405180910390f35b34801561021f575f80fd5b5061023a60048036038101906102359190612552565b6106db565b005b348015610247575f80fd5b506102506108f1565b60405161025d91906125b1565b60405180910390f35b348015610271575f80fd5b5061027a610908565b60405161028791906125b1565b60405180910390f35b34801561029b575f80fd5b506102b660048036038101906102b191906125ca565b61092b565b6040516102c39190612539565b60405180910390f35b3480156102d7575f80fd5b506102e0610959565b6040516102ed9190612635565b60405180910390f35b348015610301575f80fd5b5061031c6004803603810190610317919061264e565b610961565b6040516103299190612539565b60405180910390f35b61034c600480360381019061034791906127a5565b61097e565b005b348015610359575f80fd5b5061036261099d565b60405161036f9190612817565b60405180910390f35b348015610383575f80fd5b5061039e6004803603810190610399919061285a565b6109ce565b005b3480156103ab575f80fd5b506103c660048036038101906103c1919061264e565b610a9c565b6040516103d391906125b1565b60405180910390f35b3480156103e7575f80fd5b506103f0610aef565b005b3480156103fd575f80fd5b50610406610b02565b005b348015610413575f80fd5b5061041c610eb9565b60405161042991906123ca565b60405180910390f35b34801561043d575f80fd5b50610446610eee565b6040516104539190612453565b60405180910390f35b348015610467575f80fd5b50610470610f8c565b60405161047d91906125b1565b60405180910390f35b348015610491575f80fd5b506104ac60048036038101906104a791906124e1565b610f92565b6040516104b99190612539565b60405180910390f35b3480156104cd575f80fd5b506104d6610fb4565b6040516104e39190612453565b60405180910390f35b3480156104f7575f80fd5b50610500610fed565b60405161050d91906123ca565b60405180910390f35b348015610521575f80fd5b5061052a611012565b60405161053791906123ca565b60405180910390f35b34801561054b575f80fd5b50610554611037565b60405161056191906125b1565b60405180910390f35b348015610575575f80fd5b50610590600480360381019061058b9190612898565b61103d565b60405161059d91906125b1565b60405180910390f35b3480156105b1575f80fd5b506105cc60048036038101906105c7919061264e565b6110cd565b005b3480156105d9575f80fd5b506105e2611151565b6040516105ef91906125b1565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60605f610626611157565b905080600301805461063790612903565b80601f016020809104026020016040519081016040528092919081815260200182805461066390612903565b80156106ae5780601f10610685576101008083540402835291602001916106ae565b820191905f5260205f20905b81548152906001019060200180831161069157829003601f168201915b505050505091505090565b5f806106c361117e565b90506106d0818585611185565b600191505092915050565b6106e3611197565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610751576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107489061297d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b6906129e5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490612a4d565b60405180910390fd5b825f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b5f806108fb611157565b9050806002015491505090565b5f60055460045460035461091c9190612a98565b6109269190612a98565b905090565b5f8061093561117e565b905061094285828561121e565b61094d8585856112b1565b60019150509392505050565b5f6012905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b610986611479565b61098f8261155f565b610999828261156a565b5050565b5f6109a6611688565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b6109d6611197565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90612b15565b60405180910390fd5b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f80610aa6611157565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610af7611197565b610b005f61170f565b565b5f610b0b6117e0565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610b535750825b90505f60018367ffffffffffffffff16148015610b8657505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b94575080155b15610bcb576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610c18576001855f0160086101000a81548160ff0219169083151502179055505b610c8c6040518060400160405280601481526020017f43726f636f64696c6f20426f6d62657264696e6f0000000000000000000000008152506040518060400160405280600a81526020017f424f4d42455244494e4f000000000000000000000000000000000000000000008152506117f3565b610c9533611809565b610c9d6119f8565b610cb3336b033b2e3c9fd0803ce8000000611a02565b73077da53e0865f111b35912d400822ba89401ca645f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073775afe34497a187350607d669c097dd9f6ddfaad60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d42509a701a192ce204e5fb1be4fba0c8b08a98260025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160065f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508315610eb2575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610ea99190612b88565b60405180910390a15b5050505050565b5f80610ec3611a81565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610ef9611157565b9050806004018054610f0a90612903565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3690612903565b8015610f815780601f10610f5857610100808354040283529160200191610f81565b820191905f5260205f20905b815481529060010190602001808311610f6457829003601f168201915b505050505091505090565b60055481565b5f80610f9c61117e565b9050610fa98185856112b1565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b5f80611047611157565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6110d5611197565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611145575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161113c91906123ca565b60405180910390fd5b61114e8161170f565b50565b60035481565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6111928383836001611aa8565b505050565b61119f61117e565b73ffffffffffffffffffffffffffffffffffffffff166111bd610eb9565b73ffffffffffffffffffffffffffffffffffffffff161461121c576111e061117e565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161121391906123ca565b60405180910390fd5b565b5f611229848461103d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112ab578181101561129c578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161129393929190612ba1565b60405180910390fd5b6112aa84848484035f611aa8565b5b50505050565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff168061134c575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b156113615761135c838383611c85565b611474565b5f606461136c610908565b836113779190612bd6565b6113819190612c44565b90505f6064600354846113949190612bd6565b61139e9190612c44565b90505f6064600454856113b19190612bd6565b6113bb9190612c44565b90505f8183856113cb9190612c74565b6113d59190612c74565b9050611401875f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611c85565b61142d8760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611c85565b6114598760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611c85565b61146f8787868861146a9190612c74565b611c85565b505050505b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061152657507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661150d611d75565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561155d576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611567611197565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156115d257506040513d601f19601f820116820180604052508101906115cf9190612cd1565b60015b61161357816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161160a91906123ca565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461167957806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016116709190612817565b60405180910390fd5b6116838383611dc8565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461170d576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611718611a81565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f806117ea611e3a565b90508091505090565b6117fb611e63565b6118058282611ea3565b5050565b5f6118126117e0565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561185a5750825b90505f60018367ffffffffffffffff1614801561188d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561189b575080155b156118d2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561191f576001855f0160086101000a81548160ff0219169083151502179055505b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361198d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198490612d46565b60405180910390fd5b6119968661170f565b83156119f0575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516119e79190612b88565b60405180910390a15b505050505050565b611a00611e63565b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a72575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611a6991906123ca565b60405180910390fd5b611a7d5f8383611edf565b5050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f611ab1611157565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611b23575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b1a91906123ca565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b93575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611b8a91906123ca565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611c7e578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611c7591906125b1565b60405180910390a35b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cf5575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611cec91906123ca565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d65575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d5c91906123ca565b60405180910390fd5b611d70838383611edf565b505050565b5f611da17f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61210e565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611dd182612117565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115611e2d57611e2782826121e0565b50611e36565b611e35612260565b5b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b611e6b61229c565b611ea1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611eab611e63565b5f611eb4611157565b905082816003019081611ec79190612ef8565b5081816004019081611ed99190612ef8565b50505050565b5f611ee8611157565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f3c5781816002015f828254611f309190612a98565b9250508190555061200e565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611fc7578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611fbe93929190612ba1565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120575781816002015f82825403925050819055506120a3565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161210091906125b1565b60405180910390a350505050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361217257806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161216991906123ca565b60405180910390fd5b8061219e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61210e565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff1684604051612209919061300b565b5f60405180830381855af49150503d805f8114612241576040519150601f19603f3d011682016040523d82523d5f602084013e612246565b606091505b50915091506122568583836122ba565b9250505092915050565b5f34111561229a576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6122a56117e0565b5f0160089054906101000a900460ff16905090565b6060826122cf576122ca82612347565b61233f565b5f82511480156122f557505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561233757836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161232e91906123ca565b60405180910390fd5b819050612340565b5b9392505050565b5f815111156123595780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6123b48261238b565b9050919050565b6123c4816123aa565b82525050565b5f6020820190506123dd5f8301846123bb565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612425826123e3565b61242f81856123ed565b935061243f8185602086016123fd565b6124488161240b565b840191505092915050565b5f6020820190508181035f83015261246b818461241b565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b61248d816123aa565b8114612497575f80fd5b50565b5f813590506124a881612484565b92915050565b5f819050919050565b6124c0816124ae565b81146124ca575f80fd5b50565b5f813590506124db816124b7565b92915050565b5f80604083850312156124f7576124f661247c565b5b5f6125048582860161249a565b9250506020612515858286016124cd565b9150509250929050565b5f8115159050919050565b6125338161251f565b82525050565b5f60208201905061254c5f83018461252a565b92915050565b5f805f606084860312156125695761256861247c565b5b5f6125768682870161249a565b93505060206125878682870161249a565b92505060406125988682870161249a565b9150509250925092565b6125ab816124ae565b82525050565b5f6020820190506125c45f8301846125a2565b92915050565b5f805f606084860312156125e1576125e061247c565b5b5f6125ee8682870161249a565b93505060206125ff8682870161249a565b9250506040612610868287016124cd565b9150509250925092565b5f60ff82169050919050565b61262f8161261a565b82525050565b5f6020820190506126485f830184612626565b92915050565b5f602082840312156126635761266261247c565b5b5f6126708482850161249a565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6126b78261240b565b810181811067ffffffffffffffff821117156126d6576126d5612681565b5b80604052505050565b5f6126e8612473565b90506126f482826126ae565b919050565b5f67ffffffffffffffff82111561271357612712612681565b5b61271c8261240b565b9050602081019050919050565b828183375f83830152505050565b5f612749612744846126f9565b6126df565b9050828152602081018484840111156127655761276461267d565b5b612770848285612729565b509392505050565b5f82601f83011261278c5761278b612679565b5b813561279c848260208601612737565b91505092915050565b5f80604083850312156127bb576127ba61247c565b5b5f6127c88582860161249a565b925050602083013567ffffffffffffffff8111156127e9576127e8612480565b5b6127f585828601612778565b9150509250929050565b5f819050919050565b612811816127ff565b82525050565b5f60208201905061282a5f830184612808565b92915050565b6128398161251f565b8114612843575f80fd5b50565b5f8135905061285481612830565b92915050565b5f80604083850312156128705761286f61247c565b5b5f61287d8582860161249a565b925050602061288e85828601612846565b9150509250929050565b5f80604083850312156128ae576128ad61247c565b5b5f6128bb8582860161249a565b92505060206128cc8582860161249a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061291a57607f821691505b60208210810361292d5761292c6128d6565b5b50919050565b7f4275726e2077616c6c65742063616e6e6f74206265207a65726f0000000000005f82015250565b5f612967601a836123ed565b915061297282612933565b602082019050919050565b5f6020820190508181035f8301526129948161295b565b9050919050565b7f5574696c6974792077616c6c65742063616e6e6f74206265207a65726f0000005f82015250565b5f6129cf601d836123ed565b91506129da8261299b565b602082019050919050565b5f6020820190508181035f8301526129fc816129c3565b9050919050565b7f4c69717569646974792077616c6c65742063616e6e6f74206265207a65726f005f82015250565b5f612a37601f836123ed565b9150612a4282612a03565b602082019050919050565b5f6020820190508181035f830152612a6481612a2b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612aa2826124ae565b9150612aad836124ae565b9250828201905080821115612ac557612ac4612a6b565b5b92915050565b7f496e76616c6964206163636f756e7420616464726573730000000000000000005f82015250565b5f612aff6017836123ed565b9150612b0a82612acb565b602082019050919050565b5f6020820190508181035f830152612b2c81612af3565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f612b72612b6d612b6884612b33565b612b4f565b612b3c565b9050919050565b612b8281612b58565b82525050565b5f602082019050612b9b5f830184612b79565b92915050565b5f606082019050612bb45f8301866123bb565b612bc160208301856125a2565b612bce60408301846125a2565b949350505050565b5f612be0826124ae565b9150612beb836124ae565b9250828202612bf9816124ae565b91508282048414831517612c1057612c0f612a6b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612c4e826124ae565b9150612c59836124ae565b925082612c6957612c68612c17565b5b828204905092915050565b5f612c7e826124ae565b9150612c89836124ae565b9250828203905081811115612ca157612ca0612a6b565b5b92915050565b612cb0816127ff565b8114612cba575f80fd5b50565b5f81519050612ccb81612ca7565b92915050565b5f60208284031215612ce657612ce561247c565b5b5f612cf384828501612cbd565b91505092915050565b7f45524332303a206f776e776572206973207a65726f00000000000000000000005f82015250565b5f612d306015836123ed565b9150612d3b82612cfc565b602082019050919050565b5f6020820190508181035f830152612d5d81612d24565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612dc07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612d85565b612dca8683612d85565b95508019841693508086168417925050509392505050565b5f612dfc612df7612df2846124ae565b612b4f565b6124ae565b9050919050565b5f819050919050565b612e1583612de2565b612e29612e2182612e03565b848454612d91565b825550505050565b5f90565b612e3d612e31565b612e48818484612e0c565b505050565b5b81811015612e6b57612e605f82612e35565b600181019050612e4e565b5050565b601f821115612eb057612e8181612d64565b612e8a84612d76565b81016020851015612e99578190505b612ead612ea585612d76565b830182612e4d565b50505b505050565b5f82821c905092915050565b5f612ed05f1984600802612eb5565b1980831691505092915050565b5f612ee88383612ec1565b9150826002028217905092915050565b612f01826123e3565b67ffffffffffffffff811115612f1a57612f19612681565b5b612f248254612903565b612f2f828285612e6f565b5f60209050601f831160018114612f60575f8415612f4e578287015190505b612f588582612edd565b865550612fbf565b601f198416612f6e86612d64565b5f5b82811015612f9557848901518255600182019150602085019450602081019050612f70565b86831015612fb25784890151612fae601f891682612ec1565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f612fe582612fc7565b612fef8185612fd1565b9350612fff8185602086016123fd565b80840191505092915050565b5f6130168284612fdb565b91508190509291505056fea26469706673582212202ba0a1f7f82d3f338b53ddf2f484e756acaca96f314577e018310bca068d21a664736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x3 SSTORE PUSH1 0x2 PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x50 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x3057 PUSH2 0x77 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x147B ADD MSTORE DUP2 DUP2 PUSH2 0x14D0 ADD MSTORE PUSH2 0x168A ADD MSTORE PUSH2 0x3057 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDCCD8BD2 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDCCD8BD2 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xFCE589D8 EQ PUSH2 0x5CE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xBF4CC52B EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x516 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x486 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x5E4043E9 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A0 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x3F4218E0 EQ PUSH2 0x2F6 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x6228749 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x147C9F6D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x1DF4CCFC EQ PUSH2 0x266 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x24E1 JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2552 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x25CA JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x285A JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH2 0xAEF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH2 0xB02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41C PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x446 PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x470 PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x491 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x24E1 JUMP JUMPDEST PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D6 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52A PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x554 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x103D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0x10CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E2 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x626 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x637 SWAP1 PUSH2 0x2903 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x663 SWAP1 PUSH2 0x2903 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x685 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x691 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6C3 PUSH2 0x117E JUMP JUMPDEST SWAP1 POP PUSH2 0x6D0 DUP2 DUP6 DUP6 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E3 PUSH2 0x1197 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP1 PUSH2 0x297D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP1 PUSH2 0x2A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8FB PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x935 PUSH2 0x117E JUMP JUMPDEST SWAP1 POP PUSH2 0x942 DUP6 DUP3 DUP6 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x94D DUP6 DUP6 DUP6 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x986 PUSH2 0x1479 JUMP JUMPDEST PUSH2 0x98F DUP3 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x999 DUP3 DUP3 PUSH2 0x156A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9A6 PUSH2 0x1688 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D6 PUSH2 0x1197 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAA6 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xB00 PUSH0 PUSH2 0x170F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xB0B PUSH2 0x17E0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB53 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB86 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC18 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xC8C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43726F636F64696C6F20426F6D62657264696E6F000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x424F4D42455244494E4F00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0xC95 CALLER PUSH2 0x1809 JUMP JUMPDEST PUSH2 0xC9D PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0xCB3 CALLER PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1A02 JUMP JUMPDEST PUSH20 0x77DA53E0865F111B35912D400822BA89401CA64 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x775AFE34497A187350607D669C097DD9F6DDFAAD PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD42509A701A192CE204E5FB1BE4FBA0C8B08A982 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xEB2 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xEA9 SWAP2 SWAP1 PUSH2 0x2B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEC3 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xEF9 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xF0A SWAP1 PUSH2 0x2903 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF36 SWAP1 PUSH2 0x2903 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF58 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF9C PUSH2 0x117E JUMP JUMPDEST SWAP1 POP PUSH2 0xFA9 DUP2 DUP6 DUP6 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1047 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10D5 PUSH2 0x1197 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1145 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113C SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x114E DUP2 PUSH2 0x170F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1192 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1AA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x119F PUSH2 0x117E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BD PUSH2 0xEB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x121C JUMPI PUSH2 0x11E0 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1229 DUP5 DUP5 PUSH2 0x103D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x12AB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x129C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1293 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x134C JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1361 JUMPI PUSH2 0x135C DUP4 DUP4 DUP4 PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1474 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH2 0x136C PUSH2 0x908 JUMP JUMPDEST DUP4 PUSH2 0x1377 SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x3 SLOAD DUP5 PUSH2 0x1394 SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x139E SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x4 SLOAD DUP6 PUSH2 0x13B1 SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP6 PUSH2 0x13CB SWAP2 SWAP1 PUSH2 0x2C74 JUMP JUMPDEST PUSH2 0x13D5 SWAP2 SWAP1 PUSH2 0x2C74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1401 DUP8 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x142D DUP8 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1459 DUP8 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x146F DUP8 DUP8 DUP7 DUP9 PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x2C74 JUMP JUMPDEST PUSH2 0x1C85 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1526 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150D PUSH2 0x1D75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x155D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1567 PUSH2 0x1197 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2CD1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1613 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160A SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1679 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1670 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1683 DUP4 DUP4 PUSH2 0x1DC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1718 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x17EA PUSH2 0x1E3A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x1E63 JUMP JUMPDEST PUSH2 0x1805 DUP3 DUP3 PUSH2 0x1EA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x185A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x188D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x189B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x191F JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x198D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1984 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1996 DUP7 PUSH2 0x170F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x19F0 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x19E7 SWAP2 SWAP1 PUSH2 0x2B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A00 PUSH2 0x1E63 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A72 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A69 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A7D PUSH0 DUP4 DUP4 PUSH2 0x1EDF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1AB1 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B23 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1A SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8A SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1C7E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C75 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEC SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D65 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5C SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D70 DUP4 DUP4 DUP4 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x210E JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DD1 DUP3 PUSH2 0x2117 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1E2D JUMPI PUSH2 0x1E27 DUP3 DUP3 PUSH2 0x21E0 JUMP JUMPDEST POP PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0x1E35 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E6B PUSH2 0x229C JUMP JUMPDEST PUSH2 0x1EA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1EAB PUSH2 0x1E63 JUMP JUMPDEST PUSH0 PUSH2 0x1EB4 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1EC7 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1ED9 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE8 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1F30 SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x200E JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1FC7 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FBE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2057 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x20A3 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2100 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2172 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2169 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x219E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x210E JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2209 SWAP2 SWAP1 PUSH2 0x300B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2241 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2256 DUP6 DUP4 DUP4 PUSH2 0x22BA JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x229A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x22A5 PUSH2 0x17E0 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x22CF JUMPI PUSH2 0x22CA DUP3 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x22F5 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2337 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232E SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2340 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2359 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B4 DUP3 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23C4 DUP2 PUSH2 0x23AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23DD PUSH0 DUP4 ADD DUP5 PUSH2 0x23BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2425 DUP3 PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0x242F DUP2 DUP6 PUSH2 0x23ED JUMP JUMPDEST SWAP4 POP PUSH2 0x243F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2448 DUP2 PUSH2 0x240B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x246B DUP2 DUP5 PUSH2 0x241B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x248D DUP2 PUSH2 0x23AA JUMP JUMPDEST DUP2 EQ PUSH2 0x2497 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A8 DUP2 PUSH2 0x2484 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24C0 DUP2 PUSH2 0x24AE JUMP JUMPDEST DUP2 EQ PUSH2 0x24CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24DB DUP2 PUSH2 0x24B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24F7 JUMPI PUSH2 0x24F6 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2504 DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2515 DUP6 DUP3 DUP7 ADD PUSH2 0x24CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2533 DUP2 PUSH2 0x251F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x254C PUSH0 DUP4 ADD DUP5 PUSH2 0x252A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2569 JUMPI PUSH2 0x2568 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2576 DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2587 DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2598 DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x25AB DUP2 PUSH2 0x24AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x25A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25E1 JUMPI PUSH2 0x25E0 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25EE DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25FF DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2610 DUP7 DUP3 DUP8 ADD PUSH2 0x24CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x262F DUP2 PUSH2 0x261A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2648 PUSH0 DUP4 ADD DUP5 PUSH2 0x2626 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2663 JUMPI PUSH2 0x2662 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2670 DUP5 DUP3 DUP6 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x26B7 DUP3 PUSH2 0x240B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26D6 JUMPI PUSH2 0x26D5 PUSH2 0x2681 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E8 PUSH2 0x2473 JUMP JUMPDEST SWAP1 POP PUSH2 0x26F4 DUP3 DUP3 PUSH2 0x26AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2713 JUMPI PUSH2 0x2712 PUSH2 0x2681 JUMP JUMPDEST JUMPDEST PUSH2 0x271C DUP3 PUSH2 0x240B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2749 PUSH2 0x2744 DUP5 PUSH2 0x26F9 JUMP JUMPDEST PUSH2 0x26DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH2 0x2770 DUP5 DUP3 DUP6 PUSH2 0x2729 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x278C JUMPI PUSH2 0x278B PUSH2 0x2679 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x279C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27C8 DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27E9 JUMPI PUSH2 0x27E8 PUSH2 0x2480 JUMP JUMPDEST JUMPDEST PUSH2 0x27F5 DUP6 DUP3 DUP7 ADD PUSH2 0x2778 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2811 DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x282A PUSH0 DUP4 ADD DUP5 PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2839 DUP2 PUSH2 0x251F JUMP JUMPDEST DUP2 EQ PUSH2 0x2843 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2854 DUP2 PUSH2 0x2830 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2870 JUMPI PUSH2 0x286F PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x287D DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x288E DUP6 DUP3 DUP7 ADD PUSH2 0x2846 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28AD PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28BB DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28CC DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x291A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x292D JUMPI PUSH2 0x292C PUSH2 0x28D6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E2077616C6C65742063616E6E6F74206265207A65726F000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2967 PUSH1 0x1A DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2972 DUP3 PUSH2 0x2933 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2994 DUP2 PUSH2 0x295B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5574696C6974792077616C6C65742063616E6E6F74206265207A65726F000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29CF PUSH1 0x1D DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x29DA DUP3 PUSH2 0x299B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29FC DUP2 PUSH2 0x29C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C69717569646974792077616C6C65742063616E6E6F74206265207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A37 PUSH1 0x1F DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2A42 DUP3 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A64 DUP2 PUSH2 0x2A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2AA2 DUP3 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2AAD DUP4 PUSH2 0x24AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AC5 JUMPI PUSH2 0x2AC4 PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206163636F756E742061646472657373000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AFF PUSH1 0x17 DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0A DUP3 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B2C DUP2 PUSH2 0x2AF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B72 PUSH2 0x2B6D PUSH2 0x2B68 DUP5 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0x2B3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B82 DUP2 PUSH2 0x2B58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B9B PUSH0 DUP4 ADD DUP5 PUSH2 0x2B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BB4 PUSH0 DUP4 ADD DUP7 PUSH2 0x23BB JUMP JUMPDEST PUSH2 0x2BC1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x25A2 JUMP JUMPDEST PUSH2 0x2BCE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25A2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE0 DUP3 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2BEB DUP4 PUSH2 0x24AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BF9 DUP2 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C10 JUMPI PUSH2 0x2C0F PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2C4E DUP3 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C59 DUP4 PUSH2 0x24AE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C69 JUMPI PUSH2 0x2C68 PUSH2 0x2C17 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C7E DUP3 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C89 DUP4 PUSH2 0x24AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2CA1 JUMPI PUSH2 0x2CA0 PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CB0 DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP2 EQ PUSH2 0x2CBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CCB DUP2 PUSH2 0x2CA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CE6 JUMPI PUSH2 0x2CE5 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2CF3 DUP5 DUP3 DUP6 ADD PUSH2 0x2CBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206F776E776572206973207A65726F0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D30 PUSH1 0x15 DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3B DUP3 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D5D DUP2 PUSH2 0x2D24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2DC0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2D85 JUMP JUMPDEST PUSH2 0x2DCA DUP7 DUP4 PUSH2 0x2D85 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DFC PUSH2 0x2DF7 PUSH2 0x2DF2 DUP5 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0x24AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E15 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST PUSH2 0x2E29 PUSH2 0x2E21 DUP3 PUSH2 0x2E03 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2D91 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2E3D PUSH2 0x2E31 JUMP JUMPDEST PUSH2 0x2E48 DUP2 DUP5 DUP5 PUSH2 0x2E0C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E6B JUMPI PUSH2 0x2E60 PUSH0 DUP3 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2E4E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2EB0 JUMPI PUSH2 0x2E81 DUP2 PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x2E8A DUP5 PUSH2 0x2D76 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2E99 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2EAD PUSH2 0x2EA5 DUP6 PUSH2 0x2D76 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2E4D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ED0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2EB5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE8 DUP4 DUP4 PUSH2 0x2EC1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F01 DUP3 PUSH2 0x23E3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F1A JUMPI PUSH2 0x2F19 PUSH2 0x2681 JUMP JUMPDEST JUMPDEST PUSH2 0x2F24 DUP3 SLOAD PUSH2 0x2903 JUMP JUMPDEST PUSH2 0x2F2F DUP3 DUP3 DUP6 PUSH2 0x2E6F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F60 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F4E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2F58 DUP6 DUP3 PUSH2 0x2EDD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2FBF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2F6E DUP7 PUSH2 0x2D64 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F95 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F70 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2FB2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2FAE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2EC1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FE5 DUP3 PUSH2 0x2FC7 JUMP JUMPDEST PUSH2 0x2FEF DUP2 DUP6 PUSH2 0x2FD1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2FFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23FD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3016 DUP3 DUP5 PUSH2 0x2FDB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B LOG0 LOG1 0xF7 0xF8 0x2D EXTCODEHASH CALLER DUP12 MSTORE8 0xDD CALLCODE DELEGATECALL DUP5 0xE7 JUMP 0xAC 0xAC 0xA9 PUSH16 0x314577E018310BCA068D21A664736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "571:4312:15:-:0;;;1171:4:2;1128:48;;;;;;;;;614:1:16;589:26;;672:1;644:29;;732:1;702:31;;571:4312:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_496": {
									"entryPoint": 4020,
									"id": 496,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_722": {
									"entryPoint": 6131,
									"id": 722,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_750": {
									"entryPoint": 7843,
									"id": 750,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_64": {
									"entryPoint": 6153,
									"id": 64,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_526": {
									"entryPoint": 6648,
									"id": 526,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1154": {
									"entryPoint": 4485,
									"id": 1154,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1222": {
									"entryPoint": 6824,
									"id": 1222,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2383": {
									"entryPoint": 5471,
									"id": 2383,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_380": {
									"entryPoint": 7779,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1778": {
									"entryPoint": 8800,
									"id": 1778,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_602": {
									"entryPoint": 5768,
									"id": 602,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_132": {
									"entryPoint": 4503,
									"id": 132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_586": {
									"entryPoint": 5241,
									"id": 586,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_706": {
									"entryPoint": 4439,
									"id": 706,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_471": {
									"entryPoint": 6112,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 6785,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_457": {
									"entryPoint": 7738,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_448": {
									"entryPoint": 8860,
									"id": 448,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1103": {
									"entryPoint": 6658,
									"id": 1103,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1299": {
									"entryPoint": 4478,
									"id": 1299,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2152": {
									"entryPoint": 9031,
									"id": 2152,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1558": {
									"entryPoint": 8471,
									"id": 1558,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1270": {
									"entryPoint": 4638,
									"id": 1270,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_203": {
									"entryPoint": 5903,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_2483": {
									"entryPoint": 4785,
									"id": 2483,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_978": {
									"entryPoint": 7301,
									"id": 978,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1070": {
									"entryPoint": 7903,
									"id": 1070,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_653": {
									"entryPoint": 5482,
									"id": 653,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_875": {
									"entryPoint": 4157,
									"id": 875,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_899": {
									"entryPoint": 1721,
									"id": 899,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_827": {
									"entryPoint": 2716,
									"id": 827,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFee_2578": {
									"entryPoint": 4433,
									"id": 2578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnWallet_2571": {
									"entryPoint": 1528,
									"id": 2571,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_791": {
									"entryPoint": 2393,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_2070": {
									"entryPoint": 8672,
									"id": 2070,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2210": {
									"entryPoint": 8462,
									"id": 2210,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1531": {
									"entryPoint": 7541,
									"id": 1531,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2373": {
									"entryPoint": 2818,
									"id": 2373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isFeeExempt_2588": {
									"entryPoint": 2401,
									"id": 2588,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityFee_2584": {
									"entryPoint": 3980,
									"id": 2584,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityWallet_2575": {
									"entryPoint": 4114,
									"id": 2575,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_766": {
									"entryPoint": 1563,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_115": {
									"entryPoint": 3769,
									"id": 115,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_544": {
									"entryPoint": 2461,
									"id": 544,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_146": {
									"entryPoint": 2799,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_782": {
									"entryPoint": 3822,
									"id": 782,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalFee_2601": {
									"entryPoint": 2312,
									"id": 2601,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_807": {
									"entryPoint": 2289,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_931": {
									"entryPoint": 2347,
									"id": 931,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_174": {
									"entryPoint": 4301,
									"id": 174,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_851": {
									"entryPoint": 3986,
									"id": 851,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateFeeExemption_2510": {
									"entryPoint": 2510,
									"id": 2510,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateWallets_2565": {
									"entryPoint": 1755,
									"id": 2565,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1594": {
									"entryPoint": 7624,
									"id": 1594,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_564": {
									"entryPoint": 2430,
									"id": 564,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@utilityFee_2581": {
									"entryPoint": 4151,
									"id": 2581,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@utilityWallet_2573": {
									"entryPoint": 4077,
									"id": 2573,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2110": {
									"entryPoint": 8890,
									"id": 2110,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10039,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 11453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 9554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 10149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 11473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 10248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 11129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11169,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 10263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 11144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 11620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 12231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11887,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 9130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 10239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 11059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 11068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 11853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 11096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 11746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 12024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10025,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9213,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 11638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 11087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10859,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11287,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 11779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9849,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9344,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9340,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 11653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 11829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f": {
									"entryPoint": 10651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c": {
									"entryPoint": 10955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811": {
									"entryPoint": 10547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6": {
									"entryPoint": 11516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64": {
									"entryPoint": 10755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 11665,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 11788,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 11431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 11825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24355:17",
										"nodeType": "YulBlock",
										"src": "0:24355:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:17",
													"nodeType": "YulBlock",
													"src": "52:81:17",
													"statements": [
														{
															"nativeSrc": "62:65:17",
															"nodeType": "YulAssignment",
															"src": "62:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:17",
																		"nodeType": "YulLiteral",
																		"src": "84:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:17"
																},
																"nativeSrc": "73:54:17",
																"nodeType": "YulFunctionCall",
																"src": "73:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:17",
														"nodeType": "YulTypedName",
														"src": "34:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:17",
														"nodeType": "YulTypedName",
														"src": "44:7:17",
														"type": ""
													}
												],
												"src": "7:126:17"
											},
											{
												"body": {
													"nativeSrc": "184:51:17",
													"nodeType": "YulBlock",
													"src": "184:51:17",
													"statements": [
														{
															"nativeSrc": "194:35:17",
															"nodeType": "YulAssignment",
															"src": "194:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:17"
																},
																"nativeSrc": "205:24:17",
																"nodeType": "YulFunctionCall",
																"src": "205:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:17",
														"nodeType": "YulTypedName",
														"src": "166:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:17",
														"nodeType": "YulTypedName",
														"src": "176:7:17",
														"type": ""
													}
												],
												"src": "139:96:17"
											},
											{
												"body": {
													"nativeSrc": "306:53:17",
													"nodeType": "YulBlock",
													"src": "306:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:17"
																		},
																		"nativeSrc": "328:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:17"
																},
																"nativeSrc": "316:37:17",
																"nodeType": "YulFunctionCall",
																"src": "316:37:17"
															},
															"nativeSrc": "316:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:17",
														"nodeType": "YulTypedName",
														"src": "294:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:17",
														"nodeType": "YulTypedName",
														"src": "301:3:17",
														"type": ""
													}
												],
												"src": "241:118:17"
											},
											{
												"body": {
													"nativeSrc": "463:124:17",
													"nodeType": "YulBlock",
													"src": "463:124:17",
													"statements": [
														{
															"nativeSrc": "473:26:17",
															"nodeType": "YulAssignment",
															"src": "473:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:17",
																		"nodeType": "YulLiteral",
																		"src": "496:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:17"
																},
																"nativeSrc": "481:18:17",
																"nodeType": "YulFunctionCall",
																"src": "481:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:17",
																				"nodeType": "YulLiteral",
																				"src": "577:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:17"
																		},
																		"nativeSrc": "562:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:17"
																},
																"nativeSrc": "509:71:17",
																"nodeType": "YulFunctionCall",
																"src": "509:71:17"
															},
															"nativeSrc": "509:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:17",
														"nodeType": "YulTypedName",
														"src": "435:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:17",
														"nodeType": "YulTypedName",
														"src": "447:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:17",
														"nodeType": "YulTypedName",
														"src": "458:4:17",
														"type": ""
													}
												],
												"src": "365:222:17"
											},
											{
												"body": {
													"nativeSrc": "652:40:17",
													"nodeType": "YulBlock",
													"src": "652:40:17",
													"statements": [
														{
															"nativeSrc": "663:22:17",
															"nodeType": "YulAssignment",
															"src": "663:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "679:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "679:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "673:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "673:5:17"
																},
																"nativeSrc": "673:12:17",
																"nodeType": "YulFunctionCall",
																"src": "673:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "663:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "663:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "593:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "635:5:17",
														"nodeType": "YulTypedName",
														"src": "635:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "645:6:17",
														"nodeType": "YulTypedName",
														"src": "645:6:17",
														"type": ""
													}
												],
												"src": "593:99:17"
											},
											{
												"body": {
													"nativeSrc": "794:73:17",
													"nodeType": "YulBlock",
													"src": "794:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "811:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "811:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "816:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "804:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "804:6:17"
																},
																"nativeSrc": "804:19:17",
																"nodeType": "YulFunctionCall",
																"src": "804:19:17"
															},
															"nativeSrc": "804:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "804:19:17"
														},
														{
															"nativeSrc": "832:29:17",
															"nodeType": "YulAssignment",
															"src": "832:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "851:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "851:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "856:4:17",
																		"nodeType": "YulLiteral",
																		"src": "856:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "847:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "847:3:17"
																},
																"nativeSrc": "847:14:17",
																"nodeType": "YulFunctionCall",
																"src": "847:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "832:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "832:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "698:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "766:3:17",
														"nodeType": "YulTypedName",
														"src": "766:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "771:6:17",
														"nodeType": "YulTypedName",
														"src": "771:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "782:11:17",
														"nodeType": "YulTypedName",
														"src": "782:11:17",
														"type": ""
													}
												],
												"src": "698:169:17"
											},
											{
												"body": {
													"nativeSrc": "935:77:17",
													"nodeType": "YulBlock",
													"src": "935:77:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "952:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "952:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "957:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "962:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "946:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "946:5:17"
																},
																"nativeSrc": "946:23:17",
																"nodeType": "YulFunctionCall",
																"src": "946:23:17"
															},
															"nativeSrc": "946:23:17",
															"nodeType": "YulExpressionStatement",
															"src": "946:23:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "989:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "989:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "994:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "994:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:17"
																		},
																		"nativeSrc": "985:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "985:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1003:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1003:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "978:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:17"
																},
																"nativeSrc": "978:27:17",
																"nodeType": "YulFunctionCall",
																"src": "978:27:17"
															},
															"nativeSrc": "978:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "978:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "873:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "917:3:17",
														"nodeType": "YulTypedName",
														"src": "917:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "922:3:17",
														"nodeType": "YulTypedName",
														"src": "922:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "927:6:17",
														"nodeType": "YulTypedName",
														"src": "927:6:17",
														"type": ""
													}
												],
												"src": "873:139:17"
											},
											{
												"body": {
													"nativeSrc": "1066:54:17",
													"nodeType": "YulBlock",
													"src": "1066:54:17",
													"statements": [
														{
															"nativeSrc": "1076:38:17",
															"nodeType": "YulAssignment",
															"src": "1076:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1094:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1094:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1101:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1101:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1090:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1090:3:17"
																		},
																		"nativeSrc": "1090:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1090:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1110:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1110:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1106:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:17"
																		},
																		"nativeSrc": "1106:7:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1106:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1086:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1086:3:17"
																},
																"nativeSrc": "1086:28:17",
																"nodeType": "YulFunctionCall",
																"src": "1086:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1076:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1018:102:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:17",
														"nodeType": "YulTypedName",
														"src": "1049:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1059:6:17",
														"nodeType": "YulTypedName",
														"src": "1059:6:17",
														"type": ""
													}
												],
												"src": "1018:102:17"
											},
											{
												"body": {
													"nativeSrc": "1218:285:17",
													"nodeType": "YulBlock",
													"src": "1218:285:17",
													"statements": [
														{
															"nativeSrc": "1228:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1228:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1275:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1275:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1242:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "1242:32:17"
																},
																"nativeSrc": "1242:39:17",
																"nodeType": "YulFunctionCall",
																"src": "1242:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1232:6:17",
																	"nodeType": "YulTypedName",
																	"src": "1232:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1290:78:17",
															"nodeType": "YulAssignment",
															"src": "1290:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1356:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1356:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1361:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1361:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1297:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "1297:58:17"
																},
																"nativeSrc": "1297:71:17",
																"nodeType": "YulFunctionCall",
																"src": "1297:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1290:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1290:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1416:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1416:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1423:4:17",
																				"nodeType": "YulLiteral",
																				"src": "1423:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1412:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:17"
																		},
																		"nativeSrc": "1412:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1430:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1430:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1435:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1435:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1377:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "1377:34:17"
																},
																"nativeSrc": "1377:65:17",
																"nodeType": "YulFunctionCall",
																"src": "1377:65:17"
															},
															"nativeSrc": "1377:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "1377:65:17"
														},
														{
															"nativeSrc": "1451:46:17",
															"nodeType": "YulAssignment",
															"src": "1451:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1462:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1462:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1489:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1489:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1467:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "1467:21:17"
																		},
																		"nativeSrc": "1467:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1467:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1458:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1458:3:17"
																},
																"nativeSrc": "1458:39:17",
																"nodeType": "YulFunctionCall",
																"src": "1458:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1451:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1451:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1126:377:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1199:5:17",
														"nodeType": "YulTypedName",
														"src": "1199:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1206:3:17",
														"nodeType": "YulTypedName",
														"src": "1206:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1214:3:17",
														"nodeType": "YulTypedName",
														"src": "1214:3:17",
														"type": ""
													}
												],
												"src": "1126:377:17"
											},
											{
												"body": {
													"nativeSrc": "1627:195:17",
													"nodeType": "YulBlock",
													"src": "1627:195:17",
													"statements": [
														{
															"nativeSrc": "1637:26:17",
															"nodeType": "YulAssignment",
															"src": "1637:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1649:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1649:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1660:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1660:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1645:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:17"
																},
																"nativeSrc": "1645:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1645:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1637:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1637:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1684:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1695:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1695:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1680:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:17"
																		},
																		"nativeSrc": "1680:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1680:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1703:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "1703:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1709:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1709:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1699:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1699:3:17"
																		},
																		"nativeSrc": "1699:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1699:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1673:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:17"
																},
																"nativeSrc": "1673:47:17",
																"nodeType": "YulFunctionCall",
																"src": "1673:47:17"
															},
															"nativeSrc": "1673:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "1673:47:17"
														},
														{
															"nativeSrc": "1729:86:17",
															"nodeType": "YulAssignment",
															"src": "1729:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1801:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1801:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1810:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1810:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1737:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "1737:63:17"
																},
																"nativeSrc": "1737:78:17",
																"nodeType": "YulFunctionCall",
																"src": "1737:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1729:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1729:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1509:313:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1599:9:17",
														"nodeType": "YulTypedName",
														"src": "1599:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1611:6:17",
														"nodeType": "YulTypedName",
														"src": "1611:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1622:4:17",
														"nodeType": "YulTypedName",
														"src": "1622:4:17",
														"type": ""
													}
												],
												"src": "1509:313:17"
											},
											{
												"body": {
													"nativeSrc": "1868:35:17",
													"nodeType": "YulBlock",
													"src": "1868:35:17",
													"statements": [
														{
															"nativeSrc": "1878:19:17",
															"nodeType": "YulAssignment",
															"src": "1878:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1894:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1888:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:17"
																},
																"nativeSrc": "1888:9:17",
																"nodeType": "YulFunctionCall",
																"src": "1888:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1878:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1828:75:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1861:6:17",
														"nodeType": "YulTypedName",
														"src": "1861:6:17",
														"type": ""
													}
												],
												"src": "1828:75:17"
											},
											{
												"body": {
													"nativeSrc": "1998:28:17",
													"nodeType": "YulBlock",
													"src": "1998:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2015:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2015:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2018:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2018:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2008:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2008:6:17"
																},
																"nativeSrc": "2008:12:17",
																"nodeType": "YulFunctionCall",
																"src": "2008:12:17"
															},
															"nativeSrc": "2008:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "2008:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1909:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "1909:117:17"
											},
											{
												"body": {
													"nativeSrc": "2121:28:17",
													"nodeType": "YulBlock",
													"src": "2121:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2138:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2141:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2141:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2131:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:17"
																},
																"nativeSrc": "2131:12:17",
																"nodeType": "YulFunctionCall",
																"src": "2131:12:17"
															},
															"nativeSrc": "2131:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "2131:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2032:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "2032:117:17"
											},
											{
												"body": {
													"nativeSrc": "2198:79:17",
													"nodeType": "YulBlock",
													"src": "2198:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2255:16:17",
																"nodeType": "YulBlock",
																"src": "2255:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2264:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2264:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2267:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2267:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2257:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2257:6:17"
																			},
																			"nativeSrc": "2257:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2257:12:17"
																		},
																		"nativeSrc": "2257:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2257:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2221:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2221:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2246:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2246:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2228:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "2228:17:17"
																				},
																				"nativeSrc": "2228:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2228:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2218:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2218:2:17"
																		},
																		"nativeSrc": "2218:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2211:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:17"
																},
																"nativeSrc": "2211:43:17",
																"nodeType": "YulFunctionCall",
																"src": "2211:43:17"
															},
															"nativeSrc": "2208:63:17",
															"nodeType": "YulIf",
															"src": "2208:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2155:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2191:5:17",
														"nodeType": "YulTypedName",
														"src": "2191:5:17",
														"type": ""
													}
												],
												"src": "2155:122:17"
											},
											{
												"body": {
													"nativeSrc": "2335:87:17",
													"nodeType": "YulBlock",
													"src": "2335:87:17",
													"statements": [
														{
															"nativeSrc": "2345:29:17",
															"nodeType": "YulAssignment",
															"src": "2345:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2367:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2367:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2354:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2354:12:17"
																},
																"nativeSrc": "2354:20:17",
																"nodeType": "YulFunctionCall",
																"src": "2354:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2345:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2345:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2410:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2410:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2383:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "2383:26:17"
																},
																"nativeSrc": "2383:33:17",
																"nodeType": "YulFunctionCall",
																"src": "2383:33:17"
															},
															"nativeSrc": "2383:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "2383:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2283:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2313:6:17",
														"nodeType": "YulTypedName",
														"src": "2313:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2321:3:17",
														"nodeType": "YulTypedName",
														"src": "2321:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2329:5:17",
														"nodeType": "YulTypedName",
														"src": "2329:5:17",
														"type": ""
													}
												],
												"src": "2283:139:17"
											},
											{
												"body": {
													"nativeSrc": "2473:32:17",
													"nodeType": "YulBlock",
													"src": "2473:32:17",
													"statements": [
														{
															"nativeSrc": "2483:16:17",
															"nodeType": "YulAssignment",
															"src": "2483:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "2494:5:17",
																"nodeType": "YulIdentifier",
																"src": "2494:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2483:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2483:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2428:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2455:5:17",
														"nodeType": "YulTypedName",
														"src": "2455:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2465:7:17",
														"nodeType": "YulTypedName",
														"src": "2465:7:17",
														"type": ""
													}
												],
												"src": "2428:77:17"
											},
											{
												"body": {
													"nativeSrc": "2554:79:17",
													"nodeType": "YulBlock",
													"src": "2554:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:17",
																"nodeType": "YulBlock",
																"src": "2611:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:17"
																			},
																			"nativeSrc": "2613:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:17"
																		},
																		"nativeSrc": "2613:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:17"
																				},
																				"nativeSrc": "2584:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:17"
																		},
																		"nativeSrc": "2574:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:17"
																},
																"nativeSrc": "2567:43:17",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:17"
															},
															"nativeSrc": "2564:63:17",
															"nodeType": "YulIf",
															"src": "2564:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:17",
														"nodeType": "YulTypedName",
														"src": "2547:5:17",
														"type": ""
													}
												],
												"src": "2511:122:17"
											},
											{
												"body": {
													"nativeSrc": "2691:87:17",
													"nodeType": "YulBlock",
													"src": "2691:87:17",
													"statements": [
														{
															"nativeSrc": "2701:29:17",
															"nodeType": "YulAssignment",
															"src": "2701:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:17"
																},
																"nativeSrc": "2710:20:17",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:17"
																},
																"nativeSrc": "2739:33:17",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:17"
															},
															"nativeSrc": "2739:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:17",
														"nodeType": "YulTypedName",
														"src": "2669:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:17",
														"nodeType": "YulTypedName",
														"src": "2677:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:17",
														"nodeType": "YulTypedName",
														"src": "2685:5:17",
														"type": ""
													}
												],
												"src": "2639:139:17"
											},
											{
												"body": {
													"nativeSrc": "2867:391:17",
													"nodeType": "YulBlock",
													"src": "2867:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:17",
																"nodeType": "YulBlock",
																"src": "2913:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:17"
																			},
																			"nativeSrc": "2915:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:17"
																		},
																		"nativeSrc": "2915:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:17"
																		},
																		"nativeSrc": "2884:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:17"
																},
																"nativeSrc": "2880:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:17"
															},
															"nativeSrc": "2877:119:17",
															"nodeType": "YulIf",
															"src": "2877:119:17"
														},
														{
															"nativeSrc": "3006:117:17",
															"nodeType": "YulBlock",
															"src": "3006:117:17",
															"statements": [
																{
																	"nativeSrc": "3021:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:17"
																				},
																				"nativeSrc": "3081:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:17"
																		},
																		"nativeSrc": "3060:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:17",
															"nodeType": "YulBlock",
															"src": "3133:118:17",
															"statements": [
																{
																	"nativeSrc": "3148:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:17"
																				},
																				"nativeSrc": "3209:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:17"
																		},
																		"nativeSrc": "3188:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:17",
														"nodeType": "YulTypedName",
														"src": "2829:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:17",
														"nodeType": "YulTypedName",
														"src": "2840:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:17",
														"nodeType": "YulTypedName",
														"src": "2852:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:17",
														"nodeType": "YulTypedName",
														"src": "2860:6:17",
														"type": ""
													}
												],
												"src": "2784:474:17"
											},
											{
												"body": {
													"nativeSrc": "3306:48:17",
													"nodeType": "YulBlock",
													"src": "3306:48:17",
													"statements": [
														{
															"nativeSrc": "3316:32:17",
															"nodeType": "YulAssignment",
															"src": "3316:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:17"
																		},
																		"nativeSrc": "3334:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:17"
																},
																"nativeSrc": "3327:21:17",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:17",
														"nodeType": "YulTypedName",
														"src": "3288:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:17",
														"nodeType": "YulTypedName",
														"src": "3298:7:17",
														"type": ""
													}
												],
												"src": "3264:90:17"
											},
											{
												"body": {
													"nativeSrc": "3419:50:17",
													"nodeType": "YulBlock",
													"src": "3419:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:17",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:17"
																		},
																		"nativeSrc": "3441:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:17"
																},
																"nativeSrc": "3429:34:17",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:17"
															},
															"nativeSrc": "3429:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:17",
														"nodeType": "YulTypedName",
														"src": "3407:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:17",
														"nodeType": "YulTypedName",
														"src": "3414:3:17",
														"type": ""
													}
												],
												"src": "3360:109:17"
											},
											{
												"body": {
													"nativeSrc": "3567:118:17",
													"nodeType": "YulBlock",
													"src": "3567:118:17",
													"statements": [
														{
															"nativeSrc": "3577:26:17",
															"nodeType": "YulAssignment",
															"src": "3577:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:17"
																},
																"nativeSrc": "3585:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:17",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:17"
																		},
																		"nativeSrc": "3660:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:17"
																},
																"nativeSrc": "3613:65:17",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:17"
															},
															"nativeSrc": "3613:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:17",
														"nodeType": "YulTypedName",
														"src": "3539:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:17",
														"nodeType": "YulTypedName",
														"src": "3551:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:17",
														"nodeType": "YulTypedName",
														"src": "3562:4:17",
														"type": ""
													}
												],
												"src": "3475:210:17"
											},
											{
												"body": {
													"nativeSrc": "3791:519:17",
													"nodeType": "YulBlock",
													"src": "3791:519:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:17",
																"nodeType": "YulBlock",
																"src": "3837:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:17"
																			},
																			"nativeSrc": "3839:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:17"
																		},
																		"nativeSrc": "3839:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:17"
																		},
																		"nativeSrc": "3808:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:17"
																},
																"nativeSrc": "3804:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:17"
															},
															"nativeSrc": "3801:119:17",
															"nodeType": "YulIf",
															"src": "3801:119:17"
														},
														{
															"nativeSrc": "3930:117:17",
															"nodeType": "YulBlock",
															"src": "3930:117:17",
															"statements": [
																{
																	"nativeSrc": "3945:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:17"
																				},
																				"nativeSrc": "4005:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:17"
																		},
																		"nativeSrc": "3984:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:17",
															"nodeType": "YulBlock",
															"src": "4057:118:17",
															"statements": [
																{
																	"nativeSrc": "4072:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:17"
																				},
																				"nativeSrc": "4133:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:17"
																		},
																		"nativeSrc": "4112:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:17",
															"nodeType": "YulBlock",
															"src": "4185:118:17",
															"statements": [
																{
																	"nativeSrc": "4200:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:17"
																				},
																				"nativeSrc": "4261:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4240:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:17"
																		},
																		"nativeSrc": "4240:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nativeSrc": "3691:619:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:17",
														"nodeType": "YulTypedName",
														"src": "3745:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:17",
														"nodeType": "YulTypedName",
														"src": "3756:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:17",
														"nodeType": "YulTypedName",
														"src": "3768:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:17",
														"nodeType": "YulTypedName",
														"src": "3776:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:17",
														"nodeType": "YulTypedName",
														"src": "3784:6:17",
														"type": ""
													}
												],
												"src": "3691:619:17"
											},
											{
												"body": {
													"nativeSrc": "4381:53:17",
													"nodeType": "YulBlock",
													"src": "4381:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4398:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4398:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4421:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4421:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4403:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "4403:17:17"
																		},
																		"nativeSrc": "4403:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4391:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:17"
																},
																"nativeSrc": "4391:37:17",
																"nodeType": "YulFunctionCall",
																"src": "4391:37:17"
															},
															"nativeSrc": "4391:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "4391:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4316:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4369:5:17",
														"nodeType": "YulTypedName",
														"src": "4369:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4376:3:17",
														"nodeType": "YulTypedName",
														"src": "4376:3:17",
														"type": ""
													}
												],
												"src": "4316:118:17"
											},
											{
												"body": {
													"nativeSrc": "4538:124:17",
													"nodeType": "YulBlock",
													"src": "4538:124:17",
													"statements": [
														{
															"nativeSrc": "4548:26:17",
															"nodeType": "YulAssignment",
															"src": "4548:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4560:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4560:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4571:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4571:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4556:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4556:3:17"
																},
																"nativeSrc": "4556:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4556:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4548:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4548:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4628:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4628:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4641:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4652:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4652:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4637:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4637:3:17"
																		},
																		"nativeSrc": "4637:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4637:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4584:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "4584:43:17"
																},
																"nativeSrc": "4584:71:17",
																"nodeType": "YulFunctionCall",
																"src": "4584:71:17"
															},
															"nativeSrc": "4584:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "4584:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4440:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4510:9:17",
														"nodeType": "YulTypedName",
														"src": "4510:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4522:6:17",
														"nodeType": "YulTypedName",
														"src": "4522:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4533:4:17",
														"nodeType": "YulTypedName",
														"src": "4533:4:17",
														"type": ""
													}
												],
												"src": "4440:222:17"
											},
											{
												"body": {
													"nativeSrc": "4768:519:17",
													"nodeType": "YulBlock",
													"src": "4768:519:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4814:83:17",
																"nodeType": "YulBlock",
																"src": "4814:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4816:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "4816:77:17"
																			},
																			"nativeSrc": "4816:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4816:79:17"
																		},
																		"nativeSrc": "4816:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4816:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4789:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4789:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4798:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4785:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4785:3:17"
																		},
																		"nativeSrc": "4785:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4785:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4810:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4810:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4781:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:17"
																},
																"nativeSrc": "4781:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4781:32:17"
															},
															"nativeSrc": "4778:119:17",
															"nodeType": "YulIf",
															"src": "4778:119:17"
														},
														{
															"nativeSrc": "4907:117:17",
															"nodeType": "YulBlock",
															"src": "4907:117:17",
															"statements": [
																{
																	"nativeSrc": "4922:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4922:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4936:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4936:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4926:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4926:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4951:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4951:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4986:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4986:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4997:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4997:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4982:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4982:3:17"
																				},
																				"nativeSrc": "4982:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4982:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5006:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5006:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4961:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4961:20:17"
																		},
																		"nativeSrc": "4961:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4961:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4951:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4951:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5034:118:17",
															"nodeType": "YulBlock",
															"src": "5034:118:17",
															"statements": [
																{
																	"nativeSrc": "5049:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5049:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5063:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5063:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5053:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5053:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5079:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5079:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5114:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5114:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5125:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5125:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5110:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5110:3:17"
																				},
																				"nativeSrc": "5110:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5110:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5134:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5134:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5089:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5089:20:17"
																		},
																		"nativeSrc": "5089:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5089:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5079:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5079:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5162:118:17",
															"nodeType": "YulBlock",
															"src": "5162:118:17",
															"statements": [
																{
																	"nativeSrc": "5177:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5177:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5191:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5181:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5181:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5207:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5207:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5242:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5242:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5253:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5253:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5238:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5238:3:17"
																				},
																				"nativeSrc": "5238:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5238:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5262:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5262:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5217:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5217:20:17"
																		},
																		"nativeSrc": "5217:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5217:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5207:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5207:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4668:619:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4722:9:17",
														"nodeType": "YulTypedName",
														"src": "4722:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4733:7:17",
														"nodeType": "YulTypedName",
														"src": "4733:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4745:6:17",
														"nodeType": "YulTypedName",
														"src": "4745:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4753:6:17",
														"nodeType": "YulTypedName",
														"src": "4753:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4761:6:17",
														"nodeType": "YulTypedName",
														"src": "4761:6:17",
														"type": ""
													}
												],
												"src": "4668:619:17"
											},
											{
												"body": {
													"nativeSrc": "5336:43:17",
													"nodeType": "YulBlock",
													"src": "5336:43:17",
													"statements": [
														{
															"nativeSrc": "5346:27:17",
															"nodeType": "YulAssignment",
															"src": "5346:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5361:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5361:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5368:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5368:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5357:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5357:3:17"
																},
																"nativeSrc": "5357:16:17",
																"nodeType": "YulFunctionCall",
																"src": "5357:16:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5346:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5346:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5293:86:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5318:5:17",
														"nodeType": "YulTypedName",
														"src": "5318:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5328:7:17",
														"nodeType": "YulTypedName",
														"src": "5328:7:17",
														"type": ""
													}
												],
												"src": "5293:86:17"
											},
											{
												"body": {
													"nativeSrc": "5446:51:17",
													"nodeType": "YulBlock",
													"src": "5446:51:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5463:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5463:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5484:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5484:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5468:15:17",
																			"nodeType": "YulIdentifier",
																			"src": "5468:15:17"
																		},
																		"nativeSrc": "5468:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5468:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5456:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5456:6:17"
																},
																"nativeSrc": "5456:35:17",
																"nodeType": "YulFunctionCall",
																"src": "5456:35:17"
															},
															"nativeSrc": "5456:35:17",
															"nodeType": "YulExpressionStatement",
															"src": "5456:35:17"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5385:112:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5434:5:17",
														"nodeType": "YulTypedName",
														"src": "5434:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5441:3:17",
														"nodeType": "YulTypedName",
														"src": "5441:3:17",
														"type": ""
													}
												],
												"src": "5385:112:17"
											},
											{
												"body": {
													"nativeSrc": "5597:120:17",
													"nodeType": "YulBlock",
													"src": "5597:120:17",
													"statements": [
														{
															"nativeSrc": "5607:26:17",
															"nodeType": "YulAssignment",
															"src": "5607:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5619:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5619:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5630:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5630:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5615:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:17"
																},
																"nativeSrc": "5615:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5615:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5607:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5607:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5683:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5683:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5696:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5696:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5707:1:17",
																				"nodeType": "YulLiteral",
																				"src": "5707:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5692:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5692:3:17"
																		},
																		"nativeSrc": "5692:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5643:39:17",
																	"nodeType": "YulIdentifier",
																	"src": "5643:39:17"
																},
																"nativeSrc": "5643:67:17",
																"nodeType": "YulFunctionCall",
																"src": "5643:67:17"
															},
															"nativeSrc": "5643:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "5643:67:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5503:214:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5569:9:17",
														"nodeType": "YulTypedName",
														"src": "5569:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5581:6:17",
														"nodeType": "YulTypedName",
														"src": "5581:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5592:4:17",
														"nodeType": "YulTypedName",
														"src": "5592:4:17",
														"type": ""
													}
												],
												"src": "5503:214:17"
											},
											{
												"body": {
													"nativeSrc": "5789:263:17",
													"nodeType": "YulBlock",
													"src": "5789:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5835:83:17",
																"nodeType": "YulBlock",
																"src": "5835:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5837:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "5837:77:17"
																			},
																			"nativeSrc": "5837:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5837:79:17"
																		},
																		"nativeSrc": "5837:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5837:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5810:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5810:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5819:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5819:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5806:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5806:3:17"
																		},
																		"nativeSrc": "5806:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5806:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5831:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5831:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5802:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5802:3:17"
																},
																"nativeSrc": "5802:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5802:32:17"
															},
															"nativeSrc": "5799:119:17",
															"nodeType": "YulIf",
															"src": "5799:119:17"
														},
														{
															"nativeSrc": "5928:117:17",
															"nodeType": "YulBlock",
															"src": "5928:117:17",
															"statements": [
																{
																	"nativeSrc": "5943:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5943:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5957:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5957:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5947:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5947:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5972:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5972:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6007:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "6007:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6018:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "6018:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6003:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6003:3:17"
																				},
																				"nativeSrc": "6003:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6003:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6027:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "6027:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5982:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5982:20:17"
																		},
																		"nativeSrc": "5982:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5982:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5972:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5972:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5723:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5759:9:17",
														"nodeType": "YulTypedName",
														"src": "5759:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5770:7:17",
														"nodeType": "YulTypedName",
														"src": "5770:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5782:6:17",
														"nodeType": "YulTypedName",
														"src": "5782:6:17",
														"type": ""
													}
												],
												"src": "5723:329:17"
											},
											{
												"body": {
													"nativeSrc": "6147:28:17",
													"nodeType": "YulBlock",
													"src": "6147:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6164:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6164:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6167:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6167:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6157:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:17"
																},
																"nativeSrc": "6157:12:17",
																"nodeType": "YulFunctionCall",
																"src": "6157:12:17"
															},
															"nativeSrc": "6157:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "6157:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6058:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "6058:117:17"
											},
											{
												"body": {
													"nativeSrc": "6270:28:17",
													"nodeType": "YulBlock",
													"src": "6270:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6287:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6290:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6290:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6280:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6280:6:17"
																},
																"nativeSrc": "6280:12:17",
																"nodeType": "YulFunctionCall",
																"src": "6280:12:17"
															},
															"nativeSrc": "6280:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "6280:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6181:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "6181:117:17"
											},
											{
												"body": {
													"nativeSrc": "6332:152:17",
													"nodeType": "YulBlock",
													"src": "6332:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6349:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6349:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6352:77:17",
																		"nodeType": "YulLiteral",
																		"src": "6352:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6342:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6342:6:17"
																},
																"nativeSrc": "6342:88:17",
																"nodeType": "YulFunctionCall",
																"src": "6342:88:17"
															},
															"nativeSrc": "6342:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "6342:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6446:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6446:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6449:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6449:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6439:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6439:6:17"
																},
																"nativeSrc": "6439:15:17",
																"nodeType": "YulFunctionCall",
																"src": "6439:15:17"
															},
															"nativeSrc": "6439:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "6439:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6470:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6470:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6473:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6463:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:17"
																},
																"nativeSrc": "6463:15:17",
																"nodeType": "YulFunctionCall",
																"src": "6463:15:17"
															},
															"nativeSrc": "6463:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "6463:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6304:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "6304:180:17"
											},
											{
												"body": {
													"nativeSrc": "6533:238:17",
													"nodeType": "YulBlock",
													"src": "6533:238:17",
													"statements": [
														{
															"nativeSrc": "6543:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6543:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6565:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6565:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6595:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "6595:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6573:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "6573:21:17"
																		},
																		"nativeSrc": "6573:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6573:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6561:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6561:3:17"
																},
																"nativeSrc": "6561:40:17",
																"nodeType": "YulFunctionCall",
																"src": "6561:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6547:10:17",
																	"nodeType": "YulTypedName",
																	"src": "6547:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6712:22:17",
																"nodeType": "YulBlock",
																"src": "6712:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6714:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "6714:16:17"
																			},
																			"nativeSrc": "6714:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6714:18:17"
																		},
																		"nativeSrc": "6714:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6714:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6655:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "6655:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6667:18:17",
																				"nodeType": "YulLiteral",
																				"src": "6667:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6652:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "6652:2:17"
																		},
																		"nativeSrc": "6652:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6652:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6691:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "6691:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6703:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6703:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6688:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "6688:2:17"
																		},
																		"nativeSrc": "6688:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6688:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6649:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6649:2:17"
																},
																"nativeSrc": "6649:62:17",
																"nodeType": "YulFunctionCall",
																"src": "6649:62:17"
															},
															"nativeSrc": "6646:88:17",
															"nodeType": "YulIf",
															"src": "6646:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6750:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6750:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6754:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "6754:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6743:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6743:6:17"
																},
																"nativeSrc": "6743:22:17",
																"nodeType": "YulFunctionCall",
																"src": "6743:22:17"
															},
															"nativeSrc": "6743:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "6743:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6490:281:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6519:6:17",
														"nodeType": "YulTypedName",
														"src": "6519:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6527:4:17",
														"nodeType": "YulTypedName",
														"src": "6527:4:17",
														"type": ""
													}
												],
												"src": "6490:281:17"
											},
											{
												"body": {
													"nativeSrc": "6818:88:17",
													"nodeType": "YulBlock",
													"src": "6818:88:17",
													"statements": [
														{
															"nativeSrc": "6828:30:17",
															"nodeType": "YulAssignment",
															"src": "6828:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6838:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "6838:18:17"
																},
																"nativeSrc": "6838:20:17",
																"nodeType": "YulFunctionCall",
																"src": "6838:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6828:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6887:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6887:6:17"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6895:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6895:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6867:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "6867:19:17"
																},
																"nativeSrc": "6867:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6867:33:17"
															},
															"nativeSrc": "6867:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "6867:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6777:129:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6802:4:17",
														"nodeType": "YulTypedName",
														"src": "6802:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6811:6:17",
														"nodeType": "YulTypedName",
														"src": "6811:6:17",
														"type": ""
													}
												],
												"src": "6777:129:17"
											},
											{
												"body": {
													"nativeSrc": "6978:241:17",
													"nodeType": "YulBlock",
													"src": "6978:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7083:22:17",
																"nodeType": "YulBlock",
																"src": "7083:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7085:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "7085:16:17"
																			},
																			"nativeSrc": "7085:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7085:18:17"
																		},
																		"nativeSrc": "7085:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7085:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7055:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7055:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7063:18:17",
																		"nodeType": "YulLiteral",
																		"src": "7063:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7052:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7052:2:17"
																},
																"nativeSrc": "7052:30:17",
																"nodeType": "YulFunctionCall",
																"src": "7052:30:17"
															},
															"nativeSrc": "7049:56:17",
															"nodeType": "YulIf",
															"src": "7049:56:17"
														},
														{
															"nativeSrc": "7115:37:17",
															"nodeType": "YulAssignment",
															"src": "7115:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7145:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7145:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7123:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "7123:21:17"
																},
																"nativeSrc": "7123:29:17",
																"nodeType": "YulFunctionCall",
																"src": "7123:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7115:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7115:4:17"
																}
															]
														},
														{
															"nativeSrc": "7189:23:17",
															"nodeType": "YulAssignment",
															"src": "7189:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7201:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7201:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7207:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7207:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7197:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7197:3:17"
																},
																"nativeSrc": "7197:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7197:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7189:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7189:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "6912:307:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6962:6:17",
														"nodeType": "YulTypedName",
														"src": "6962:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6973:4:17",
														"nodeType": "YulTypedName",
														"src": "6973:4:17",
														"type": ""
													}
												],
												"src": "6912:307:17"
											},
											{
												"body": {
													"nativeSrc": "7289:84:17",
													"nodeType": "YulBlock",
													"src": "7289:84:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7313:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7313:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7318:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7318:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7323:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7323:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7300:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "7300:12:17"
																},
																"nativeSrc": "7300:30:17",
																"nodeType": "YulFunctionCall",
																"src": "7300:30:17"
															},
															"nativeSrc": "7300:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "7300:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7350:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7350:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7355:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7355:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7346:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7346:3:17"
																		},
																		"nativeSrc": "7346:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7346:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7364:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7364:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7339:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7339:6:17"
																},
																"nativeSrc": "7339:27:17",
																"nodeType": "YulFunctionCall",
																"src": "7339:27:17"
															},
															"nativeSrc": "7339:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "7339:27:17"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7225:148:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7271:3:17",
														"nodeType": "YulTypedName",
														"src": "7271:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7276:3:17",
														"nodeType": "YulTypedName",
														"src": "7276:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7281:6:17",
														"nodeType": "YulTypedName",
														"src": "7281:6:17",
														"type": ""
													}
												],
												"src": "7225:148:17"
											},
											{
												"body": {
													"nativeSrc": "7462:340:17",
													"nodeType": "YulBlock",
													"src": "7462:340:17",
													"statements": [
														{
															"nativeSrc": "7472:74:17",
															"nodeType": "YulAssignment",
															"src": "7472:74:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7538:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7538:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7497:40:17",
																			"nodeType": "YulIdentifier",
																			"src": "7497:40:17"
																		},
																		"nativeSrc": "7497:48:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7497:48:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7481:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "7481:15:17"
																},
																"nativeSrc": "7481:65:17",
																"nodeType": "YulFunctionCall",
																"src": "7481:65:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7472:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "7472:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7562:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7562:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7569:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7569:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7555:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7555:6:17"
																},
																"nativeSrc": "7555:21:17",
																"nodeType": "YulFunctionCall",
																"src": "7555:21:17"
															},
															"nativeSrc": "7555:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "7555:21:17"
														},
														{
															"nativeSrc": "7585:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7585:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7600:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7600:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7607:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7607:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7596:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7596:3:17"
																},
																"nativeSrc": "7596:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7596:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7589:3:17",
																	"nodeType": "YulTypedName",
																	"src": "7589:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7650:83:17",
																"nodeType": "YulBlock",
																"src": "7650:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7652:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "7652:77:17"
																			},
																			"nativeSrc": "7652:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7652:79:17"
																		},
																		"nativeSrc": "7652:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7652:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7631:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7631:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7636:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7636:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7627:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7627:3:17"
																		},
																		"nativeSrc": "7627:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7627:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7645:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7645:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7624:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7624:2:17"
																},
																"nativeSrc": "7624:25:17",
																"nodeType": "YulFunctionCall",
																"src": "7624:25:17"
															},
															"nativeSrc": "7621:112:17",
															"nodeType": "YulIf",
															"src": "7621:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7779:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7779:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7784:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7784:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7789:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7789:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7742:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "7742:36:17"
																},
																"nativeSrc": "7742:54:17",
																"nodeType": "YulFunctionCall",
																"src": "7742:54:17"
															},
															"nativeSrc": "7742:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "7742:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "7379:423:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7435:3:17",
														"nodeType": "YulTypedName",
														"src": "7435:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7440:6:17",
														"nodeType": "YulTypedName",
														"src": "7440:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7448:3:17",
														"nodeType": "YulTypedName",
														"src": "7448:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7456:5:17",
														"nodeType": "YulTypedName",
														"src": "7456:5:17",
														"type": ""
													}
												],
												"src": "7379:423:17"
											},
											{
												"body": {
													"nativeSrc": "7882:277:17",
													"nodeType": "YulBlock",
													"src": "7882:277:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7931:83:17",
																"nodeType": "YulBlock",
																"src": "7931:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7933:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "7933:77:17"
																			},
																			"nativeSrc": "7933:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7933:79:17"
																		},
																		"nativeSrc": "7933:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7933:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7910:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "7910:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7918:4:17",
																						"nodeType": "YulLiteral",
																						"src": "7918:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7906:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7906:3:17"
																				},
																				"nativeSrc": "7906:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7906:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7925:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7925:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7902:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7902:3:17"
																		},
																		"nativeSrc": "7902:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7902:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7895:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7895:6:17"
																},
																"nativeSrc": "7895:35:17",
																"nodeType": "YulFunctionCall",
																"src": "7895:35:17"
															},
															"nativeSrc": "7892:122:17",
															"nodeType": "YulIf",
															"src": "7892:122:17"
														},
														{
															"nativeSrc": "8023:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8023:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8050:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8050:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8037:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "8037:12:17"
																},
																"nativeSrc": "8037:20:17",
																"nodeType": "YulFunctionCall",
																"src": "8037:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8027:6:17",
																	"nodeType": "YulTypedName",
																	"src": "8027:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8066:87:17",
															"nodeType": "YulAssignment",
															"src": "8066:87:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8126:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8126:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8134:4:17",
																				"nodeType": "YulLiteral",
																				"src": "8134:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8122:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8122:3:17"
																		},
																		"nativeSrc": "8122:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8122:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8141:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8141:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8149:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8149:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8075:46:17",
																	"nodeType": "YulIdentifier",
																	"src": "8075:46:17"
																},
																"nativeSrc": "8075:78:17",
																"nodeType": "YulFunctionCall",
																"src": "8075:78:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8066:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "8066:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "7821:338:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7860:6:17",
														"nodeType": "YulTypedName",
														"src": "7860:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7868:3:17",
														"nodeType": "YulTypedName",
														"src": "7868:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7876:5:17",
														"nodeType": "YulTypedName",
														"src": "7876:5:17",
														"type": ""
													}
												],
												"src": "7821:338:17"
											},
											{
												"body": {
													"nativeSrc": "8257:560:17",
													"nodeType": "YulBlock",
													"src": "8257:560:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8303:83:17",
																"nodeType": "YulBlock",
																"src": "8303:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8305:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "8305:77:17"
																			},
																			"nativeSrc": "8305:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8305:79:17"
																		},
																		"nativeSrc": "8305:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8305:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8278:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8278:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8287:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8287:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8274:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:17"
																		},
																		"nativeSrc": "8274:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8274:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8299:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8299:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8270:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8270:3:17"
																},
																"nativeSrc": "8270:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8270:32:17"
															},
															"nativeSrc": "8267:119:17",
															"nodeType": "YulIf",
															"src": "8267:119:17"
														},
														{
															"nativeSrc": "8396:117:17",
															"nodeType": "YulBlock",
															"src": "8396:117:17",
															"statements": [
																{
																	"nativeSrc": "8411:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8411:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8425:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8425:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8415:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8415:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8440:63:17",
																	"nodeType": "YulAssignment",
																	"src": "8440:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8475:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8475:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8486:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8486:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8471:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8471:3:17"
																				},
																				"nativeSrc": "8471:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8471:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8495:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8495:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8450:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "8450:20:17"
																		},
																		"nativeSrc": "8450:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8450:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8440:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8440:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8523:287:17",
															"nodeType": "YulBlock",
															"src": "8523:287:17",
															"statements": [
																{
																	"nativeSrc": "8538:46:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8538:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8569:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8569:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8580:2:17",
																						"nodeType": "YulLiteral",
																						"src": "8580:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8565:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8565:3:17"
																				},
																				"nativeSrc": "8565:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8565:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8552:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "8552:12:17"
																		},
																		"nativeSrc": "8552:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8552:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8542:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8542:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8631:83:17",
																		"nodeType": "YulBlock",
																		"src": "8631:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8633:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "8633:77:17"
																					},
																					"nativeSrc": "8633:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8633:79:17"
																				},
																				"nativeSrc": "8633:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "8633:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8603:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8603:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8611:18:17",
																				"nodeType": "YulLiteral",
																				"src": "8611:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8600:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "8600:2:17"
																		},
																		"nativeSrc": "8600:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:30:17"
																	},
																	"nativeSrc": "8597:117:17",
																	"nodeType": "YulIf",
																	"src": "8597:117:17"
																},
																{
																	"nativeSrc": "8728:72:17",
																	"nodeType": "YulAssignment",
																	"src": "8728:72:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8772:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8772:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8783:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8783:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8768:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8768:3:17"
																				},
																				"nativeSrc": "8768:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8768:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8792:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8792:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "8738:29:17",
																			"nodeType": "YulIdentifier",
																			"src": "8738:29:17"
																		},
																		"nativeSrc": "8738:62:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8738:62:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8728:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8728:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "8165:652:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8219:9:17",
														"nodeType": "YulTypedName",
														"src": "8219:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8230:7:17",
														"nodeType": "YulTypedName",
														"src": "8230:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8242:6:17",
														"nodeType": "YulTypedName",
														"src": "8242:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8250:6:17",
														"nodeType": "YulTypedName",
														"src": "8250:6:17",
														"type": ""
													}
												],
												"src": "8165:652:17"
											},
											{
												"body": {
													"nativeSrc": "8868:32:17",
													"nodeType": "YulBlock",
													"src": "8868:32:17",
													"statements": [
														{
															"nativeSrc": "8878:16:17",
															"nodeType": "YulAssignment",
															"src": "8878:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "8889:5:17",
																"nodeType": "YulIdentifier",
																"src": "8889:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8878:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "8878:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "8823:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8850:5:17",
														"nodeType": "YulTypedName",
														"src": "8850:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8860:7:17",
														"nodeType": "YulTypedName",
														"src": "8860:7:17",
														"type": ""
													}
												],
												"src": "8823:77:17"
											},
											{
												"body": {
													"nativeSrc": "8971:53:17",
													"nodeType": "YulBlock",
													"src": "8971:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8988:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8988:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9011:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9011:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8993:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "8993:17:17"
																		},
																		"nativeSrc": "8993:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8993:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8981:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8981:6:17"
																},
																"nativeSrc": "8981:37:17",
																"nodeType": "YulFunctionCall",
																"src": "8981:37:17"
															},
															"nativeSrc": "8981:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "8981:37:17"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8906:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8959:5:17",
														"nodeType": "YulTypedName",
														"src": "8959:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8966:3:17",
														"nodeType": "YulTypedName",
														"src": "8966:3:17",
														"type": ""
													}
												],
												"src": "8906:118:17"
											},
											{
												"body": {
													"nativeSrc": "9128:124:17",
													"nodeType": "YulBlock",
													"src": "9128:124:17",
													"statements": [
														{
															"nativeSrc": "9138:26:17",
															"nodeType": "YulAssignment",
															"src": "9138:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9150:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9150:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9161:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9161:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9146:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9146:3:17"
																},
																"nativeSrc": "9146:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9146:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9138:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9138:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9218:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9218:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9231:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9231:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9242:1:17",
																				"nodeType": "YulLiteral",
																				"src": "9242:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9227:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9227:3:17"
																		},
																		"nativeSrc": "9227:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9174:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "9174:43:17"
																},
																"nativeSrc": "9174:71:17",
																"nodeType": "YulFunctionCall",
																"src": "9174:71:17"
															},
															"nativeSrc": "9174:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "9174:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "9030:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9100:9:17",
														"nodeType": "YulTypedName",
														"src": "9100:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9112:6:17",
														"nodeType": "YulTypedName",
														"src": "9112:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9123:4:17",
														"nodeType": "YulTypedName",
														"src": "9123:4:17",
														"type": ""
													}
												],
												"src": "9030:222:17"
											},
											{
												"body": {
													"nativeSrc": "9298:76:17",
													"nodeType": "YulBlock",
													"src": "9298:76:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9352:16:17",
																"nodeType": "YulBlock",
																"src": "9352:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9361:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9361:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9364:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9364:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9354:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9354:6:17"
																			},
																			"nativeSrc": "9354:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9354:12:17"
																		},
																		"nativeSrc": "9354:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9354:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9321:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9321:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9343:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "9343:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9328:14:17",
																					"nodeType": "YulIdentifier",
																					"src": "9328:14:17"
																				},
																				"nativeSrc": "9328:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9328:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9318:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "9318:2:17"
																		},
																		"nativeSrc": "9318:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9318:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9311:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9311:6:17"
																},
																"nativeSrc": "9311:40:17",
																"nodeType": "YulFunctionCall",
																"src": "9311:40:17"
															},
															"nativeSrc": "9308:60:17",
															"nodeType": "YulIf",
															"src": "9308:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9258:116:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9291:5:17",
														"nodeType": "YulTypedName",
														"src": "9291:5:17",
														"type": ""
													}
												],
												"src": "9258:116:17"
											},
											{
												"body": {
													"nativeSrc": "9429:84:17",
													"nodeType": "YulBlock",
													"src": "9429:84:17",
													"statements": [
														{
															"nativeSrc": "9439:29:17",
															"nodeType": "YulAssignment",
															"src": "9439:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9461:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9461:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9448:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "9448:12:17"
																},
																"nativeSrc": "9448:20:17",
																"nodeType": "YulFunctionCall",
																"src": "9448:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9439:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9439:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9501:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "9501:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9477:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "9477:23:17"
																},
																"nativeSrc": "9477:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9477:30:17"
															},
															"nativeSrc": "9477:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "9477:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9380:133:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9407:6:17",
														"nodeType": "YulTypedName",
														"src": "9407:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9415:3:17",
														"nodeType": "YulTypedName",
														"src": "9415:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9423:5:17",
														"nodeType": "YulTypedName",
														"src": "9423:5:17",
														"type": ""
													}
												],
												"src": "9380:133:17"
											},
											{
												"body": {
													"nativeSrc": "9599:388:17",
													"nodeType": "YulBlock",
													"src": "9599:388:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9645:83:17",
																"nodeType": "YulBlock",
																"src": "9645:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9647:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9647:77:17"
																			},
																			"nativeSrc": "9647:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9647:79:17"
																		},
																		"nativeSrc": "9647:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9647:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9620:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9620:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9629:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9629:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9616:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9616:3:17"
																		},
																		"nativeSrc": "9616:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9616:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9641:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9641:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9612:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9612:3:17"
																},
																"nativeSrc": "9612:32:17",
																"nodeType": "YulFunctionCall",
																"src": "9612:32:17"
															},
															"nativeSrc": "9609:119:17",
															"nodeType": "YulIf",
															"src": "9609:119:17"
														},
														{
															"nativeSrc": "9738:117:17",
															"nodeType": "YulBlock",
															"src": "9738:117:17",
															"statements": [
																{
																	"nativeSrc": "9753:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9753:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9767:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9767:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9757:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9757:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9782:63:17",
																	"nodeType": "YulAssignment",
																	"src": "9782:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9817:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9817:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9828:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9828:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9813:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9813:3:17"
																				},
																				"nativeSrc": "9813:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9813:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9837:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9837:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9792:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "9792:20:17"
																		},
																		"nativeSrc": "9792:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9792:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9782:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "9782:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9865:115:17",
															"nodeType": "YulBlock",
															"src": "9865:115:17",
															"statements": [
																{
																	"nativeSrc": "9880:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9880:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9894:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9894:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9884:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9884:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9910:60:17",
																	"nodeType": "YulAssignment",
																	"src": "9910:60:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9942:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9942:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9953:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9953:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9938:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9938:3:17"
																				},
																				"nativeSrc": "9938:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9938:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9962:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9962:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9920:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "9920:17:17"
																		},
																		"nativeSrc": "9920:50:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9920:50:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9910:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "9910:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9519:468:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9561:9:17",
														"nodeType": "YulTypedName",
														"src": "9561:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9572:7:17",
														"nodeType": "YulTypedName",
														"src": "9572:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9584:6:17",
														"nodeType": "YulTypedName",
														"src": "9584:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9592:6:17",
														"nodeType": "YulTypedName",
														"src": "9592:6:17",
														"type": ""
													}
												],
												"src": "9519:468:17"
											},
											{
												"body": {
													"nativeSrc": "10076:391:17",
													"nodeType": "YulBlock",
													"src": "10076:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10122:83:17",
																"nodeType": "YulBlock",
																"src": "10122:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10124:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10124:77:17"
																			},
																			"nativeSrc": "10124:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10124:79:17"
																		},
																		"nativeSrc": "10124:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10124:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10097:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10097:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10106:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10106:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10093:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10093:3:17"
																		},
																		"nativeSrc": "10093:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10093:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10118:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10118:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10089:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10089:3:17"
																},
																"nativeSrc": "10089:32:17",
																"nodeType": "YulFunctionCall",
																"src": "10089:32:17"
															},
															"nativeSrc": "10086:119:17",
															"nodeType": "YulIf",
															"src": "10086:119:17"
														},
														{
															"nativeSrc": "10215:117:17",
															"nodeType": "YulBlock",
															"src": "10215:117:17",
															"statements": [
																{
																	"nativeSrc": "10230:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10230:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10244:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10244:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10234:6:17",
																			"nodeType": "YulTypedName",
																			"src": "10234:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10259:63:17",
																	"nodeType": "YulAssignment",
																	"src": "10259:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10294:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "10294:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10305:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10305:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10290:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10290:3:17"
																				},
																				"nativeSrc": "10290:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10290:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10314:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10314:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10269:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "10269:20:17"
																		},
																		"nativeSrc": "10269:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10269:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10259:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "10259:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10342:118:17",
															"nodeType": "YulBlock",
															"src": "10342:118:17",
															"statements": [
																{
																	"nativeSrc": "10357:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10357:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10371:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10371:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10361:6:17",
																			"nodeType": "YulTypedName",
																			"src": "10361:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10387:63:17",
																	"nodeType": "YulAssignment",
																	"src": "10387:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10422:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "10422:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10433:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10433:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10418:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10418:3:17"
																				},
																				"nativeSrc": "10418:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10418:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10442:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10442:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10397:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "10397:20:17"
																		},
																		"nativeSrc": "10397:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10397:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10387:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "10387:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9993:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10038:9:17",
														"nodeType": "YulTypedName",
														"src": "10038:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10049:7:17",
														"nodeType": "YulTypedName",
														"src": "10049:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10061:6:17",
														"nodeType": "YulTypedName",
														"src": "10061:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10069:6:17",
														"nodeType": "YulTypedName",
														"src": "10069:6:17",
														"type": ""
													}
												],
												"src": "9993:474:17"
											},
											{
												"body": {
													"nativeSrc": "10501:152:17",
													"nodeType": "YulBlock",
													"src": "10501:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10518:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10518:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10521:77:17",
																		"nodeType": "YulLiteral",
																		"src": "10521:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10511:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10511:6:17"
																},
																"nativeSrc": "10511:88:17",
																"nodeType": "YulFunctionCall",
																"src": "10511:88:17"
															},
															"nativeSrc": "10511:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "10511:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10615:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10615:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10618:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10618:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10608:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10608:6:17"
																},
																"nativeSrc": "10608:15:17",
																"nodeType": "YulFunctionCall",
																"src": "10608:15:17"
															},
															"nativeSrc": "10608:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "10608:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10639:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10639:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10642:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10642:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10632:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10632:6:17"
																},
																"nativeSrc": "10632:15:17",
																"nodeType": "YulFunctionCall",
																"src": "10632:15:17"
															},
															"nativeSrc": "10632:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "10632:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10473:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "10473:180:17"
											},
											{
												"body": {
													"nativeSrc": "10710:269:17",
													"nodeType": "YulBlock",
													"src": "10710:269:17",
													"statements": [
														{
															"nativeSrc": "10720:22:17",
															"nodeType": "YulAssignment",
															"src": "10720:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10734:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "10734:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10740:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10740:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10730:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10730:3:17"
																},
																"nativeSrc": "10730:12:17",
																"nodeType": "YulFunctionCall",
																"src": "10730:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10720:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10720:6:17"
																}
															]
														},
														{
															"nativeSrc": "10751:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "10751:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10781:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "10781:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10787:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10787:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10777:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10777:3:17"
																},
																"nativeSrc": "10777:12:17",
																"nodeType": "YulFunctionCall",
																"src": "10777:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10755:18:17",
																	"nodeType": "YulTypedName",
																	"src": "10755:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10828:51:17",
																"nodeType": "YulBlock",
																"src": "10828:51:17",
																"statements": [
																	{
																		"nativeSrc": "10842:27:17",
																		"nodeType": "YulAssignment",
																		"src": "10842:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10856:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "10856:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10864:4:17",
																					"nodeType": "YulLiteral",
																					"src": "10864:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10852:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "10852:3:17"
																			},
																			"nativeSrc": "10852:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10852:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10842:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10842:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10808:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "10808:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10801:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10801:6:17"
																},
																"nativeSrc": "10801:26:17",
																"nodeType": "YulFunctionCall",
																"src": "10801:26:17"
															},
															"nativeSrc": "10798:81:17",
															"nodeType": "YulIf",
															"src": "10798:81:17"
														},
														{
															"body": {
																"nativeSrc": "10931:42:17",
																"nodeType": "YulBlock",
																"src": "10931:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10945:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "10945:16:17"
																			},
																			"nativeSrc": "10945:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10945:18:17"
																		},
																		"nativeSrc": "10945:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10945:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10895:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "10895:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10918:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10918:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10926:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10926:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10915:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "10915:2:17"
																		},
																		"nativeSrc": "10915:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10915:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10892:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10892:2:17"
																},
																"nativeSrc": "10892:38:17",
																"nodeType": "YulFunctionCall",
																"src": "10892:38:17"
															},
															"nativeSrc": "10889:84:17",
															"nodeType": "YulIf",
															"src": "10889:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10659:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10694:4:17",
														"nodeType": "YulTypedName",
														"src": "10694:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10703:6:17",
														"nodeType": "YulTypedName",
														"src": "10703:6:17",
														"type": ""
													}
												],
												"src": "10659:320:17"
											},
											{
												"body": {
													"nativeSrc": "11091:70:17",
													"nodeType": "YulBlock",
													"src": "11091:70:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11113:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11113:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11121:1:17",
																				"nodeType": "YulLiteral",
																				"src": "11121:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11109:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11109:3:17"
																		},
																		"nativeSrc": "11109:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11109:14:17"
																	},
																	{
																		"hexValue": "4275726e2077616c6c65742063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "11125:28:17",
																		"nodeType": "YulLiteral",
																		"src": "11125:28:17",
																		"type": "",
																		"value": "Burn wallet cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11102:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11102:6:17"
																},
																"nativeSrc": "11102:52:17",
																"nodeType": "YulFunctionCall",
																"src": "11102:52:17"
															},
															"nativeSrc": "11102:52:17",
															"nodeType": "YulExpressionStatement",
															"src": "11102:52:17"
														}
													]
												},
												"name": "store_literal_in_memory_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811",
												"nativeSrc": "10985:176:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11083:6:17",
														"nodeType": "YulTypedName",
														"src": "11083:6:17",
														"type": ""
													}
												],
												"src": "10985:176:17"
											},
											{
												"body": {
													"nativeSrc": "11313:220:17",
													"nodeType": "YulBlock",
													"src": "11313:220:17",
													"statements": [
														{
															"nativeSrc": "11323:74:17",
															"nodeType": "YulAssignment",
															"src": "11323:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11389:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11389:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11394:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11394:2:17",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11330:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "11330:58:17"
																},
																"nativeSrc": "11330:67:17",
																"nodeType": "YulFunctionCall",
																"src": "11330:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11323:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11323:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11495:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11495:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811",
																	"nativeSrc": "11406:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "11406:88:17"
																},
																"nativeSrc": "11406:93:17",
																"nodeType": "YulFunctionCall",
																"src": "11406:93:17"
															},
															"nativeSrc": "11406:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "11406:93:17"
														},
														{
															"nativeSrc": "11508:19:17",
															"nodeType": "YulAssignment",
															"src": "11508:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11519:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11519:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11524:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11524:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11515:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11515:3:17"
																},
																"nativeSrc": "11515:12:17",
																"nodeType": "YulFunctionCall",
																"src": "11515:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11508:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11167:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11301:3:17",
														"nodeType": "YulTypedName",
														"src": "11301:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11309:3:17",
														"nodeType": "YulTypedName",
														"src": "11309:3:17",
														"type": ""
													}
												],
												"src": "11167:366:17"
											},
											{
												"body": {
													"nativeSrc": "11710:248:17",
													"nodeType": "YulBlock",
													"src": "11710:248:17",
													"statements": [
														{
															"nativeSrc": "11720:26:17",
															"nodeType": "YulAssignment",
															"src": "11720:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11732:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11732:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11743:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11743:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11728:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:17"
																},
																"nativeSrc": "11728:18:17",
																"nodeType": "YulFunctionCall",
																"src": "11728:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11720:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11720:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11767:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11767:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11778:1:17",
																				"nodeType": "YulLiteral",
																				"src": "11778:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11763:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11763:3:17"
																		},
																		"nativeSrc": "11763:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11763:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11786:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "11786:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11792:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11792:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11782:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11782:3:17"
																		},
																		"nativeSrc": "11782:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11782:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11756:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11756:6:17"
																},
																"nativeSrc": "11756:47:17",
																"nodeType": "YulFunctionCall",
																"src": "11756:47:17"
															},
															"nativeSrc": "11756:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "11756:47:17"
														},
														{
															"nativeSrc": "11812:139:17",
															"nodeType": "YulAssignment",
															"src": "11812:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11946:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "11946:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11820:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "11820:124:17"
																},
																"nativeSrc": "11820:131:17",
																"nodeType": "YulFunctionCall",
																"src": "11820:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11812:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11812:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11539:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11690:9:17",
														"nodeType": "YulTypedName",
														"src": "11690:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11705:4:17",
														"nodeType": "YulTypedName",
														"src": "11705:4:17",
														"type": ""
													}
												],
												"src": "11539:419:17"
											},
											{
												"body": {
													"nativeSrc": "12070:73:17",
													"nodeType": "YulBlock",
													"src": "12070:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12092:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12092:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12100:1:17",
																				"nodeType": "YulLiteral",
																				"src": "12100:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12088:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12088:3:17"
																		},
																		"nativeSrc": "12088:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12088:14:17"
																	},
																	{
																		"hexValue": "5574696c6974792077616c6c65742063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "12104:31:17",
																		"nodeType": "YulLiteral",
																		"src": "12104:31:17",
																		"type": "",
																		"value": "Utility wallet cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12081:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12081:6:17"
																},
																"nativeSrc": "12081:55:17",
																"nodeType": "YulFunctionCall",
																"src": "12081:55:17"
															},
															"nativeSrc": "12081:55:17",
															"nodeType": "YulExpressionStatement",
															"src": "12081:55:17"
														}
													]
												},
												"name": "store_literal_in_memory_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f",
												"nativeSrc": "11964:179:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12062:6:17",
														"nodeType": "YulTypedName",
														"src": "12062:6:17",
														"type": ""
													}
												],
												"src": "11964:179:17"
											},
											{
												"body": {
													"nativeSrc": "12295:220:17",
													"nodeType": "YulBlock",
													"src": "12295:220:17",
													"statements": [
														{
															"nativeSrc": "12305:74:17",
															"nodeType": "YulAssignment",
															"src": "12305:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12371:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12371:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12376:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12376:2:17",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12312:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "12312:58:17"
																},
																"nativeSrc": "12312:67:17",
																"nodeType": "YulFunctionCall",
																"src": "12312:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12305:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12305:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12477:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12477:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f",
																	"nativeSrc": "12388:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "12388:88:17"
																},
																"nativeSrc": "12388:93:17",
																"nodeType": "YulFunctionCall",
																"src": "12388:93:17"
															},
															"nativeSrc": "12388:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "12388:93:17"
														},
														{
															"nativeSrc": "12490:19:17",
															"nodeType": "YulAssignment",
															"src": "12490:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12501:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12501:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12506:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12506:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12497:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12497:3:17"
																},
																"nativeSrc": "12497:12:17",
																"nodeType": "YulFunctionCall",
																"src": "12497:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12490:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12490:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12149:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12283:3:17",
														"nodeType": "YulTypedName",
														"src": "12283:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12291:3:17",
														"nodeType": "YulTypedName",
														"src": "12291:3:17",
														"type": ""
													}
												],
												"src": "12149:366:17"
											},
											{
												"body": {
													"nativeSrc": "12692:248:17",
													"nodeType": "YulBlock",
													"src": "12692:248:17",
													"statements": [
														{
															"nativeSrc": "12702:26:17",
															"nodeType": "YulAssignment",
															"src": "12702:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12714:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12714:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12725:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12725:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12710:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12710:3:17"
																},
																"nativeSrc": "12710:18:17",
																"nodeType": "YulFunctionCall",
																"src": "12710:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12702:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12702:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12749:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12749:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12760:1:17",
																				"nodeType": "YulLiteral",
																				"src": "12760:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12745:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12745:3:17"
																		},
																		"nativeSrc": "12745:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12745:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12768:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "12768:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12774:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12774:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12764:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12764:3:17"
																		},
																		"nativeSrc": "12764:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12764:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12738:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12738:6:17"
																},
																"nativeSrc": "12738:47:17",
																"nodeType": "YulFunctionCall",
																"src": "12738:47:17"
															},
															"nativeSrc": "12738:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "12738:47:17"
														},
														{
															"nativeSrc": "12794:139:17",
															"nodeType": "YulAssignment",
															"src": "12794:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12928:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "12928:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12802:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "12802:124:17"
																},
																"nativeSrc": "12802:131:17",
																"nodeType": "YulFunctionCall",
																"src": "12802:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12794:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12794:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12521:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12672:9:17",
														"nodeType": "YulTypedName",
														"src": "12672:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12687:4:17",
														"nodeType": "YulTypedName",
														"src": "12687:4:17",
														"type": ""
													}
												],
												"src": "12521:419:17"
											},
											{
												"body": {
													"nativeSrc": "13052:75:17",
													"nodeType": "YulBlock",
													"src": "13052:75:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13074:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13074:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13082:1:17",
																				"nodeType": "YulLiteral",
																				"src": "13082:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13070:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13070:3:17"
																		},
																		"nativeSrc": "13070:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13070:14:17"
																	},
																	{
																		"hexValue": "4c69717569646974792077616c6c65742063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "13086:33:17",
																		"nodeType": "YulLiteral",
																		"src": "13086:33:17",
																		"type": "",
																		"value": "Liquidity wallet cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13063:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13063:6:17"
																},
																"nativeSrc": "13063:57:17",
																"nodeType": "YulFunctionCall",
																"src": "13063:57:17"
															},
															"nativeSrc": "13063:57:17",
															"nodeType": "YulExpressionStatement",
															"src": "13063:57:17"
														}
													]
												},
												"name": "store_literal_in_memory_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64",
												"nativeSrc": "12946:181:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13044:6:17",
														"nodeType": "YulTypedName",
														"src": "13044:6:17",
														"type": ""
													}
												],
												"src": "12946:181:17"
											},
											{
												"body": {
													"nativeSrc": "13279:220:17",
													"nodeType": "YulBlock",
													"src": "13279:220:17",
													"statements": [
														{
															"nativeSrc": "13289:74:17",
															"nodeType": "YulAssignment",
															"src": "13289:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13355:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13355:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13360:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13360:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13296:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "13296:58:17"
																},
																"nativeSrc": "13296:67:17",
																"nodeType": "YulFunctionCall",
																"src": "13296:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13289:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13289:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13461:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13461:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64",
																	"nativeSrc": "13372:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "13372:88:17"
																},
																"nativeSrc": "13372:93:17",
																"nodeType": "YulFunctionCall",
																"src": "13372:93:17"
															},
															"nativeSrc": "13372:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "13372:93:17"
														},
														{
															"nativeSrc": "13474:19:17",
															"nodeType": "YulAssignment",
															"src": "13474:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13485:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13485:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13490:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13490:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13481:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13481:3:17"
																},
																"nativeSrc": "13481:12:17",
																"nodeType": "YulFunctionCall",
																"src": "13481:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13474:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13474:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13133:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13267:3:17",
														"nodeType": "YulTypedName",
														"src": "13267:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13275:3:17",
														"nodeType": "YulTypedName",
														"src": "13275:3:17",
														"type": ""
													}
												],
												"src": "13133:366:17"
											},
											{
												"body": {
													"nativeSrc": "13676:248:17",
													"nodeType": "YulBlock",
													"src": "13676:248:17",
													"statements": [
														{
															"nativeSrc": "13686:26:17",
															"nodeType": "YulAssignment",
															"src": "13686:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13698:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "13698:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13709:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13709:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13694:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13694:3:17"
																},
																"nativeSrc": "13694:18:17",
																"nodeType": "YulFunctionCall",
																"src": "13694:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13686:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13686:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13733:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13733:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13744:1:17",
																				"nodeType": "YulLiteral",
																				"src": "13744:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13729:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13729:3:17"
																		},
																		"nativeSrc": "13729:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13729:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13752:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "13752:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13758:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13758:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13748:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13748:3:17"
																		},
																		"nativeSrc": "13748:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13748:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13722:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13722:6:17"
																},
																"nativeSrc": "13722:47:17",
																"nodeType": "YulFunctionCall",
																"src": "13722:47:17"
															},
															"nativeSrc": "13722:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "13722:47:17"
														},
														{
															"nativeSrc": "13778:139:17",
															"nodeType": "YulAssignment",
															"src": "13778:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13912:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "13912:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13786:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "13786:124:17"
																},
																"nativeSrc": "13786:131:17",
																"nodeType": "YulFunctionCall",
																"src": "13786:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13778:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13778:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13505:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13656:9:17",
														"nodeType": "YulTypedName",
														"src": "13656:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13671:4:17",
														"nodeType": "YulTypedName",
														"src": "13671:4:17",
														"type": ""
													}
												],
												"src": "13505:419:17"
											},
											{
												"body": {
													"nativeSrc": "13958:152:17",
													"nodeType": "YulBlock",
													"src": "13958:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13975:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13975:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13978:77:17",
																		"nodeType": "YulLiteral",
																		"src": "13978:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13968:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13968:6:17"
																},
																"nativeSrc": "13968:88:17",
																"nodeType": "YulFunctionCall",
																"src": "13968:88:17"
															},
															"nativeSrc": "13968:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "13968:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14072:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14072:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14075:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14075:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14065:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14065:6:17"
																},
																"nativeSrc": "14065:15:17",
																"nodeType": "YulFunctionCall",
																"src": "14065:15:17"
															},
															"nativeSrc": "14065:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "14065:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14096:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14096:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14099:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14099:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14089:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14089:6:17"
																},
																"nativeSrc": "14089:15:17",
																"nodeType": "YulFunctionCall",
																"src": "14089:15:17"
															},
															"nativeSrc": "14089:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "14089:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13930:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "13930:180:17"
											},
											{
												"body": {
													"nativeSrc": "14160:147:17",
													"nodeType": "YulBlock",
													"src": "14160:147:17",
													"statements": [
														{
															"nativeSrc": "14170:25:17",
															"nodeType": "YulAssignment",
															"src": "14170:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14193:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "14193:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14175:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "14175:17:17"
																},
																"nativeSrc": "14175:20:17",
																"nodeType": "YulFunctionCall",
																"src": "14175:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14170:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "14170:1:17"
																}
															]
														},
														{
															"nativeSrc": "14204:25:17",
															"nodeType": "YulAssignment",
															"src": "14204:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14227:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "14227:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14209:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "14209:17:17"
																},
																"nativeSrc": "14209:20:17",
																"nodeType": "YulFunctionCall",
																"src": "14209:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14204:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "14204:1:17"
																}
															]
														},
														{
															"nativeSrc": "14238:16:17",
															"nodeType": "YulAssignment",
															"src": "14238:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14249:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "14249:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14252:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "14252:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14245:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14245:3:17"
																},
																"nativeSrc": "14245:9:17",
																"nodeType": "YulFunctionCall",
																"src": "14245:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14238:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14238:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14278:22:17",
																"nodeType": "YulBlock",
																"src": "14278:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14280:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "14280:16:17"
																			},
																			"nativeSrc": "14280:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14280:18:17"
																		},
																		"nativeSrc": "14280:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14280:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14270:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "14270:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14273:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14273:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14267:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "14267:2:17"
																},
																"nativeSrc": "14267:10:17",
																"nodeType": "YulFunctionCall",
																"src": "14267:10:17"
															},
															"nativeSrc": "14264:36:17",
															"nodeType": "YulIf",
															"src": "14264:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14116:191:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14147:1:17",
														"nodeType": "YulTypedName",
														"src": "14147:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14150:1:17",
														"nodeType": "YulTypedName",
														"src": "14150:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14156:3:17",
														"nodeType": "YulTypedName",
														"src": "14156:3:17",
														"type": ""
													}
												],
												"src": "14116:191:17"
											},
											{
												"body": {
													"nativeSrc": "14419:67:17",
													"nodeType": "YulBlock",
													"src": "14419:67:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14441:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14441:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14449:1:17",
																				"nodeType": "YulLiteral",
																				"src": "14449:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14437:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14437:3:17"
																		},
																		"nativeSrc": "14437:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14437:14:17"
																	},
																	{
																		"hexValue": "496e76616c6964206163636f756e742061646472657373",
																		"kind": "string",
																		"nativeSrc": "14453:25:17",
																		"nodeType": "YulLiteral",
																		"src": "14453:25:17",
																		"type": "",
																		"value": "Invalid account address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14430:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14430:6:17"
																},
																"nativeSrc": "14430:49:17",
																"nodeType": "YulFunctionCall",
																"src": "14430:49:17"
															},
															"nativeSrc": "14430:49:17",
															"nodeType": "YulExpressionStatement",
															"src": "14430:49:17"
														}
													]
												},
												"name": "store_literal_in_memory_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
												"nativeSrc": "14313:173:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14411:6:17",
														"nodeType": "YulTypedName",
														"src": "14411:6:17",
														"type": ""
													}
												],
												"src": "14313:173:17"
											},
											{
												"body": {
													"nativeSrc": "14638:220:17",
													"nodeType": "YulBlock",
													"src": "14638:220:17",
													"statements": [
														{
															"nativeSrc": "14648:74:17",
															"nodeType": "YulAssignment",
															"src": "14648:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14714:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14714:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14719:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14719:2:17",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14655:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "14655:58:17"
																},
																"nativeSrc": "14655:67:17",
																"nodeType": "YulFunctionCall",
																"src": "14655:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14648:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14648:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14820:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14820:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
																	"nativeSrc": "14731:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "14731:88:17"
																},
																"nativeSrc": "14731:93:17",
																"nodeType": "YulFunctionCall",
																"src": "14731:93:17"
															},
															"nativeSrc": "14731:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "14731:93:17"
														},
														{
															"nativeSrc": "14833:19:17",
															"nodeType": "YulAssignment",
															"src": "14833:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14844:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14844:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14849:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14849:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14840:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14840:3:17"
																},
																"nativeSrc": "14840:12:17",
																"nodeType": "YulFunctionCall",
																"src": "14840:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14833:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14833:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14492:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14626:3:17",
														"nodeType": "YulTypedName",
														"src": "14626:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14634:3:17",
														"nodeType": "YulTypedName",
														"src": "14634:3:17",
														"type": ""
													}
												],
												"src": "14492:366:17"
											},
											{
												"body": {
													"nativeSrc": "15035:248:17",
													"nodeType": "YulBlock",
													"src": "15035:248:17",
													"statements": [
														{
															"nativeSrc": "15045:26:17",
															"nodeType": "YulAssignment",
															"src": "15045:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15057:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "15057:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15068:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15068:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15053:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15053:3:17"
																},
																"nativeSrc": "15053:18:17",
																"nodeType": "YulFunctionCall",
																"src": "15053:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15045:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "15045:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15092:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15092:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15103:1:17",
																				"nodeType": "YulLiteral",
																				"src": "15103:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15088:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15088:3:17"
																		},
																		"nativeSrc": "15088:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15088:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15111:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "15111:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15117:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15117:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15107:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15107:3:17"
																		},
																		"nativeSrc": "15107:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15107:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15081:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15081:6:17"
																},
																"nativeSrc": "15081:47:17",
																"nodeType": "YulFunctionCall",
																"src": "15081:47:17"
															},
															"nativeSrc": "15081:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "15081:47:17"
														},
														{
															"nativeSrc": "15137:139:17",
															"nodeType": "YulAssignment",
															"src": "15137:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15271:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "15271:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15145:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "15145:124:17"
																},
																"nativeSrc": "15145:131:17",
																"nodeType": "YulFunctionCall",
																"src": "15145:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15137:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "15137:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14864:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15015:9:17",
														"nodeType": "YulTypedName",
														"src": "15015:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15030:4:17",
														"nodeType": "YulTypedName",
														"src": "15030:4:17",
														"type": ""
													}
												],
												"src": "14864:419:17"
											},
											{
												"body": {
													"nativeSrc": "15342:32:17",
													"nodeType": "YulBlock",
													"src": "15342:32:17",
													"statements": [
														{
															"nativeSrc": "15352:16:17",
															"nodeType": "YulAssignment",
															"src": "15352:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "15363:5:17",
																"nodeType": "YulIdentifier",
																"src": "15363:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15352:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "15352:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "15289:85:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15324:5:17",
														"nodeType": "YulTypedName",
														"src": "15324:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15334:7:17",
														"nodeType": "YulTypedName",
														"src": "15334:7:17",
														"type": ""
													}
												],
												"src": "15289:85:17"
											},
											{
												"body": {
													"nativeSrc": "15424:57:17",
													"nodeType": "YulBlock",
													"src": "15424:57:17",
													"statements": [
														{
															"nativeSrc": "15434:41:17",
															"nodeType": "YulAssignment",
															"src": "15434:41:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15449:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "15449:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15456:18:17",
																		"nodeType": "YulLiteral",
																		"src": "15456:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15445:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15445:3:17"
																},
																"nativeSrc": "15445:30:17",
																"nodeType": "YulFunctionCall",
																"src": "15445:30:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15434:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "15434:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "15380:101:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15406:5:17",
														"nodeType": "YulTypedName",
														"src": "15406:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15416:7:17",
														"nodeType": "YulTypedName",
														"src": "15416:7:17",
														"type": ""
													}
												],
												"src": "15380:101:17"
											},
											{
												"body": {
													"nativeSrc": "15519:28:17",
													"nodeType": "YulBlock",
													"src": "15519:28:17",
													"statements": [
														{
															"nativeSrc": "15529:12:17",
															"nodeType": "YulAssignment",
															"src": "15529:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "15536:5:17",
																"nodeType": "YulIdentifier",
																"src": "15536:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15529:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15529:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "15487:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15505:5:17",
														"nodeType": "YulTypedName",
														"src": "15505:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15515:3:17",
														"nodeType": "YulTypedName",
														"src": "15515:3:17",
														"type": ""
													}
												],
												"src": "15487:60:17"
											},
											{
												"body": {
													"nativeSrc": "15620:89:17",
													"nodeType": "YulBlock",
													"src": "15620:89:17",
													"statements": [
														{
															"nativeSrc": "15630:73:17",
															"nodeType": "YulAssignment",
															"src": "15630:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15695:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "15695:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "15669:25:17",
																					"nodeType": "YulIdentifier",
																					"src": "15669:25:17"
																				},
																				"nativeSrc": "15669:32:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15669:32:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15660:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "15660:8:17"
																		},
																		"nativeSrc": "15660:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15660:42:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "15643:16:17",
																	"nodeType": "YulIdentifier",
																	"src": "15643:16:17"
																},
																"nativeSrc": "15643:60:17",
																"nodeType": "YulFunctionCall",
																"src": "15643:60:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15630:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "15630:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "15553:156:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15600:5:17",
														"nodeType": "YulTypedName",
														"src": "15600:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15610:9:17",
														"nodeType": "YulTypedName",
														"src": "15610:9:17",
														"type": ""
													}
												],
												"src": "15553:156:17"
											},
											{
												"body": {
													"nativeSrc": "15787:73:17",
													"nodeType": "YulBlock",
													"src": "15787:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15804:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15804:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15847:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "15847:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "15809:37:17",
																			"nodeType": "YulIdentifier",
																			"src": "15809:37:17"
																		},
																		"nativeSrc": "15809:44:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15809:44:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15797:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15797:6:17"
																},
																"nativeSrc": "15797:57:17",
																"nodeType": "YulFunctionCall",
																"src": "15797:57:17"
															},
															"nativeSrc": "15797:57:17",
															"nodeType": "YulExpressionStatement",
															"src": "15797:57:17"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "15715:145:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15775:5:17",
														"nodeType": "YulTypedName",
														"src": "15775:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15782:3:17",
														"nodeType": "YulTypedName",
														"src": "15782:3:17",
														"type": ""
													}
												],
												"src": "15715:145:17"
											},
											{
												"body": {
													"nativeSrc": "15971:131:17",
													"nodeType": "YulBlock",
													"src": "15971:131:17",
													"statements": [
														{
															"nativeSrc": "15981:26:17",
															"nodeType": "YulAssignment",
															"src": "15981:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15993:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "15993:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16004:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16004:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15989:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15989:3:17"
																},
																"nativeSrc": "15989:18:17",
																"nodeType": "YulFunctionCall",
																"src": "15989:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15981:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "15981:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16068:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16068:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16081:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16081:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16092:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16092:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16077:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16077:3:17"
																		},
																		"nativeSrc": "16077:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16077:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "16017:50:17",
																	"nodeType": "YulIdentifier",
																	"src": "16017:50:17"
																},
																"nativeSrc": "16017:78:17",
																"nodeType": "YulFunctionCall",
																"src": "16017:78:17"
															},
															"nativeSrc": "16017:78:17",
															"nodeType": "YulExpressionStatement",
															"src": "16017:78:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "15866:236:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15943:9:17",
														"nodeType": "YulTypedName",
														"src": "15943:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15955:6:17",
														"nodeType": "YulTypedName",
														"src": "15955:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15966:4:17",
														"nodeType": "YulTypedName",
														"src": "15966:4:17",
														"type": ""
													}
												],
												"src": "15866:236:17"
											},
											{
												"body": {
													"nativeSrc": "16262:288:17",
													"nodeType": "YulBlock",
													"src": "16262:288:17",
													"statements": [
														{
															"nativeSrc": "16272:26:17",
															"nodeType": "YulAssignment",
															"src": "16272:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16284:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "16284:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16295:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16295:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16280:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16280:3:17"
																},
																"nativeSrc": "16280:18:17",
																"nodeType": "YulFunctionCall",
																"src": "16280:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16272:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16272:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16352:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16352:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16365:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16365:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16376:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16376:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16361:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16361:3:17"
																		},
																		"nativeSrc": "16361:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16361:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16308:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "16308:43:17"
																},
																"nativeSrc": "16308:71:17",
																"nodeType": "YulFunctionCall",
																"src": "16308:71:17"
															},
															"nativeSrc": "16308:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "16308:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16433:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16433:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16446:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16446:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16457:2:17",
																				"nodeType": "YulLiteral",
																				"src": "16457:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16442:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16442:3:17"
																		},
																		"nativeSrc": "16442:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16442:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16389:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "16389:43:17"
																},
																"nativeSrc": "16389:72:17",
																"nodeType": "YulFunctionCall",
																"src": "16389:72:17"
															},
															"nativeSrc": "16389:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "16389:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16515:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16515:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16528:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16528:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16539:2:17",
																				"nodeType": "YulLiteral",
																				"src": "16539:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16524:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16524:3:17"
																		},
																		"nativeSrc": "16524:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16524:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16471:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "16471:43:17"
																},
																"nativeSrc": "16471:72:17",
																"nodeType": "YulFunctionCall",
																"src": "16471:72:17"
															},
															"nativeSrc": "16471:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "16471:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16108:442:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16218:9:17",
														"nodeType": "YulTypedName",
														"src": "16218:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16230:6:17",
														"nodeType": "YulTypedName",
														"src": "16230:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16238:6:17",
														"nodeType": "YulTypedName",
														"src": "16238:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16246:6:17",
														"nodeType": "YulTypedName",
														"src": "16246:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16257:4:17",
														"nodeType": "YulTypedName",
														"src": "16257:4:17",
														"type": ""
													}
												],
												"src": "16108:442:17"
											},
											{
												"body": {
													"nativeSrc": "16604:362:17",
													"nodeType": "YulBlock",
													"src": "16604:362:17",
													"statements": [
														{
															"nativeSrc": "16614:25:17",
															"nodeType": "YulAssignment",
															"src": "16614:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16637:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "16637:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16619:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "16619:17:17"
																},
																"nativeSrc": "16619:20:17",
																"nodeType": "YulFunctionCall",
																"src": "16619:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16614:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "16614:1:17"
																}
															]
														},
														{
															"nativeSrc": "16648:25:17",
															"nodeType": "YulAssignment",
															"src": "16648:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16671:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "16671:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16653:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "16653:17:17"
																},
																"nativeSrc": "16653:20:17",
																"nodeType": "YulFunctionCall",
																"src": "16653:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16648:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "16648:1:17"
																}
															]
														},
														{
															"nativeSrc": "16682:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16682:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16705:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "16705:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16708:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "16708:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16701:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16701:3:17"
																},
																"nativeSrc": "16701:9:17",
																"nodeType": "YulFunctionCall",
																"src": "16701:9:17"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "16686:11:17",
																	"nodeType": "YulTypedName",
																	"src": "16686:11:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16719:41:17",
															"nodeType": "YulAssignment",
															"src": "16719:41:17",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "16748:11:17",
																		"nodeType": "YulIdentifier",
																		"src": "16748:11:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16730:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "16730:17:17"
																},
																"nativeSrc": "16730:30:17",
																"nodeType": "YulFunctionCall",
																"src": "16730:30:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "16719:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "16719:7:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16937:22:17",
																"nodeType": "YulBlock",
																"src": "16937:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16939:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "16939:16:17"
																			},
																			"nativeSrc": "16939:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "16939:18:17"
																		},
																		"nativeSrc": "16939:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "16939:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "16870:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "16870:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "16863:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "16863:6:17"
																				},
																				"nativeSrc": "16863:9:17",
																				"nodeType": "YulFunctionCall",
																				"src": "16863:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "16893:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "16893:1:17"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16900:7:17",
																								"nodeType": "YulIdentifier",
																								"src": "16900:7:17"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16909:1:17",
																								"nodeType": "YulIdentifier",
																								"src": "16909:1:17"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "16896:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "16896:3:17"
																						},
																						"nativeSrc": "16896:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "16896:15:17"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "16890:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "16890:2:17"
																				},
																				"nativeSrc": "16890:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "16890:22:17"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "16843:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "16843:2:17"
																		},
																		"nativeSrc": "16843:83:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16843:83:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16823:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16823:6:17"
																},
																"nativeSrc": "16823:113:17",
																"nodeType": "YulFunctionCall",
																"src": "16823:113:17"
															},
															"nativeSrc": "16820:139:17",
															"nodeType": "YulIf",
															"src": "16820:139:17"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "16556:410:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16587:1:17",
														"nodeType": "YulTypedName",
														"src": "16587:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16590:1:17",
														"nodeType": "YulTypedName",
														"src": "16590:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "16596:7:17",
														"nodeType": "YulTypedName",
														"src": "16596:7:17",
														"type": ""
													}
												],
												"src": "16556:410:17"
											},
											{
												"body": {
													"nativeSrc": "17000:152:17",
													"nodeType": "YulBlock",
													"src": "17000:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17017:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17017:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17020:77:17",
																		"nodeType": "YulLiteral",
																		"src": "17020:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17010:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17010:6:17"
																},
																"nativeSrc": "17010:88:17",
																"nodeType": "YulFunctionCall",
																"src": "17010:88:17"
															},
															"nativeSrc": "17010:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "17010:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17114:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17114:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17117:4:17",
																		"nodeType": "YulLiteral",
																		"src": "17117:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17107:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17107:6:17"
																},
																"nativeSrc": "17107:15:17",
																"nodeType": "YulFunctionCall",
																"src": "17107:15:17"
															},
															"nativeSrc": "17107:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "17107:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17138:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17138:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17141:4:17",
																		"nodeType": "YulLiteral",
																		"src": "17141:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17131:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17131:6:17"
																},
																"nativeSrc": "17131:15:17",
																"nodeType": "YulFunctionCall",
																"src": "17131:15:17"
															},
															"nativeSrc": "17131:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "17131:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16972:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "16972:180:17"
											},
											{
												"body": {
													"nativeSrc": "17200:143:17",
													"nodeType": "YulBlock",
													"src": "17200:143:17",
													"statements": [
														{
															"nativeSrc": "17210:25:17",
															"nodeType": "YulAssignment",
															"src": "17210:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17233:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17233:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17215:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "17215:17:17"
																},
																"nativeSrc": "17215:20:17",
																"nodeType": "YulFunctionCall",
																"src": "17215:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17210:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "17210:1:17"
																}
															]
														},
														{
															"nativeSrc": "17244:25:17",
															"nodeType": "YulAssignment",
															"src": "17244:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17267:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17267:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17249:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "17249:17:17"
																},
																"nativeSrc": "17249:20:17",
																"nodeType": "YulFunctionCall",
																"src": "17249:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17244:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "17244:1:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17291:22:17",
																"nodeType": "YulBlock",
																"src": "17291:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17293:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "17293:16:17"
																			},
																			"nativeSrc": "17293:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17293:18:17"
																		},
																		"nativeSrc": "17293:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "17293:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17288:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17288:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17281:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17281:6:17"
																},
																"nativeSrc": "17281:9:17",
																"nodeType": "YulFunctionCall",
																"src": "17281:9:17"
															},
															"nativeSrc": "17278:35:17",
															"nodeType": "YulIf",
															"src": "17278:35:17"
														},
														{
															"nativeSrc": "17323:14:17",
															"nodeType": "YulAssignment",
															"src": "17323:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17332:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17332:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17335:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17335:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17328:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17328:3:17"
																},
																"nativeSrc": "17328:9:17",
																"nodeType": "YulFunctionCall",
																"src": "17328:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17323:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "17323:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17158:185:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17189:1:17",
														"nodeType": "YulTypedName",
														"src": "17189:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17192:1:17",
														"nodeType": "YulTypedName",
														"src": "17192:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17198:1:17",
														"nodeType": "YulTypedName",
														"src": "17198:1:17",
														"type": ""
													}
												],
												"src": "17158:185:17"
											},
											{
												"body": {
													"nativeSrc": "17394:149:17",
													"nodeType": "YulBlock",
													"src": "17394:149:17",
													"statements": [
														{
															"nativeSrc": "17404:25:17",
															"nodeType": "YulAssignment",
															"src": "17404:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17427:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17427:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17409:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "17409:17:17"
																},
																"nativeSrc": "17409:20:17",
																"nodeType": "YulFunctionCall",
																"src": "17409:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17404:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "17404:1:17"
																}
															]
														},
														{
															"nativeSrc": "17438:25:17",
															"nodeType": "YulAssignment",
															"src": "17438:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17461:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17461:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17443:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "17443:17:17"
																},
																"nativeSrc": "17443:20:17",
																"nodeType": "YulFunctionCall",
																"src": "17443:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17438:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "17438:1:17"
																}
															]
														},
														{
															"nativeSrc": "17472:17:17",
															"nodeType": "YulAssignment",
															"src": "17472:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17484:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17484:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17487:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17487:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17480:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17480:3:17"
																},
																"nativeSrc": "17480:9:17",
																"nodeType": "YulFunctionCall",
																"src": "17480:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "17472:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17472:4:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17514:22:17",
																"nodeType": "YulBlock",
																"src": "17514:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17516:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "17516:16:17"
																			},
																			"nativeSrc": "17516:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17516:18:17"
																		},
																		"nativeSrc": "17516:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "17516:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "17505:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17505:4:17"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "17511:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17511:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17502:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "17502:2:17"
																},
																"nativeSrc": "17502:11:17",
																"nodeType": "YulFunctionCall",
																"src": "17502:11:17"
															},
															"nativeSrc": "17499:37:17",
															"nodeType": "YulIf",
															"src": "17499:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "17349:194:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17380:1:17",
														"nodeType": "YulTypedName",
														"src": "17380:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17383:1:17",
														"nodeType": "YulTypedName",
														"src": "17383:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "17389:4:17",
														"nodeType": "YulTypedName",
														"src": "17389:4:17",
														"type": ""
													}
												],
												"src": "17349:194:17"
											},
											{
												"body": {
													"nativeSrc": "17592:79:17",
													"nodeType": "YulBlock",
													"src": "17592:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "17649:16:17",
																"nodeType": "YulBlock",
																"src": "17649:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17658:1:17",
																					"nodeType": "YulLiteral",
																					"src": "17658:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17661:1:17",
																					"nodeType": "YulLiteral",
																					"src": "17661:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17651:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17651:6:17"
																			},
																			"nativeSrc": "17651:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17651:12:17"
																		},
																		"nativeSrc": "17651:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "17651:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17615:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "17615:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17640:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "17640:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "17622:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "17622:17:17"
																				},
																				"nativeSrc": "17622:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "17622:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17612:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "17612:2:17"
																		},
																		"nativeSrc": "17612:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17612:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17605:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17605:6:17"
																},
																"nativeSrc": "17605:43:17",
																"nodeType": "YulFunctionCall",
																"src": "17605:43:17"
															},
															"nativeSrc": "17602:63:17",
															"nodeType": "YulIf",
															"src": "17602:63:17"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "17549:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17585:5:17",
														"nodeType": "YulTypedName",
														"src": "17585:5:17",
														"type": ""
													}
												],
												"src": "17549:122:17"
											},
											{
												"body": {
													"nativeSrc": "17740:80:17",
													"nodeType": "YulBlock",
													"src": "17740:80:17",
													"statements": [
														{
															"nativeSrc": "17750:22:17",
															"nodeType": "YulAssignment",
															"src": "17750:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17765:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17765:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17759:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "17759:5:17"
																},
																"nativeSrc": "17759:13:17",
																"nodeType": "YulFunctionCall",
																"src": "17759:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17750:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "17750:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17808:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "17808:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "17781:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "17781:26:17"
																},
																"nativeSrc": "17781:33:17",
																"nodeType": "YulFunctionCall",
																"src": "17781:33:17"
															},
															"nativeSrc": "17781:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "17781:33:17"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "17677:143:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17718:6:17",
														"nodeType": "YulTypedName",
														"src": "17718:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17726:3:17",
														"nodeType": "YulTypedName",
														"src": "17726:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17734:5:17",
														"nodeType": "YulTypedName",
														"src": "17734:5:17",
														"type": ""
													}
												],
												"src": "17677:143:17"
											},
											{
												"body": {
													"nativeSrc": "17903:274:17",
													"nodeType": "YulBlock",
													"src": "17903:274:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "17949:83:17",
																"nodeType": "YulBlock",
																"src": "17949:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17951:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "17951:77:17"
																			},
																			"nativeSrc": "17951:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17951:79:17"
																		},
																		"nativeSrc": "17951:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "17951:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17924:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "17924:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17933:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17933:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17920:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17920:3:17"
																		},
																		"nativeSrc": "17920:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17920:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17945:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17945:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17916:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17916:3:17"
																},
																"nativeSrc": "17916:32:17",
																"nodeType": "YulFunctionCall",
																"src": "17916:32:17"
															},
															"nativeSrc": "17913:119:17",
															"nodeType": "YulIf",
															"src": "17913:119:17"
														},
														{
															"nativeSrc": "18042:128:17",
															"nodeType": "YulBlock",
															"src": "18042:128:17",
															"statements": [
																{
																	"nativeSrc": "18057:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18057:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18071:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18071:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18061:6:17",
																			"nodeType": "YulTypedName",
																			"src": "18061:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18086:74:17",
																	"nodeType": "YulAssignment",
																	"src": "18086:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18132:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "18132:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18143:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "18143:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18128:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "18128:3:17"
																				},
																				"nativeSrc": "18128:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "18128:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18152:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "18152:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "18096:31:17",
																			"nodeType": "YulIdentifier",
																			"src": "18096:31:17"
																		},
																		"nativeSrc": "18096:64:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18096:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18086:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "18086:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "17826:351:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17873:9:17",
														"nodeType": "YulTypedName",
														"src": "17873:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17884:7:17",
														"nodeType": "YulTypedName",
														"src": "17884:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17896:6:17",
														"nodeType": "YulTypedName",
														"src": "17896:6:17",
														"type": ""
													}
												],
												"src": "17826:351:17"
											},
											{
												"body": {
													"nativeSrc": "18289:65:17",
													"nodeType": "YulBlock",
													"src": "18289:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18311:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "18311:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18319:1:17",
																				"nodeType": "YulLiteral",
																				"src": "18319:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18307:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18307:3:17"
																		},
																		"nativeSrc": "18307:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18307:14:17"
																	},
																	{
																		"hexValue": "45524332303a206f776e776572206973207a65726f",
																		"kind": "string",
																		"nativeSrc": "18323:23:17",
																		"nodeType": "YulLiteral",
																		"src": "18323:23:17",
																		"type": "",
																		"value": "ERC20: ownwer is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18300:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18300:6:17"
																},
																"nativeSrc": "18300:47:17",
																"nodeType": "YulFunctionCall",
																"src": "18300:47:17"
															},
															"nativeSrc": "18300:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "18300:47:17"
														}
													]
												},
												"name": "store_literal_in_memory_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6",
												"nativeSrc": "18183:171:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18281:6:17",
														"nodeType": "YulTypedName",
														"src": "18281:6:17",
														"type": ""
													}
												],
												"src": "18183:171:17"
											},
											{
												"body": {
													"nativeSrc": "18506:220:17",
													"nodeType": "YulBlock",
													"src": "18506:220:17",
													"statements": [
														{
															"nativeSrc": "18516:74:17",
															"nodeType": "YulAssignment",
															"src": "18516:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18582:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18582:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18587:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18587:2:17",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18523:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "18523:58:17"
																},
																"nativeSrc": "18523:67:17",
																"nodeType": "YulFunctionCall",
																"src": "18523:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18516:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18516:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18688:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18688:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6",
																	"nativeSrc": "18599:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "18599:88:17"
																},
																"nativeSrc": "18599:93:17",
																"nodeType": "YulFunctionCall",
																"src": "18599:93:17"
															},
															"nativeSrc": "18599:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "18599:93:17"
														},
														{
															"nativeSrc": "18701:19:17",
															"nodeType": "YulAssignment",
															"src": "18701:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18712:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18712:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18717:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18717:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18708:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18708:3:17"
																},
																"nativeSrc": "18708:12:17",
																"nodeType": "YulFunctionCall",
																"src": "18708:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18701:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18701:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18360:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18494:3:17",
														"nodeType": "YulTypedName",
														"src": "18494:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18502:3:17",
														"nodeType": "YulTypedName",
														"src": "18502:3:17",
														"type": ""
													}
												],
												"src": "18360:366:17"
											},
											{
												"body": {
													"nativeSrc": "18903:248:17",
													"nodeType": "YulBlock",
													"src": "18903:248:17",
													"statements": [
														{
															"nativeSrc": "18913:26:17",
															"nodeType": "YulAssignment",
															"src": "18913:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18925:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "18925:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18936:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18936:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18921:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18921:3:17"
																},
																"nativeSrc": "18921:18:17",
																"nodeType": "YulFunctionCall",
																"src": "18921:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18913:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "18913:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18960:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "18960:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18971:1:17",
																				"nodeType": "YulLiteral",
																				"src": "18971:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18956:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18956:3:17"
																		},
																		"nativeSrc": "18956:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18956:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18979:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "18979:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18985:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "18985:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18975:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18975:3:17"
																		},
																		"nativeSrc": "18975:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18975:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18949:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18949:6:17"
																},
																"nativeSrc": "18949:47:17",
																"nodeType": "YulFunctionCall",
																"src": "18949:47:17"
															},
															"nativeSrc": "18949:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "18949:47:17"
														},
														{
															"nativeSrc": "19005:139:17",
															"nodeType": "YulAssignment",
															"src": "19005:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19139:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "19139:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19013:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "19013:124:17"
																},
																"nativeSrc": "19013:131:17",
																"nodeType": "YulFunctionCall",
																"src": "19013:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19005:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19005:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18732:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18883:9:17",
														"nodeType": "YulTypedName",
														"src": "18883:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18898:4:17",
														"nodeType": "YulTypedName",
														"src": "18898:4:17",
														"type": ""
													}
												],
												"src": "18732:419:17"
											},
											{
												"body": {
													"nativeSrc": "19211:87:17",
													"nodeType": "YulBlock",
													"src": "19211:87:17",
													"statements": [
														{
															"nativeSrc": "19221:11:17",
															"nodeType": "YulAssignment",
															"src": "19221:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "19229:3:17",
																"nodeType": "YulIdentifier",
																"src": "19229:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19221:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19221:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19249:1:17",
																		"nodeType": "YulLiteral",
																		"src": "19249:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "19252:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19252:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19242:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19242:6:17"
																},
																"nativeSrc": "19242:14:17",
																"nodeType": "YulFunctionCall",
																"src": "19242:14:17"
															},
															"nativeSrc": "19242:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "19242:14:17"
														},
														{
															"nativeSrc": "19265:26:17",
															"nodeType": "YulAssignment",
															"src": "19265:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19283:1:17",
																		"nodeType": "YulLiteral",
																		"src": "19283:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19286:4:17",
																		"nodeType": "YulLiteral",
																		"src": "19286:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "19273:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "19273:9:17"
																},
																"nativeSrc": "19273:18:17",
																"nodeType": "YulFunctionCall",
																"src": "19273:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19265:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19265:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "19157:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "19198:3:17",
														"nodeType": "YulTypedName",
														"src": "19198:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "19206:4:17",
														"nodeType": "YulTypedName",
														"src": "19206:4:17",
														"type": ""
													}
												],
												"src": "19157:141:17"
											},
											{
												"body": {
													"nativeSrc": "19348:49:17",
													"nodeType": "YulBlock",
													"src": "19348:49:17",
													"statements": [
														{
															"nativeSrc": "19358:33:17",
															"nodeType": "YulAssignment",
															"src": "19358:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19376:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "19376:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19383:2:17",
																				"nodeType": "YulLiteral",
																				"src": "19383:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19372:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19372:3:17"
																		},
																		"nativeSrc": "19372:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19372:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19388:2:17",
																		"nodeType": "YulLiteral",
																		"src": "19388:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19368:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19368:3:17"
																},
																"nativeSrc": "19368:23:17",
																"nodeType": "YulFunctionCall",
																"src": "19368:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19358:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19358:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "19304:93:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19331:5:17",
														"nodeType": "YulTypedName",
														"src": "19331:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19341:6:17",
														"nodeType": "YulTypedName",
														"src": "19341:6:17",
														"type": ""
													}
												],
												"src": "19304:93:17"
											},
											{
												"body": {
													"nativeSrc": "19456:54:17",
													"nodeType": "YulBlock",
													"src": "19456:54:17",
													"statements": [
														{
															"nativeSrc": "19466:37:17",
															"nodeType": "YulAssignment",
															"src": "19466:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "19491:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "19491:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "19497:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "19497:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "19487:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19487:3:17"
																},
																"nativeSrc": "19487:16:17",
																"nodeType": "YulFunctionCall",
																"src": "19487:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "19466:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "19466:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "19403:107:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "19431:4:17",
														"nodeType": "YulTypedName",
														"src": "19431:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "19437:5:17",
														"nodeType": "YulTypedName",
														"src": "19437:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "19447:8:17",
														"nodeType": "YulTypedName",
														"src": "19447:8:17",
														"type": ""
													}
												],
												"src": "19403:107:17"
											},
											{
												"body": {
													"nativeSrc": "19592:317:17",
													"nodeType": "YulBlock",
													"src": "19592:317:17",
													"statements": [
														{
															"nativeSrc": "19602:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "19602:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "19623:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "19623:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19635:1:17",
																		"nodeType": "YulLiteral",
																		"src": "19635:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19619:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19619:3:17"
																},
																"nativeSrc": "19619:18:17",
																"nodeType": "YulFunctionCall",
																"src": "19619:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "19606:9:17",
																	"nodeType": "YulTypedName",
																	"src": "19606:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19646:109:17",
															"nodeType": "YulVariableDeclaration",
															"src": "19646:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19677:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "19677:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19688:66:17",
																		"nodeType": "YulLiteral",
																		"src": "19688:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19658:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "19658:18:17"
																},
																"nativeSrc": "19658:97:17",
																"nodeType": "YulFunctionCall",
																"src": "19658:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "19650:4:17",
																	"nodeType": "YulTypedName",
																	"src": "19650:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19764:51:17",
															"nodeType": "YulAssignment",
															"src": "19764:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19795:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "19795:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "19806:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "19806:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19776:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "19776:18:17"
																},
																"nativeSrc": "19776:39:17",
																"nodeType": "YulFunctionCall",
																"src": "19776:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "19764:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "19764:8:17"
																}
															]
														},
														{
															"nativeSrc": "19824:30:17",
															"nodeType": "YulAssignment",
															"src": "19824:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19837:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "19837:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "19848:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "19848:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "19844:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19844:3:17"
																		},
																		"nativeSrc": "19844:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19844:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19833:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19833:3:17"
																},
																"nativeSrc": "19833:21:17",
																"nodeType": "YulFunctionCall",
																"src": "19833:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19824:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "19824:5:17"
																}
															]
														},
														{
															"nativeSrc": "19863:40:17",
															"nodeType": "YulAssignment",
															"src": "19863:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19876:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "19876:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "19887:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "19887:8:17"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "19897:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "19897:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19883:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19883:3:17"
																		},
																		"nativeSrc": "19883:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19883:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19873:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "19873:2:17"
																},
																"nativeSrc": "19873:30:17",
																"nodeType": "YulFunctionCall",
																"src": "19873:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19863:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19863:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "19516:393:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19553:5:17",
														"nodeType": "YulTypedName",
														"src": "19553:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "19560:10:17",
														"nodeType": "YulTypedName",
														"src": "19560:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "19572:8:17",
														"nodeType": "YulTypedName",
														"src": "19572:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19585:6:17",
														"nodeType": "YulTypedName",
														"src": "19585:6:17",
														"type": ""
													}
												],
												"src": "19516:393:17"
											},
											{
												"body": {
													"nativeSrc": "19975:82:17",
													"nodeType": "YulBlock",
													"src": "19975:82:17",
													"statements": [
														{
															"nativeSrc": "19985:66:17",
															"nodeType": "YulAssignment",
															"src": "19985:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20043:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "20043:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "20025:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "20025:17:17"
																				},
																				"nativeSrc": "20025:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "20025:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20016:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "20016:8:17"
																		},
																		"nativeSrc": "20016:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20016:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19998:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "19998:17:17"
																},
																"nativeSrc": "19998:53:17",
																"nodeType": "YulFunctionCall",
																"src": "19998:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19985:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "19985:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "19915:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19955:5:17",
														"nodeType": "YulTypedName",
														"src": "19955:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19965:9:17",
														"nodeType": "YulTypedName",
														"src": "19965:9:17",
														"type": ""
													}
												],
												"src": "19915:142:17"
											},
											{
												"body": {
													"nativeSrc": "20110:28:17",
													"nodeType": "YulBlock",
													"src": "20110:28:17",
													"statements": [
														{
															"nativeSrc": "20120:12:17",
															"nodeType": "YulAssignment",
															"src": "20120:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "20127:5:17",
																"nodeType": "YulIdentifier",
																"src": "20127:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20120:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20120:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "20063:75:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20096:5:17",
														"nodeType": "YulTypedName",
														"src": "20096:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20106:3:17",
														"nodeType": "YulTypedName",
														"src": "20106:3:17",
														"type": ""
													}
												],
												"src": "20063:75:17"
											},
											{
												"body": {
													"nativeSrc": "20220:193:17",
													"nodeType": "YulBlock",
													"src": "20220:193:17",
													"statements": [
														{
															"nativeSrc": "20230:63:17",
															"nodeType": "YulVariableDeclaration",
															"src": "20230:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "20285:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "20285:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "20254:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "20254:30:17"
																},
																"nativeSrc": "20254:39:17",
																"nodeType": "YulFunctionCall",
																"src": "20254:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "20234:16:17",
																	"nodeType": "YulTypedName",
																	"src": "20234:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20309:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "20309:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "20349:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "20349:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "20343:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "20343:5:17"
																				},
																				"nativeSrc": "20343:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "20343:11:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "20356:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "20356:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "20388:16:17",
																						"nodeType": "YulIdentifier",
																						"src": "20388:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "20364:23:17",
																					"nodeType": "YulIdentifier",
																					"src": "20364:23:17"
																				},
																				"nativeSrc": "20364:41:17",
																				"nodeType": "YulFunctionCall",
																				"src": "20364:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "20315:27:17",
																			"nodeType": "YulIdentifier",
																			"src": "20315:27:17"
																		},
																		"nativeSrc": "20315:91:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20315:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "20302:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20302:6:17"
																},
																"nativeSrc": "20302:105:17",
																"nodeType": "YulFunctionCall",
																"src": "20302:105:17"
															},
															"nativeSrc": "20302:105:17",
															"nodeType": "YulExpressionStatement",
															"src": "20302:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "20144:269:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20197:4:17",
														"nodeType": "YulTypedName",
														"src": "20197:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "20203:6:17",
														"nodeType": "YulTypedName",
														"src": "20203:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "20211:7:17",
														"nodeType": "YulTypedName",
														"src": "20211:7:17",
														"type": ""
													}
												],
												"src": "20144:269:17"
											},
											{
												"body": {
													"nativeSrc": "20468:24:17",
													"nodeType": "YulBlock",
													"src": "20468:24:17",
													"statements": [
														{
															"nativeSrc": "20478:8:17",
															"nodeType": "YulAssignment",
															"src": "20478:8:17",
															"value": {
																"kind": "number",
																"nativeSrc": "20485:1:17",
																"nodeType": "YulLiteral",
																"src": "20485:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20478:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20478:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "20419:73:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20464:3:17",
														"nodeType": "YulTypedName",
														"src": "20464:3:17",
														"type": ""
													}
												],
												"src": "20419:73:17"
											},
											{
												"body": {
													"nativeSrc": "20551:136:17",
													"nodeType": "YulBlock",
													"src": "20551:136:17",
													"statements": [
														{
															"nativeSrc": "20561:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "20561:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "20575:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "20575:30:17"
																},
																"nativeSrc": "20575:32:17",
																"nodeType": "YulFunctionCall",
																"src": "20575:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "20565:6:17",
																	"nodeType": "YulTypedName",
																	"src": "20565:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20660:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "20660:4:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "20666:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20666:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "20674:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20674:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "20616:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "20616:43:17"
																},
																"nativeSrc": "20616:65:17",
																"nodeType": "YulFunctionCall",
																"src": "20616:65:17"
															},
															"nativeSrc": "20616:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "20616:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "20498:189:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20537:4:17",
														"nodeType": "YulTypedName",
														"src": "20537:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "20543:6:17",
														"nodeType": "YulTypedName",
														"src": "20543:6:17",
														"type": ""
													}
												],
												"src": "20498:189:17"
											},
											{
												"body": {
													"nativeSrc": "20743:136:17",
													"nodeType": "YulBlock",
													"src": "20743:136:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "20810:63:17",
																"nodeType": "YulBlock",
																"src": "20810:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20854:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "20854:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20861:1:17",
																					"nodeType": "YulLiteral",
																					"src": "20861:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "20824:29:17",
																				"nodeType": "YulIdentifier",
																				"src": "20824:29:17"
																			},
																			"nativeSrc": "20824:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "20824:39:17"
																		},
																		"nativeSrc": "20824:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "20824:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "20763:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "20763:5:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "20770:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20770:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "20760:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "20760:2:17"
																},
																"nativeSrc": "20760:14:17",
																"nodeType": "YulFunctionCall",
																"src": "20760:14:17"
															},
															"nativeSrc": "20753:120:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "20775:26:17",
																"nodeType": "YulBlock",
																"src": "20775:26:17",
																"statements": [
																	{
																		"nativeSrc": "20777:22:17",
																		"nodeType": "YulAssignment",
																		"src": "20777:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20790:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "20790:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20797:1:17",
																					"nodeType": "YulLiteral",
																					"src": "20797:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20786:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "20786:3:17"
																			},
																			"nativeSrc": "20786:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "20786:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "20777:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "20777:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "20757:2:17",
																"nodeType": "YulBlock",
																"src": "20757:2:17",
																"statements": []
															},
															"src": "20753:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "20693:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "20731:5:17",
														"nodeType": "YulTypedName",
														"src": "20731:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20738:3:17",
														"nodeType": "YulTypedName",
														"src": "20738:3:17",
														"type": ""
													}
												],
												"src": "20693:186:17"
											},
											{
												"body": {
													"nativeSrc": "20964:464:17",
													"nodeType": "YulBlock",
													"src": "20964:464:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "20990:431:17",
																"nodeType": "YulBlock",
																"src": "20990:431:17",
																"statements": [
																	{
																		"nativeSrc": "21004:54:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21004:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "21052:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "21052:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "21020:31:17",
																				"nodeType": "YulIdentifier",
																				"src": "21020:31:17"
																			},
																			"nativeSrc": "21020:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "21020:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "21008:8:17",
																				"nodeType": "YulTypedName",
																				"src": "21008:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "21071:63:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21071:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "21094:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "21094:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "21122:10:17",
																							"nodeType": "YulIdentifier",
																							"src": "21122:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "21104:17:17",
																						"nodeType": "YulIdentifier",
																						"src": "21104:17:17"
																					},
																					"nativeSrc": "21104:29:17",
																					"nodeType": "YulFunctionCall",
																					"src": "21104:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21090:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "21090:3:17"
																			},
																			"nativeSrc": "21090:44:17",
																			"nodeType": "YulFunctionCall",
																			"src": "21090:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "21075:11:17",
																				"nodeType": "YulTypedName",
																				"src": "21075:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "21291:27:17",
																			"nodeType": "YulBlock",
																			"src": "21291:27:17",
																			"statements": [
																				{
																					"nativeSrc": "21293:23:17",
																					"nodeType": "YulAssignment",
																					"src": "21293:23:17",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "21308:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "21308:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "21293:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "21293:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "21275:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "21275:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21287:2:17",
																					"nodeType": "YulLiteral",
																					"src": "21287:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "21272:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "21272:2:17"
																			},
																			"nativeSrc": "21272:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "21272:18:17"
																		},
																		"nativeSrc": "21269:49:17",
																		"nodeType": "YulIf",
																		"src": "21269:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "21360:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "21360:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "21377:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "21377:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "21405:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "21405:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "21387:17:17",
																								"nodeType": "YulIdentifier",
																								"src": "21387:17:17"
																							},
																							"nativeSrc": "21387:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "21387:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "21373:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "21373:3:17"
																					},
																					"nativeSrc": "21373:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "21373:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "21331:28:17",
																				"nodeType": "YulIdentifier",
																				"src": "21331:28:17"
																			},
																			"nativeSrc": "21331:80:17",
																			"nodeType": "YulFunctionCall",
																			"src": "21331:80:17"
																		},
																		"nativeSrc": "21331:80:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "21331:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "20981:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20981:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20986:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20986:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20978:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "20978:2:17"
																},
																"nativeSrc": "20978:11:17",
																"nodeType": "YulFunctionCall",
																"src": "20978:11:17"
															},
															"nativeSrc": "20975:446:17",
															"nodeType": "YulIf",
															"src": "20975:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "20885:543:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "20940:5:17",
														"nodeType": "YulTypedName",
														"src": "20940:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "20947:3:17",
														"nodeType": "YulTypedName",
														"src": "20947:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "20952:10:17",
														"nodeType": "YulTypedName",
														"src": "20952:10:17",
														"type": ""
													}
												],
												"src": "20885:543:17"
											},
											{
												"body": {
													"nativeSrc": "21497:54:17",
													"nodeType": "YulBlock",
													"src": "21497:54:17",
													"statements": [
														{
															"nativeSrc": "21507:37:17",
															"nodeType": "YulAssignment",
															"src": "21507:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21532:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "21532:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21538:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "21538:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "21528:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21528:3:17"
																},
																"nativeSrc": "21528:16:17",
																"nodeType": "YulFunctionCall",
																"src": "21528:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21507:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "21507:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "21434:117:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21472:4:17",
														"nodeType": "YulTypedName",
														"src": "21472:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21478:5:17",
														"nodeType": "YulTypedName",
														"src": "21478:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21488:8:17",
														"nodeType": "YulTypedName",
														"src": "21488:8:17",
														"type": ""
													}
												],
												"src": "21434:117:17"
											},
											{
												"body": {
													"nativeSrc": "21608:118:17",
													"nodeType": "YulBlock",
													"src": "21608:118:17",
													"statements": [
														{
															"nativeSrc": "21618:68:17",
															"nodeType": "YulVariableDeclaration",
															"src": "21618:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21667:1:17",
																						"nodeType": "YulLiteral",
																						"src": "21667:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "21670:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "21670:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "21663:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "21663:3:17"
																				},
																				"nativeSrc": "21663:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "21663:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21682:1:17",
																						"nodeType": "YulLiteral",
																						"src": "21682:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "21678:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "21678:3:17"
																				},
																				"nativeSrc": "21678:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "21678:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "21634:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "21634:28:17"
																		},
																		"nativeSrc": "21634:51:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21634:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "21630:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21630:3:17"
																},
																"nativeSrc": "21630:56:17",
																"nodeType": "YulFunctionCall",
																"src": "21630:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21622:4:17",
																	"nodeType": "YulTypedName",
																	"src": "21622:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21695:25:17",
															"nodeType": "YulAssignment",
															"src": "21695:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21709:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "21709:4:17"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "21715:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "21715:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21705:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21705:3:17"
																},
																"nativeSrc": "21705:15:17",
																"nodeType": "YulFunctionCall",
																"src": "21705:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21695:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21695:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "21557:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21585:4:17",
														"nodeType": "YulTypedName",
														"src": "21585:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "21591:5:17",
														"nodeType": "YulTypedName",
														"src": "21591:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21601:6:17",
														"nodeType": "YulTypedName",
														"src": "21601:6:17",
														"type": ""
													}
												],
												"src": "21557:169:17"
											},
											{
												"body": {
													"nativeSrc": "21812:214:17",
													"nodeType": "YulBlock",
													"src": "21812:214:17",
													"statements": [
														{
															"nativeSrc": "21945:37:17",
															"nodeType": "YulAssignment",
															"src": "21945:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21972:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "21972:4:17"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "21978:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21978:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "21953:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "21953:18:17"
																},
																"nativeSrc": "21953:29:17",
																"nodeType": "YulFunctionCall",
																"src": "21953:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21945:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21945:4:17"
																}
															]
														},
														{
															"nativeSrc": "21991:29:17",
															"nodeType": "YulAssignment",
															"src": "21991:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22002:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "22002:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "22012:1:17",
																				"nodeType": "YulLiteral",
																				"src": "22012:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "22015:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "22015:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "22008:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22008:3:17"
																		},
																		"nativeSrc": "22008:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22008:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21999:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "21999:2:17"
																},
																"nativeSrc": "21999:21:17",
																"nodeType": "YulFunctionCall",
																"src": "21999:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "21991:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21991:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "21731:295:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21793:4:17",
														"nodeType": "YulTypedName",
														"src": "21793:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "21799:3:17",
														"nodeType": "YulTypedName",
														"src": "21799:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "21807:4:17",
														"nodeType": "YulTypedName",
														"src": "21807:4:17",
														"type": ""
													}
												],
												"src": "21731:295:17"
											},
											{
												"body": {
													"nativeSrc": "22123:1303:17",
													"nodeType": "YulBlock",
													"src": "22123:1303:17",
													"statements": [
														{
															"nativeSrc": "22134:51:17",
															"nodeType": "YulVariableDeclaration",
															"src": "22134:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "22181:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "22181:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "22148:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "22148:32:17"
																},
																"nativeSrc": "22148:37:17",
																"nodeType": "YulFunctionCall",
																"src": "22148:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "22138:6:17",
																	"nodeType": "YulTypedName",
																	"src": "22138:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22270:22:17",
																"nodeType": "YulBlock",
																"src": "22270:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "22272:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "22272:16:17"
																			},
																			"nativeSrc": "22272:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "22272:18:17"
																		},
																		"nativeSrc": "22272:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "22272:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22242:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22242:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22250:18:17",
																		"nodeType": "YulLiteral",
																		"src": "22250:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22239:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "22239:2:17"
																},
																"nativeSrc": "22239:30:17",
																"nodeType": "YulFunctionCall",
																"src": "22239:30:17"
															},
															"nativeSrc": "22236:56:17",
															"nodeType": "YulIf",
															"src": "22236:56:17"
														},
														{
															"nativeSrc": "22302:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "22302:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "22348:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "22348:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "22342:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "22342:5:17"
																		},
																		"nativeSrc": "22342:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22342:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "22316:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "22316:25:17"
																},
																"nativeSrc": "22316:38:17",
																"nodeType": "YulFunctionCall",
																"src": "22316:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "22306:6:17",
																	"nodeType": "YulTypedName",
																	"src": "22306:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22447:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "22447:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "22453:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22453:6:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "22461:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22461:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "22401:45:17",
																	"nodeType": "YulIdentifier",
																	"src": "22401:45:17"
																},
																"nativeSrc": "22401:67:17",
																"nodeType": "YulFunctionCall",
																"src": "22401:67:17"
															},
															"nativeSrc": "22401:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "22401:67:17"
														},
														{
															"nativeSrc": "22478:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "22478:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "22495:1:17",
																"nodeType": "YulLiteral",
																"src": "22495:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22482:9:17",
																	"nodeType": "YulTypedName",
																	"src": "22482:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22506:17:17",
															"nodeType": "YulAssignment",
															"src": "22506:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "22519:4:17",
																"nodeType": "YulLiteral",
																"src": "22519:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22506:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "22506:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "22570:611:17",
																		"nodeType": "YulBlock",
																		"src": "22570:611:17",
																		"statements": [
																			{
																				"nativeSrc": "22584:37:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22584:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "22603:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "22603:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "22615:4:17",
																									"nodeType": "YulLiteral",
																									"src": "22615:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "22611:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "22611:3:17"
																							},
																							"nativeSrc": "22611:9:17",
																							"nodeType": "YulFunctionCall",
																							"src": "22611:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "22599:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "22599:3:17"
																					},
																					"nativeSrc": "22599:22:17",
																					"nodeType": "YulFunctionCall",
																					"src": "22599:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "22588:7:17",
																						"nodeType": "YulTypedName",
																						"src": "22588:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22635:51:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22635:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22681:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "22681:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "22649:31:17",
																						"nodeType": "YulIdentifier",
																						"src": "22649:31:17"
																					},
																					"nativeSrc": "22649:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "22649:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "22639:6:17",
																						"nodeType": "YulTypedName",
																						"src": "22639:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22699:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22699:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22708:1:17",
																					"nodeType": "YulLiteral",
																					"src": "22708:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "22703:1:17",
																						"nodeType": "YulTypedName",
																						"src": "22703:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22767:163:17",
																					"nodeType": "YulBlock",
																					"src": "22767:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22792:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "22792:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "22810:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "22810:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "22815:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "22815:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "22806:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "22806:3:17"
																												},
																												"nativeSrc": "22806:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "22806:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "22800:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "22800:5:17"
																										},
																										"nativeSrc": "22800:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "22800:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22785:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "22785:6:17"
																								},
																								"nativeSrc": "22785:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "22785:42:17"
																							},
																							"nativeSrc": "22785:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "22785:42:17"
																						},
																						{
																							"nativeSrc": "22844:24:17",
																							"nodeType": "YulAssignment",
																							"src": "22844:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22858:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "22858:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22866:1:17",
																										"nodeType": "YulLiteral",
																										"src": "22866:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22854:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "22854:3:17"
																								},
																								"nativeSrc": "22854:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "22854:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "22844:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "22844:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "22885:31:17",
																							"nodeType": "YulAssignment",
																							"src": "22885:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "22902:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "22902:9:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22913:2:17",
																										"nodeType": "YulLiteral",
																										"src": "22913:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22898:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "22898:3:17"
																								},
																								"nativeSrc": "22898:18:17",
																								"nodeType": "YulFunctionCall",
																								"src": "22898:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "22885:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "22885:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "22733:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "22733:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22736:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "22736:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22730:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "22730:2:17"
																					},
																					"nativeSrc": "22730:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "22730:14:17"
																				},
																				"nativeSrc": "22722:208:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "22745:21:17",
																					"nodeType": "YulBlock",
																					"src": "22745:21:17",
																					"statements": [
																						{
																							"nativeSrc": "22747:17:17",
																							"nodeType": "YulAssignment",
																							"src": "22747:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "22756:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "22756:1:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22759:4:17",
																										"nodeType": "YulLiteral",
																										"src": "22759:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22752:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "22752:3:17"
																								},
																								"nativeSrc": "22752:12:17",
																								"nodeType": "YulFunctionCall",
																								"src": "22752:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "22747:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "22747:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "22726:3:17",
																					"nodeType": "YulBlock",
																					"src": "22726:3:17",
																					"statements": []
																				},
																				"src": "22722:208:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "22966:156:17",
																					"nodeType": "YulBlock",
																					"src": "22966:156:17",
																					"statements": [
																						{
																							"nativeSrc": "22984:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "22984:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23011:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "23011:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23016:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "23016:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23007:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "23007:3:17"
																										},
																										"nativeSrc": "23007:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "23007:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "23001:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "23001:5:17"
																								},
																								"nativeSrc": "23001:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "23001:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "22988:9:17",
																									"nodeType": "YulTypedName",
																									"src": "22988:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23051:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "23051:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "23078:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "23078:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "23093:6:17",
																														"nodeType": "YulIdentifier",
																														"src": "23093:6:17"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "23101:4:17",
																														"nodeType": "YulLiteral",
																														"src": "23101:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "23089:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "23089:3:17"
																												},
																												"nativeSrc": "23089:17:17",
																												"nodeType": "YulFunctionCall",
																												"src": "23089:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "23059:18:17",
																											"nodeType": "YulIdentifier",
																											"src": "23059:18:17"
																										},
																										"nativeSrc": "23059:48:17",
																										"nodeType": "YulFunctionCall",
																										"src": "23059:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23044:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "23044:6:17"
																								},
																								"nativeSrc": "23044:64:17",
																								"nodeType": "YulFunctionCall",
																								"src": "23044:64:17"
																							},
																							"nativeSrc": "23044:64:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "23044:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22949:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "22949:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "22958:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "22958:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22946:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "22946:2:17"
																					},
																					"nativeSrc": "22946:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "22946:19:17"
																				},
																				"nativeSrc": "22943:179:17",
																				"nodeType": "YulIf",
																				"src": "22943:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23142:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "23142:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "23156:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "23156:6:17"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "23164:1:17",
																											"nodeType": "YulLiteral",
																											"src": "23164:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "23152:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "23152:3:17"
																									},
																									"nativeSrc": "23152:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "23152:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "23168:1:17",
																									"nodeType": "YulLiteral",
																									"src": "23168:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "23148:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "23148:3:17"
																							},
																							"nativeSrc": "23148:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "23148:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23135:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "23135:6:17"
																					},
																					"nativeSrc": "23135:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "23135:36:17"
																				},
																				"nativeSrc": "23135:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "23135:36:17"
																			}
																		]
																	},
																	"nativeSrc": "22563:618:17",
																	"nodeType": "YulCase",
																	"src": "22563:618:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22568:1:17",
																		"nodeType": "YulLiteral",
																		"src": "22568:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "23198:222:17",
																		"nodeType": "YulBlock",
																		"src": "23198:222:17",
																		"statements": [
																			{
																				"nativeSrc": "23212:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23212:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23225:1:17",
																					"nodeType": "YulLiteral",
																					"src": "23225:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "23216:5:17",
																						"nodeType": "YulTypedName",
																						"src": "23216:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23249:67:17",
																					"nodeType": "YulBlock",
																					"src": "23249:67:17",
																					"statements": [
																						{
																							"nativeSrc": "23267:35:17",
																							"nodeType": "YulAssignment",
																							"src": "23267:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23286:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "23286:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23291:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "23291:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23282:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "23282:3:17"
																										},
																										"nativeSrc": "23282:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "23282:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "23276:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "23276:5:17"
																								},
																								"nativeSrc": "23276:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "23276:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "23267:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "23267:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "23242:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "23242:6:17"
																				},
																				"nativeSrc": "23239:77:17",
																				"nodeType": "YulIf",
																				"src": "23239:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23336:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "23336:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "23395:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "23395:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "23402:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "23402:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "23342:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "23342:52:17"
																							},
																							"nativeSrc": "23342:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "23342:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23329:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "23329:6:17"
																					},
																					"nativeSrc": "23329:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "23329:81:17"
																				},
																				"nativeSrc": "23329:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "23329:81:17"
																			}
																		]
																	},
																	"nativeSrc": "23190:230:17",
																	"nodeType": "YulCase",
																	"src": "23190:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22543:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22543:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22551:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22551:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22540:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "22540:2:17"
																},
																"nativeSrc": "22540:14:17",
																"nodeType": "YulFunctionCall",
																"src": "22540:14:17"
															},
															"nativeSrc": "22533:887:17",
															"nodeType": "YulSwitch",
															"src": "22533:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "22031:1395:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22112:4:17",
														"nodeType": "YulTypedName",
														"src": "22112:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "22118:3:17",
														"nodeType": "YulTypedName",
														"src": "22118:3:17",
														"type": ""
													}
												],
												"src": "22031:1395:17"
											},
											{
												"body": {
													"nativeSrc": "23490:40:17",
													"nodeType": "YulBlock",
													"src": "23490:40:17",
													"statements": [
														{
															"nativeSrc": "23501:22:17",
															"nodeType": "YulAssignment",
															"src": "23501:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23517:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "23517:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23511:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "23511:5:17"
																},
																"nativeSrc": "23511:12:17",
																"nodeType": "YulFunctionCall",
																"src": "23511:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "23501:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23501:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "23432:98:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23473:5:17",
														"nodeType": "YulTypedName",
														"src": "23473:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "23483:6:17",
														"nodeType": "YulTypedName",
														"src": "23483:6:17",
														"type": ""
													}
												],
												"src": "23432:98:17"
											},
											{
												"body": {
													"nativeSrc": "23649:34:17",
													"nodeType": "YulBlock",
													"src": "23649:34:17",
													"statements": [
														{
															"nativeSrc": "23659:18:17",
															"nodeType": "YulAssignment",
															"src": "23659:18:17",
															"value": {
																"name": "pos",
																"nativeSrc": "23674:3:17",
																"nodeType": "YulIdentifier",
																"src": "23674:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "23659:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "23659:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23536:147:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23621:3:17",
														"nodeType": "YulTypedName",
														"src": "23621:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "23626:6:17",
														"nodeType": "YulTypedName",
														"src": "23626:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "23637:11:17",
														"nodeType": "YulTypedName",
														"src": "23637:11:17",
														"type": ""
													}
												],
												"src": "23536:147:17"
											},
											{
												"body": {
													"nativeSrc": "23797:278:17",
													"nodeType": "YulBlock",
													"src": "23797:278:17",
													"statements": [
														{
															"nativeSrc": "23807:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "23807:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23853:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "23853:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "23821:31:17",
																	"nodeType": "YulIdentifier",
																	"src": "23821:31:17"
																},
																"nativeSrc": "23821:38:17",
																"nodeType": "YulFunctionCall",
																"src": "23821:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "23811:6:17",
																	"nodeType": "YulTypedName",
																	"src": "23811:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23868:95:17",
															"nodeType": "YulAssignment",
															"src": "23868:95:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23951:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "23951:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23956:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23956:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "23875:75:17",
																	"nodeType": "YulIdentifier",
																	"src": "23875:75:17"
																},
																"nativeSrc": "23875:88:17",
																"nodeType": "YulFunctionCall",
																"src": "23875:88:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23868:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23868:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24011:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "24011:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24018:4:17",
																				"nodeType": "YulLiteral",
																				"src": "24018:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24007:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "24007:3:17"
																		},
																		"nativeSrc": "24007:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24007:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24025:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "24025:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24030:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "24030:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "23972:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "23972:34:17"
																},
																"nativeSrc": "23972:65:17",
																"nodeType": "YulFunctionCall",
																"src": "23972:65:17"
															},
															"nativeSrc": "23972:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "23972:65:17"
														},
														{
															"nativeSrc": "24046:23:17",
															"nodeType": "YulAssignment",
															"src": "24046:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24057:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "24057:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24062:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "24062:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24053:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24053:3:17"
																},
																"nativeSrc": "24053:16:17",
																"nodeType": "YulFunctionCall",
																"src": "24053:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24046:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24046:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23689:386:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23778:5:17",
														"nodeType": "YulTypedName",
														"src": "23778:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23785:3:17",
														"nodeType": "YulTypedName",
														"src": "23785:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23793:3:17",
														"nodeType": "YulTypedName",
														"src": "23793:3:17",
														"type": ""
													}
												],
												"src": "23689:386:17"
											},
											{
												"body": {
													"nativeSrc": "24215:137:17",
													"nodeType": "YulBlock",
													"src": "24215:137:17",
													"statements": [
														{
															"nativeSrc": "24226:100:17",
															"nodeType": "YulAssignment",
															"src": "24226:100:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24313:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "24313:6:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24322:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "24322:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24233:79:17",
																	"nodeType": "YulIdentifier",
																	"src": "24233:79:17"
																},
																"nativeSrc": "24233:93:17",
																"nodeType": "YulFunctionCall",
																"src": "24233:93:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24226:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24226:3:17"
																}
															]
														},
														{
															"nativeSrc": "24336:10:17",
															"nodeType": "YulAssignment",
															"src": "24336:10:17",
															"value": {
																"name": "pos",
																"nativeSrc": "24343:3:17",
																"nodeType": "YulIdentifier",
																"src": "24343:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24336:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24336:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "24081:271:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24194:3:17",
														"nodeType": "YulTypedName",
														"src": "24194:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24200:6:17",
														"nodeType": "YulTypedName",
														"src": "24200:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24211:3:17",
														"nodeType": "YulTypedName",
														"src": "24211:3:17",
														"type": ""
													}
												],
												"src": "24081:271:17"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Burn wallet cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Utility wallet cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64(memPtr) {\n\n        mstore(add(memPtr, 0), \"Liquidity wallet cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid account address\")\n\n    }\n\n    function abi_encode_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: ownwer is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"492": [
									{
										"length": 32,
										"start": 5243
									},
									{
										"length": 32,
										"start": 5328
									},
									{
										"length": 32,
										"start": 5770
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610180575f3560e01c8063715018a6116100d0578063ad3cb1cc11610089578063dccd8bd211610063578063dccd8bd214610540578063dd62ed3e1461056a578063f2fde38b146105a6578063fce589d8146105ce57610180565b8063ad3cb1cc146104c2578063bf4cc52b146104ec578063d46980161461051657610180565b8063715018a6146103dc5780638129fc1c146103f25780638da5cb5b1461040857806395d89b411461043257806398118cb41461045c578063a9059cbb1461048657610180565b806323b872dd1161013d5780634f1ef286116101175780634f1ef2861461033257806352d1902d1461034e5780635e4043e91461037857806370a08231146103a057610180565b806323b872dd14610290578063313ce567146102cc5780633f4218e0146102f657610180565b8063062287491461018457806306fdde03146101ae578063095ea7b3146101d8578063147c9f6d1461021457806318160ddd1461023c5780631df4ccfc14610266575b5f80fd5b34801561018f575f80fd5b506101986105f8565b6040516101a591906123ca565b60405180910390f35b3480156101b9575f80fd5b506101c261061b565b6040516101cf9190612453565b60405180910390f35b3480156101e3575f80fd5b506101fe60048036038101906101f991906124e1565b6106b9565b60405161020b9190612539565b60405180910390f35b34801561021f575f80fd5b5061023a60048036038101906102359190612552565b6106db565b005b348015610247575f80fd5b506102506108f1565b60405161025d91906125b1565b60405180910390f35b348015610271575f80fd5b5061027a610908565b60405161028791906125b1565b60405180910390f35b34801561029b575f80fd5b506102b660048036038101906102b191906125ca565b61092b565b6040516102c39190612539565b60405180910390f35b3480156102d7575f80fd5b506102e0610959565b6040516102ed9190612635565b60405180910390f35b348015610301575f80fd5b5061031c6004803603810190610317919061264e565b610961565b6040516103299190612539565b60405180910390f35b61034c600480360381019061034791906127a5565b61097e565b005b348015610359575f80fd5b5061036261099d565b60405161036f9190612817565b60405180910390f35b348015610383575f80fd5b5061039e6004803603810190610399919061285a565b6109ce565b005b3480156103ab575f80fd5b506103c660048036038101906103c1919061264e565b610a9c565b6040516103d391906125b1565b60405180910390f35b3480156103e7575f80fd5b506103f0610aef565b005b3480156103fd575f80fd5b50610406610b02565b005b348015610413575f80fd5b5061041c610eb9565b60405161042991906123ca565b60405180910390f35b34801561043d575f80fd5b50610446610eee565b6040516104539190612453565b60405180910390f35b348015610467575f80fd5b50610470610f8c565b60405161047d91906125b1565b60405180910390f35b348015610491575f80fd5b506104ac60048036038101906104a791906124e1565b610f92565b6040516104b99190612539565b60405180910390f35b3480156104cd575f80fd5b506104d6610fb4565b6040516104e39190612453565b60405180910390f35b3480156104f7575f80fd5b50610500610fed565b60405161050d91906123ca565b60405180910390f35b348015610521575f80fd5b5061052a611012565b60405161053791906123ca565b60405180910390f35b34801561054b575f80fd5b50610554611037565b60405161056191906125b1565b60405180910390f35b348015610575575f80fd5b50610590600480360381019061058b9190612898565b61103d565b60405161059d91906125b1565b60405180910390f35b3480156105b1575f80fd5b506105cc60048036038101906105c7919061264e565b6110cd565b005b3480156105d9575f80fd5b506105e2611151565b6040516105ef91906125b1565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60605f610626611157565b905080600301805461063790612903565b80601f016020809104026020016040519081016040528092919081815260200182805461066390612903565b80156106ae5780601f10610685576101008083540402835291602001916106ae565b820191905f5260205f20905b81548152906001019060200180831161069157829003601f168201915b505050505091505090565b5f806106c361117e565b90506106d0818585611185565b600191505092915050565b6106e3611197565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610751576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107489061297d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b6906129e5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490612a4d565b60405180910390fd5b825f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b5f806108fb611157565b9050806002015491505090565b5f60055460045460035461091c9190612a98565b6109269190612a98565b905090565b5f8061093561117e565b905061094285828561121e565b61094d8585856112b1565b60019150509392505050565b5f6012905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b610986611479565b61098f8261155f565b610999828261156a565b5050565b5f6109a6611688565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b6109d6611197565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90612b15565b60405180910390fd5b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f80610aa6611157565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610af7611197565b610b005f61170f565b565b5f610b0b6117e0565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610b535750825b90505f60018367ffffffffffffffff16148015610b8657505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b94575080155b15610bcb576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610c18576001855f0160086101000a81548160ff0219169083151502179055505b610c8c6040518060400160405280601481526020017f43726f636f64696c6f20426f6d62657264696e6f0000000000000000000000008152506040518060400160405280600a81526020017f424f4d42455244494e4f000000000000000000000000000000000000000000008152506117f3565b610c9533611809565b610c9d6119f8565b610cb3336b033b2e3c9fd0803ce8000000611a02565b73077da53e0865f111b35912d400822ba89401ca645f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073775afe34497a187350607d669c097dd9f6ddfaad60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d42509a701a192ce204e5fb1be4fba0c8b08a98260025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160065f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508315610eb2575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610ea99190612b88565b60405180910390a15b5050505050565b5f80610ec3611a81565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610ef9611157565b9050806004018054610f0a90612903565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3690612903565b8015610f815780601f10610f5857610100808354040283529160200191610f81565b820191905f5260205f20905b815481529060010190602001808311610f6457829003601f168201915b505050505091505090565b60055481565b5f80610f9c61117e565b9050610fa98185856112b1565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b5f80611047611157565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6110d5611197565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611145575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161113c91906123ca565b60405180910390fd5b61114e8161170f565b50565b60035481565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6111928383836001611aa8565b505050565b61119f61117e565b73ffffffffffffffffffffffffffffffffffffffff166111bd610eb9565b73ffffffffffffffffffffffffffffffffffffffff161461121c576111e061117e565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161121391906123ca565b60405180910390fd5b565b5f611229848461103d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112ab578181101561129c578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161129393929190612ba1565b60405180910390fd5b6112aa84848484035f611aa8565b5b50505050565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff168061134c575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b156113615761135c838383611c85565b611474565b5f606461136c610908565b836113779190612bd6565b6113819190612c44565b90505f6064600354846113949190612bd6565b61139e9190612c44565b90505f6064600454856113b19190612bd6565b6113bb9190612c44565b90505f8183856113cb9190612c74565b6113d59190612c74565b9050611401875f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611c85565b61142d8760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611c85565b6114598760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611c85565b61146f8787868861146a9190612c74565b611c85565b505050505b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061152657507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661150d611d75565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561155d576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611567611197565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156115d257506040513d601f19601f820116820180604052508101906115cf9190612cd1565b60015b61161357816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161160a91906123ca565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461167957806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016116709190612817565b60405180910390fd5b6116838383611dc8565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461170d576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611718611a81565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f806117ea611e3a565b90508091505090565b6117fb611e63565b6118058282611ea3565b5050565b5f6118126117e0565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561185a5750825b90505f60018367ffffffffffffffff1614801561188d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561189b575080155b156118d2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561191f576001855f0160086101000a81548160ff0219169083151502179055505b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361198d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198490612d46565b60405180910390fd5b6119968661170f565b83156119f0575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516119e79190612b88565b60405180910390a15b505050505050565b611a00611e63565b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a72575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611a6991906123ca565b60405180910390fd5b611a7d5f8383611edf565b5050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f611ab1611157565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611b23575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b1a91906123ca565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b93575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611b8a91906123ca565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611c7e578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611c7591906125b1565b60405180910390a35b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cf5575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611cec91906123ca565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d65575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d5c91906123ca565b60405180910390fd5b611d70838383611edf565b505050565b5f611da17f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61210e565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611dd182612117565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115611e2d57611e2782826121e0565b50611e36565b611e35612260565b5b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b611e6b61229c565b611ea1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611eab611e63565b5f611eb4611157565b905082816003019081611ec79190612ef8565b5081816004019081611ed99190612ef8565b50505050565b5f611ee8611157565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f3c5781816002015f828254611f309190612a98565b9250508190555061200e565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611fc7578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611fbe93929190612ba1565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120575781816002015f82825403925050819055506120a3565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161210091906125b1565b60405180910390a350505050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361217257806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161216991906123ca565b60405180910390fd5b8061219e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61210e565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff1684604051612209919061300b565b5f60405180830381855af49150503d805f8114612241576040519150601f19603f3d011682016040523d82523d5f602084013e612246565b606091505b50915091506122568583836122ba565b9250505092915050565b5f34111561229a576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6122a56117e0565b5f0160089054906101000a900460ff16905090565b6060826122cf576122ca82612347565b61233f565b5f82511480156122f557505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561233757836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161232e91906123ca565b60405180910390fd5b819050612340565b5b9392505050565b5f815111156123595780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6123b48261238b565b9050919050565b6123c4816123aa565b82525050565b5f6020820190506123dd5f8301846123bb565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612425826123e3565b61242f81856123ed565b935061243f8185602086016123fd565b6124488161240b565b840191505092915050565b5f6020820190508181035f83015261246b818461241b565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b61248d816123aa565b8114612497575f80fd5b50565b5f813590506124a881612484565b92915050565b5f819050919050565b6124c0816124ae565b81146124ca575f80fd5b50565b5f813590506124db816124b7565b92915050565b5f80604083850312156124f7576124f661247c565b5b5f6125048582860161249a565b9250506020612515858286016124cd565b9150509250929050565b5f8115159050919050565b6125338161251f565b82525050565b5f60208201905061254c5f83018461252a565b92915050565b5f805f606084860312156125695761256861247c565b5b5f6125768682870161249a565b93505060206125878682870161249a565b92505060406125988682870161249a565b9150509250925092565b6125ab816124ae565b82525050565b5f6020820190506125c45f8301846125a2565b92915050565b5f805f606084860312156125e1576125e061247c565b5b5f6125ee8682870161249a565b93505060206125ff8682870161249a565b9250506040612610868287016124cd565b9150509250925092565b5f60ff82169050919050565b61262f8161261a565b82525050565b5f6020820190506126485f830184612626565b92915050565b5f602082840312156126635761266261247c565b5b5f6126708482850161249a565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6126b78261240b565b810181811067ffffffffffffffff821117156126d6576126d5612681565b5b80604052505050565b5f6126e8612473565b90506126f482826126ae565b919050565b5f67ffffffffffffffff82111561271357612712612681565b5b61271c8261240b565b9050602081019050919050565b828183375f83830152505050565b5f612749612744846126f9565b6126df565b9050828152602081018484840111156127655761276461267d565b5b612770848285612729565b509392505050565b5f82601f83011261278c5761278b612679565b5b813561279c848260208601612737565b91505092915050565b5f80604083850312156127bb576127ba61247c565b5b5f6127c88582860161249a565b925050602083013567ffffffffffffffff8111156127e9576127e8612480565b5b6127f585828601612778565b9150509250929050565b5f819050919050565b612811816127ff565b82525050565b5f60208201905061282a5f830184612808565b92915050565b6128398161251f565b8114612843575f80fd5b50565b5f8135905061285481612830565b92915050565b5f80604083850312156128705761286f61247c565b5b5f61287d8582860161249a565b925050602061288e85828601612846565b9150509250929050565b5f80604083850312156128ae576128ad61247c565b5b5f6128bb8582860161249a565b92505060206128cc8582860161249a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061291a57607f821691505b60208210810361292d5761292c6128d6565b5b50919050565b7f4275726e2077616c6c65742063616e6e6f74206265207a65726f0000000000005f82015250565b5f612967601a836123ed565b915061297282612933565b602082019050919050565b5f6020820190508181035f8301526129948161295b565b9050919050565b7f5574696c6974792077616c6c65742063616e6e6f74206265207a65726f0000005f82015250565b5f6129cf601d836123ed565b91506129da8261299b565b602082019050919050565b5f6020820190508181035f8301526129fc816129c3565b9050919050565b7f4c69717569646974792077616c6c65742063616e6e6f74206265207a65726f005f82015250565b5f612a37601f836123ed565b9150612a4282612a03565b602082019050919050565b5f6020820190508181035f830152612a6481612a2b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612aa2826124ae565b9150612aad836124ae565b9250828201905080821115612ac557612ac4612a6b565b5b92915050565b7f496e76616c6964206163636f756e7420616464726573730000000000000000005f82015250565b5f612aff6017836123ed565b9150612b0a82612acb565b602082019050919050565b5f6020820190508181035f830152612b2c81612af3565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f612b72612b6d612b6884612b33565b612b4f565b612b3c565b9050919050565b612b8281612b58565b82525050565b5f602082019050612b9b5f830184612b79565b92915050565b5f606082019050612bb45f8301866123bb565b612bc160208301856125a2565b612bce60408301846125a2565b949350505050565b5f612be0826124ae565b9150612beb836124ae565b9250828202612bf9816124ae565b91508282048414831517612c1057612c0f612a6b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612c4e826124ae565b9150612c59836124ae565b925082612c6957612c68612c17565b5b828204905092915050565b5f612c7e826124ae565b9150612c89836124ae565b9250828203905081811115612ca157612ca0612a6b565b5b92915050565b612cb0816127ff565b8114612cba575f80fd5b50565b5f81519050612ccb81612ca7565b92915050565b5f60208284031215612ce657612ce561247c565b5b5f612cf384828501612cbd565b91505092915050565b7f45524332303a206f776e776572206973207a65726f00000000000000000000005f82015250565b5f612d306015836123ed565b9150612d3b82612cfc565b602082019050919050565b5f6020820190508181035f830152612d5d81612d24565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612dc07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612d85565b612dca8683612d85565b95508019841693508086168417925050509392505050565b5f612dfc612df7612df2846124ae565b612b4f565b6124ae565b9050919050565b5f819050919050565b612e1583612de2565b612e29612e2182612e03565b848454612d91565b825550505050565b5f90565b612e3d612e31565b612e48818484612e0c565b505050565b5b81811015612e6b57612e605f82612e35565b600181019050612e4e565b5050565b601f821115612eb057612e8181612d64565b612e8a84612d76565b81016020851015612e99578190505b612ead612ea585612d76565b830182612e4d565b50505b505050565b5f82821c905092915050565b5f612ed05f1984600802612eb5565b1980831691505092915050565b5f612ee88383612ec1565b9150826002028217905092915050565b612f01826123e3565b67ffffffffffffffff811115612f1a57612f19612681565b5b612f248254612903565b612f2f828285612e6f565b5f60209050601f831160018114612f60575f8415612f4e578287015190505b612f588582612edd565b865550612fbf565b601f198416612f6e86612d64565b5f5b82811015612f9557848901518255600182019150602085019450602081019050612f70565b86831015612fb25784890151612fae601f891682612ec1565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f612fe582612fc7565b612fef8185612fd1565b9350612fff8185602086016123fd565b80840191505092915050565b5f6130168284612fdb565b91508190509291505056fea26469706673582212202ba0a1f7f82d3f338b53ddf2f484e756acaca96f314577e018310bca068d21a664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDCCD8BD2 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDCCD8BD2 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xFCE589D8 EQ PUSH2 0x5CE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xBF4CC52B EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x516 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x486 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x5E4043E9 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A0 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x3F4218E0 EQ PUSH2 0x2F6 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x6228749 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x147C9F6D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x1DF4CCFC EQ PUSH2 0x266 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x24E1 JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2552 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x25CA JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x285A JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH2 0xAEF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH2 0xB02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41C PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x446 PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x470 PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x491 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x24E1 JUMP JUMPDEST PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D6 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52A PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x554 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x103D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0x10CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E2 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x626 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x637 SWAP1 PUSH2 0x2903 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x663 SWAP1 PUSH2 0x2903 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x685 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x691 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6C3 PUSH2 0x117E JUMP JUMPDEST SWAP1 POP PUSH2 0x6D0 DUP2 DUP6 DUP6 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E3 PUSH2 0x1197 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP1 PUSH2 0x297D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP1 PUSH2 0x2A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8FB PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x935 PUSH2 0x117E JUMP JUMPDEST SWAP1 POP PUSH2 0x942 DUP6 DUP3 DUP6 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x94D DUP6 DUP6 DUP6 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x986 PUSH2 0x1479 JUMP JUMPDEST PUSH2 0x98F DUP3 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x999 DUP3 DUP3 PUSH2 0x156A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9A6 PUSH2 0x1688 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D6 PUSH2 0x1197 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAA6 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xB00 PUSH0 PUSH2 0x170F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xB0B PUSH2 0x17E0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB53 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB86 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC18 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xC8C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43726F636F64696C6F20426F6D62657264696E6F000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x424F4D42455244494E4F00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0xC95 CALLER PUSH2 0x1809 JUMP JUMPDEST PUSH2 0xC9D PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0xCB3 CALLER PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1A02 JUMP JUMPDEST PUSH20 0x77DA53E0865F111B35912D400822BA89401CA64 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x775AFE34497A187350607D669C097DD9F6DDFAAD PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD42509A701A192CE204E5FB1BE4FBA0C8B08A982 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xEB2 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xEA9 SWAP2 SWAP1 PUSH2 0x2B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEC3 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xEF9 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xF0A SWAP1 PUSH2 0x2903 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF36 SWAP1 PUSH2 0x2903 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF58 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF9C PUSH2 0x117E JUMP JUMPDEST SWAP1 POP PUSH2 0xFA9 DUP2 DUP6 DUP6 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1047 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10D5 PUSH2 0x1197 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1145 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113C SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x114E DUP2 PUSH2 0x170F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1192 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1AA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x119F PUSH2 0x117E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BD PUSH2 0xEB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x121C JUMPI PUSH2 0x11E0 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1229 DUP5 DUP5 PUSH2 0x103D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x12AB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x129C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1293 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x134C JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1361 JUMPI PUSH2 0x135C DUP4 DUP4 DUP4 PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1474 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH2 0x136C PUSH2 0x908 JUMP JUMPDEST DUP4 PUSH2 0x1377 SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x3 SLOAD DUP5 PUSH2 0x1394 SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x139E SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x4 SLOAD DUP6 PUSH2 0x13B1 SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP6 PUSH2 0x13CB SWAP2 SWAP1 PUSH2 0x2C74 JUMP JUMPDEST PUSH2 0x13D5 SWAP2 SWAP1 PUSH2 0x2C74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1401 DUP8 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x142D DUP8 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1459 DUP8 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x146F DUP8 DUP8 DUP7 DUP9 PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x2C74 JUMP JUMPDEST PUSH2 0x1C85 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1526 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150D PUSH2 0x1D75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x155D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1567 PUSH2 0x1197 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2CD1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1613 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160A SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1679 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1670 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1683 DUP4 DUP4 PUSH2 0x1DC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1718 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x17EA PUSH2 0x1E3A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x1E63 JUMP JUMPDEST PUSH2 0x1805 DUP3 DUP3 PUSH2 0x1EA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x185A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x188D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x189B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x191F JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x198D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1984 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1996 DUP7 PUSH2 0x170F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x19F0 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x19E7 SWAP2 SWAP1 PUSH2 0x2B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A00 PUSH2 0x1E63 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A72 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A69 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A7D PUSH0 DUP4 DUP4 PUSH2 0x1EDF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1AB1 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B23 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1A SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8A SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1C7E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C75 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEC SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D65 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5C SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D70 DUP4 DUP4 DUP4 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x210E JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DD1 DUP3 PUSH2 0x2117 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1E2D JUMPI PUSH2 0x1E27 DUP3 DUP3 PUSH2 0x21E0 JUMP JUMPDEST POP PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0x1E35 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E6B PUSH2 0x229C JUMP JUMPDEST PUSH2 0x1EA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1EAB PUSH2 0x1E63 JUMP JUMPDEST PUSH0 PUSH2 0x1EB4 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1EC7 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1ED9 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE8 PUSH2 0x1157 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1F30 SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x200E JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1FC7 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FBE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2057 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x20A3 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2100 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2172 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2169 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x219E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x210E JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2209 SWAP2 SWAP1 PUSH2 0x300B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2241 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2256 DUP6 DUP4 DUP4 PUSH2 0x22BA JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x229A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x22A5 PUSH2 0x17E0 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x22CF JUMPI PUSH2 0x22CA DUP3 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x22F5 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2337 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232E SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2340 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2359 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B4 DUP3 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23C4 DUP2 PUSH2 0x23AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23DD PUSH0 DUP4 ADD DUP5 PUSH2 0x23BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2425 DUP3 PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0x242F DUP2 DUP6 PUSH2 0x23ED JUMP JUMPDEST SWAP4 POP PUSH2 0x243F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2448 DUP2 PUSH2 0x240B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x246B DUP2 DUP5 PUSH2 0x241B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x248D DUP2 PUSH2 0x23AA JUMP JUMPDEST DUP2 EQ PUSH2 0x2497 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A8 DUP2 PUSH2 0x2484 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24C0 DUP2 PUSH2 0x24AE JUMP JUMPDEST DUP2 EQ PUSH2 0x24CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24DB DUP2 PUSH2 0x24B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24F7 JUMPI PUSH2 0x24F6 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2504 DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2515 DUP6 DUP3 DUP7 ADD PUSH2 0x24CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2533 DUP2 PUSH2 0x251F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x254C PUSH0 DUP4 ADD DUP5 PUSH2 0x252A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2569 JUMPI PUSH2 0x2568 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2576 DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2587 DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2598 DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x25AB DUP2 PUSH2 0x24AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x25A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25E1 JUMPI PUSH2 0x25E0 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25EE DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25FF DUP7 DUP3 DUP8 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2610 DUP7 DUP3 DUP8 ADD PUSH2 0x24CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x262F DUP2 PUSH2 0x261A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2648 PUSH0 DUP4 ADD DUP5 PUSH2 0x2626 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2663 JUMPI PUSH2 0x2662 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2670 DUP5 DUP3 DUP6 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x26B7 DUP3 PUSH2 0x240B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26D6 JUMPI PUSH2 0x26D5 PUSH2 0x2681 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E8 PUSH2 0x2473 JUMP JUMPDEST SWAP1 POP PUSH2 0x26F4 DUP3 DUP3 PUSH2 0x26AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2713 JUMPI PUSH2 0x2712 PUSH2 0x2681 JUMP JUMPDEST JUMPDEST PUSH2 0x271C DUP3 PUSH2 0x240B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2749 PUSH2 0x2744 DUP5 PUSH2 0x26F9 JUMP JUMPDEST PUSH2 0x26DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH2 0x2770 DUP5 DUP3 DUP6 PUSH2 0x2729 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x278C JUMPI PUSH2 0x278B PUSH2 0x2679 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x279C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27C8 DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27E9 JUMPI PUSH2 0x27E8 PUSH2 0x2480 JUMP JUMPDEST JUMPDEST PUSH2 0x27F5 DUP6 DUP3 DUP7 ADD PUSH2 0x2778 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2811 DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x282A PUSH0 DUP4 ADD DUP5 PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2839 DUP2 PUSH2 0x251F JUMP JUMPDEST DUP2 EQ PUSH2 0x2843 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2854 DUP2 PUSH2 0x2830 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2870 JUMPI PUSH2 0x286F PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x287D DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x288E DUP6 DUP3 DUP7 ADD PUSH2 0x2846 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28AD PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28BB DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28CC DUP6 DUP3 DUP7 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x291A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x292D JUMPI PUSH2 0x292C PUSH2 0x28D6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E2077616C6C65742063616E6E6F74206265207A65726F000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2967 PUSH1 0x1A DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2972 DUP3 PUSH2 0x2933 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2994 DUP2 PUSH2 0x295B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5574696C6974792077616C6C65742063616E6E6F74206265207A65726F000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29CF PUSH1 0x1D DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x29DA DUP3 PUSH2 0x299B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29FC DUP2 PUSH2 0x29C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C69717569646974792077616C6C65742063616E6E6F74206265207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A37 PUSH1 0x1F DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2A42 DUP3 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A64 DUP2 PUSH2 0x2A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2AA2 DUP3 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2AAD DUP4 PUSH2 0x24AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AC5 JUMPI PUSH2 0x2AC4 PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206163636F756E742061646472657373000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AFF PUSH1 0x17 DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0A DUP3 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B2C DUP2 PUSH2 0x2AF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B72 PUSH2 0x2B6D PUSH2 0x2B68 DUP5 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0x2B3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B82 DUP2 PUSH2 0x2B58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B9B PUSH0 DUP4 ADD DUP5 PUSH2 0x2B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BB4 PUSH0 DUP4 ADD DUP7 PUSH2 0x23BB JUMP JUMPDEST PUSH2 0x2BC1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x25A2 JUMP JUMPDEST PUSH2 0x2BCE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25A2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE0 DUP3 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2BEB DUP4 PUSH2 0x24AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BF9 DUP2 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C10 JUMPI PUSH2 0x2C0F PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2C4E DUP3 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C59 DUP4 PUSH2 0x24AE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C69 JUMPI PUSH2 0x2C68 PUSH2 0x2C17 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C7E DUP3 PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C89 DUP4 PUSH2 0x24AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2CA1 JUMPI PUSH2 0x2CA0 PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CB0 DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP2 EQ PUSH2 0x2CBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CCB DUP2 PUSH2 0x2CA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CE6 JUMPI PUSH2 0x2CE5 PUSH2 0x247C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2CF3 DUP5 DUP3 DUP6 ADD PUSH2 0x2CBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206F776E776572206973207A65726F0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D30 PUSH1 0x15 DUP4 PUSH2 0x23ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3B DUP3 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D5D DUP2 PUSH2 0x2D24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2DC0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2D85 JUMP JUMPDEST PUSH2 0x2DCA DUP7 DUP4 PUSH2 0x2D85 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DFC PUSH2 0x2DF7 PUSH2 0x2DF2 DUP5 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0x24AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E15 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST PUSH2 0x2E29 PUSH2 0x2E21 DUP3 PUSH2 0x2E03 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2D91 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2E3D PUSH2 0x2E31 JUMP JUMPDEST PUSH2 0x2E48 DUP2 DUP5 DUP5 PUSH2 0x2E0C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E6B JUMPI PUSH2 0x2E60 PUSH0 DUP3 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2E4E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2EB0 JUMPI PUSH2 0x2E81 DUP2 PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x2E8A DUP5 PUSH2 0x2D76 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2E99 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2EAD PUSH2 0x2EA5 DUP6 PUSH2 0x2D76 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2E4D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ED0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2EB5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE8 DUP4 DUP4 PUSH2 0x2EC1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F01 DUP3 PUSH2 0x23E3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F1A JUMPI PUSH2 0x2F19 PUSH2 0x2681 JUMP JUMPDEST JUMPDEST PUSH2 0x2F24 DUP3 SLOAD PUSH2 0x2903 JUMP JUMPDEST PUSH2 0x2F2F DUP3 DUP3 DUP6 PUSH2 0x2E6F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F60 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F4E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2F58 DUP6 DUP3 PUSH2 0x2EDD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2FBF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2F6E DUP7 PUSH2 0x2D64 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F95 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F70 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2FB2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2FAE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2EC1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FE5 DUP3 PUSH2 0x2FC7 JUMP JUMPDEST PUSH2 0x2FEF DUP2 DUP6 PUSH2 0x2FD1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2FFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23FD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3016 DUP3 DUP5 PUSH2 0x2FDB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B LOG0 LOG1 0xF7 0xF8 0x2D EXTCODEHASH CALLER DUP12 MSTORE8 0xDD CALLCODE DELEGATECALL DUP5 0xE7 JUMP 0xAC 0xAC 0xA9 PUSH16 0x314577E018310BCA068D21A664736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "571:4312:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:25:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2697:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5191:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4361:519:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3877:152:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;972:111:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5969:244:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3735:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;852:43:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3913:193:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4087:171:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:109:0;;;;;;;;;;;;;:::i;:::-;;1095:877:15;;;;;;;;;;;;;:::i;:::-;;2715:156:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2954:148:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;702:31:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4453:178:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:28:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;478:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;644:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4689:195:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3772:235:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;589:26:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;411:25;;;;;;;;;;;;:::o;2697:144:3:-;2742:13;2767:22;2792:18;:16;:18::i;:::-;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;5191:186::-;5264:4;5280:13;5296:12;:10;:12::i;:::-;5280:28;;5318:31;5327:5;5334:7;5343:5;5318:8;:31::i;:::-;5366:4;5359:11;;;5191:186;;;;:::o;4361:519:15:-;2586:13:0;:11;:13::i;:::-;4550:1:15::1;4527:25;;:11;:25;;::::0;4519:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4628:1;4602:28;;:14;:28;;::::0;4594:70:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4711:1;4683:30;;:16;:30;;::::0;4675:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4775:11;4762:10;::::0;:24:::1;;;;;;;;;;;;;;;;;;4813:14;4797:13;;:30;;;;;;;;;;;;;;;;;;4856:16;4838:15;;:34;;;;;;;;;;;;;;;;;;4361:519:::0;;;:::o;3877:152:3:-;3929:7;3948:22;3973:18;:16;:18::i;:::-;3948:43;;4008:1;:14;;;4001:21;;;3877:152;:::o;972:111:16:-;1013:7;1063:12;;1050:10;;1040:7;;:20;;;;:::i;:::-;:35;;;;:::i;:::-;1033:42;;972:111;:::o;5969:244:3:-;6056:4;6072:15;6090:12;:10;:12::i;:::-;6072:30;;6112:37;6128:4;6134:7;6143:5;6112:15;:37::i;:::-;6159:26;6169:4;6175:2;6179:5;6159:9;:26::i;:::-;6202:4;6195:11;;;5969:244;;;;;:::o;3735:82::-;3784:5;3808:2;3801:9;;3735:82;:::o;852:43:16:-;;;;;;;;;;;;;;;;;;;;;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:8::1;3803:32:2;;3796:39;;3708:134:::0;:::o;3913:193:15:-;2586:13:0;:11;:13::i;:::-;4028:1:15::1;4009:21;;:7;:21;;::::0;4001:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4092:6;4069:11;:20;4081:7;4069:20;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3913:193:::0;;:::o;4087:171:3:-;4152:7;4171:22;4196:18;:16;:18::i;:::-;4171:43;;4231:1;:11;;:20;4243:7;4231:20;;;;;;;;;;;;;;;;4224:27;;;4087:171;;;:::o;3497:109:0:-;2586:13;:11;:13::i;:::-;3565:30:::1;3592:1;3565:18;:30::i;:::-;3497:109::o:0;1095:877:15:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;1147:50:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:50::i;:::-;1208:26;1223:10;1208:14;:26::i;:::-;1364:24;:22;:24::i;:::-;1458:33;1464:10;776:20;1458:5;:33::i;:::-;1620:42;1607:10;::::0;:55:::1;;;;;;;;;;;;;;;;;;1689:42;1673:13;;:58;;;;;;;;;;;;;;;;;;1760:42;1742:15;;:60;;;;;;;;;;;;;;;;;;1916:4;1890:11;:23;1902:10;1890:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1960:4;1931:11;:26;1951:4;1931:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;1095:877:15:o;2715:156:0:-;2761:7;2784:24;2811:20;:18;:20::i;:::-;2784:47;;2852:1;:8;;;;;;;;;;;;2845:15;;;2715:156;:::o;2954:148:3:-;3001:13;3026:22;3051:18;:16;:18::i;:::-;3026:43;;3086:1;:9;;3079:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:148;:::o;702:31:16:-;;;;:::o;4453:178:3:-;4522:4;4538:13;4554:12;:10;:12::i;:::-;4538:28;;4576:27;4586:5;4593:2;4597:5;4576:9;:27::i;:::-;4620:4;4613:11;;;4453:178;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;443:28:16:-;;;;;;;;;;;;;:::o;478:30::-;;;;;;;;;;;;;:::o;644:29::-;;;;:::o;4689:195:3:-;4769:7;4788:22;4813:18;:16;:18::i;:::-;4788:43;;4848:1;:13;;:20;4862:5;4848:20;;;;;;;;;;;;;;;:29;4869:7;4848:29;;;;;;;;;;;;;;;;4841:36;;;4689:195;;;;:::o;3772:235:0:-;2586:13;:11;:13::i;:::-;3880:1:::1;3860:22;;:8;:22;;::::0;3856:99:::1;;3937:1;3909:31;;;;;;;;;;;:::i;:::-;;;;;;;;3856:99;3968:28;3987:8;3968:18;:28::i;:::-;3772:235:::0;:::o;589:26:16:-;;;;:::o;1947:153:3:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;9990:128:3:-;10074:37;10083:5;10090:7;10099:5;10106:4;10074:8;:37::i;:::-;9990:128;;;:::o;2958:178:0:-;3032:12;:10;:12::i;:::-;3021:23;;:7;:5;:7::i;:::-;:23;;;3017:109;;3098:12;:10;:12::i;:::-;3071:40;;;;;;;;;;;:::i;:::-;;;;;;;;3017:109;2958:178::o;11734:476:3:-;11833:24;11860:25;11870:5;11877:7;11860:9;:25::i;:::-;11833:52;;11918:17;11899:16;:36;11895:309;;;11974:5;11955:16;:24;11951:130;;;12033:7;12042:16;12060:5;12006:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11951:130;12122:57;12131:5;12138:7;12166:5;12147:16;:24;12173:5;12122:8;:57::i;:::-;11895:309;11823:387;11734:476;;;:::o;2464:1016:15:-;2567:11;:19;2579:6;2567:19;;;;;;;;;;;;;;;;;;;;;;;;;:45;;;;2590:11;:22;2602:9;2590:22;;;;;;;;;;;;;;;;;;;;;;;;;2567:45;2563:910;;;2712:42;2728:6;2736:9;2747:6;2712:15;:42::i;:::-;2563:910;;;2826:16;2869:3;2855:10;:8;:10::i;:::-;2846:6;:19;;;;:::i;:::-;2845:27;;;;:::i;:::-;2826:46;;2887:18;2929:3;2918:7;;2909:6;:16;;;;:::i;:::-;2908:24;;;;:::i;:::-;2887:45;;2947:21;2995:3;2981:10;;2972:6;:19;;;;:::i;:::-;2971:27;;;;:::i;:::-;2947:51;;3013:23;3063:13;3050:10;3039:8;:21;;;;:::i;:::-;:37;;;;:::i;:::-;3013:63;;3146:47;3162:6;3170:10;;;;;;;;;;3182;3146:15;:47::i;:::-;3208:53;3224:6;3232:13;;;;;;;;;;;3247;3208:15;:53::i;:::-;3276:57;3292:6;3300:15;;;;;;;;;;;3317;3276;:57::i;:::-;3408:53;3424:6;3432:9;3452:8;3443:6;:17;;;;:::i;:::-;3408:15;:53::i;:::-;2772:701;;;;2563:910;2464:1016;;;:::o;4578:312:2:-;4667:6;4650:23;;4658:4;4650:23;;;:120;;;;4764:6;4728:42;;:32;:30;:32::i;:::-;:42;;;;4650:120;4633:251;;;4844:29;;;;;;;;;;;;;;4633:251;4578:312::o;2076:84:15:-;2586:13:0;:11;:13::i;:::-;2076:84:15;:::o;6032:538:2:-;6149:17;6131:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6127:437;;6535:17;6493:60;;;;;;;;;;;:::i;:::-;;;;;;;;6127:437;811:66:8;6233:32:2;;6225:4;:40;6221:120;;6321:4;6292:34;;;;;;;;;;;:::i;:::-;;;;;;;;6221:120;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5090:6;5073:23;;5081:4;5073:23;;;5069:145;;5174:29;;;;;;;;;;;;;;5069:145;5007:213::o;4178:268:0:-;4255:24;4282:20;:18;:20::i;:::-;4255:47;;4316:16;4335:1;:8;;;;;;;;;;;;4316:27;;4368:8;4357:1;:8;;;:19;;;;;;;;;;;;;;;;;;4426:8;4395:40;;4416:8;4395:40;;;;;;;;;;;;4241:205;;4178:268;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;2263:147:3:-;6929:20:1;:18;:20::i;:::-;2365:38:3::1;2388:5;2395:7;2365:22;:38::i;:::-;2263:147:::0;;:::o;1998:186:0:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;2107:1:0::1;2083:26;;:12;:26;;::::0;2075:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2145:32;2164:12;2145:18;:32::i;:::-;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;1998:186:0;:::o;2970:67:2:-;6929:20:1;:18;:20::i;:::-;2970:67:2:o;8722:208:3:-;8811:1;8792:21;;:7;:21;;;8788:91;;8865:1;8836:32;;;;;;;;;;;:::i;:::-;;;;;;;;8788:91;8888:35;8904:1;8908:7;8917:5;8888:7;:35::i;:::-;8722:208;;:::o;1281:175:0:-;1333:24;1410:22;1400:32;;1281:175;:::o;10965:487:3:-;11073:22;11098:18;:16;:18::i;:::-;11073:43;;11147:1;11130:19;;:5;:19;;;11126:89;;11201:1;11172:32;;;;;;;;;;;:::i;:::-;;;;;;;;11126:89;11247:1;11228:21;;:7;:21;;;11224:90;;11300:1;11272:31;;;;;;;;;;;:::i;:::-;;;;;;;;11224:90;11355:5;11323:1;:13;;:20;11337:5;11323:20;;;;;;;;;;;;;;;:29;11344:7;11323:29;;;;;;;;;;;;;;;:37;;;;11374:9;11370:76;;;11420:7;11404:31;;11413:5;11404:31;;;11429:5;11404:31;;;;;;:::i;:::-;;;;;;;;11370:76;11063:389;10965:487;;;;:::o;6586:308::-;6693:1;6677:18;;:4;:18;;;6673:86;;6745:1;6718:30;;;;;;;;;;;:::i;:::-;;;;;;;;6673:86;6786:1;6772:16;;:2;:16;;;6768:86;;6840:1;6811:32;;;;;;;;;;;:::i;:::-;;;;;;;;6768:86;6863:24;6871:4;6877:2;6881:5;6863:7;:24::i;:::-;6586:308;;;:::o;1441:138:8:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2416:216:3:-;6929:20:1;:18;:20::i;:::-;2528:22:3::1;2553:18;:16;:18::i;:::-;2528:43;;2591:5;2581:1;:7;;:15;;;;;;:::i;:::-;;2618:7;2606:1;:9;;:19;;;;;;:::i;:::-;;2518:114;2416:216:::0;;:::o;7209:1170::-;7294:22;7319:18;:16;:18::i;:::-;7294:43;;7367:1;7351:18;;:4;:18;;;7347:546;;7505:5;7487:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7347:546;;;7541:19;7563:1;:11;;:17;7575:4;7563:17;;;;;;;;;;;;;;;;7541:39;;7612:5;7598:11;:19;7594:115;;;7669:4;7675:11;7688:5;7644:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7594:115;7863:5;7849:11;:19;7829:1;:11;;:17;7841:4;7829:17;;;;;;;;;;;;;;;:39;;;;7527:366;7347:546;7921:1;7907:16;;:2;:16;;;7903:429;;8088:5;8070:1;:14;;;:23;;;;;;;;;;;7903:429;;;8302:5;8283:1;:11;;:15;8295:2;8283:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7903:429;8362:2;8347:25;;8356:4;8347:25;;;8366:5;8347:25;;;;;;:::i;:::-;;;;;;;;7284:1095;7209:1170;;;:::o;1899:163:14:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:8:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:12:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:8:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;4437:582:12:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:126:17;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:169::-;782:11;816:6;811:3;804:19;856:4;851:3;847:14;832:29;;698:169;;;;:::o;873:139::-;962:6;957:3;952;946:23;1003:1;994:6;989:3;985:16;978:27;873:139;;;:::o;1018:102::-;1059:6;1110:2;1106:7;1101:2;1094:5;1090:14;1086:28;1076:38;;1018:102;;;:::o;1126:377::-;1214:3;1242:39;1275:5;1242:39;:::i;:::-;1297:71;1361:6;1356:3;1297:71;:::i;:::-;1290:78;;1377:65;1435:6;1430:3;1423:4;1416:5;1412:16;1377:65;:::i;:::-;1467:29;1489:6;1467:29;:::i;:::-;1462:3;1458:39;1451:46;;1218:285;1126:377;;;;:::o;1509:313::-;1622:4;1660:2;1649:9;1645:18;1637:26;;1709:9;1703:4;1699:20;1695:1;1684:9;1680:17;1673:47;1737:78;1810:4;1801:6;1737:78;:::i;:::-;1729:86;;1509:313;;;;:::o;1828:75::-;1861:6;1894:2;1888:9;1878:19;;1828:75;:::o;1909:117::-;2018:1;2015;2008:12;2032:117;2141:1;2138;2131:12;2155:122;2228:24;2246:5;2228:24;:::i;:::-;2221:5;2218:35;2208:63;;2267:1;2264;2257:12;2208:63;2155:122;:::o;2283:139::-;2329:5;2367:6;2354:20;2345:29;;2383:33;2410:5;2383:33;:::i;:::-;2283:139;;;;:::o;2428:77::-;2465:7;2494:5;2483:16;;2428:77;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:118::-;4403:24;4421:5;4403:24;:::i;:::-;4398:3;4391:37;4316:118;;:::o;4440:222::-;4533:4;4571:2;4560:9;4556:18;4548:26;;4584:71;4652:1;4641:9;4637:17;4628:6;4584:71;:::i;:::-;4440:222;;;;:::o;4668:619::-;4745:6;4753;4761;4810:2;4798:9;4789:7;4785:23;4781:32;4778:119;;;4816:79;;:::i;:::-;4778:119;4936:1;4961:53;5006:7;4997:6;4986:9;4982:22;4961:53;:::i;:::-;4951:63;;4907:117;5063:2;5089:53;5134:7;5125:6;5114:9;5110:22;5089:53;:::i;:::-;5079:63;;5034:118;5191:2;5217:53;5262:7;5253:6;5242:9;5238:22;5217:53;:::i;:::-;5207:63;;5162:118;4668:619;;;;;:::o;5293:86::-;5328:7;5368:4;5361:5;5357:16;5346:27;;5293:86;;;:::o;5385:112::-;5468:22;5484:5;5468:22;:::i;:::-;5463:3;5456:35;5385:112;;:::o;5503:214::-;5592:4;5630:2;5619:9;5615:18;5607:26;;5643:67;5707:1;5696:9;5692:17;5683:6;5643:67;:::i;:::-;5503:214;;;;:::o;5723:329::-;5782:6;5831:2;5819:9;5810:7;5806:23;5802:32;5799:119;;;5837:79;;:::i;:::-;5799:119;5957:1;5982:53;6027:7;6018:6;6007:9;6003:22;5982:53;:::i;:::-;5972:63;;5928:117;5723:329;;;;:::o;6058:117::-;6167:1;6164;6157:12;6181:117;6290:1;6287;6280:12;6304:180;6352:77;6349:1;6342:88;6449:4;6446:1;6439:15;6473:4;6470:1;6463:15;6490:281;6573:27;6595:4;6573:27;:::i;:::-;6565:6;6561:40;6703:6;6691:10;6688:22;6667:18;6655:10;6652:34;6649:62;6646:88;;;6714:18;;:::i;:::-;6646:88;6754:10;6750:2;6743:22;6533:238;6490:281;;:::o;6777:129::-;6811:6;6838:20;;:::i;:::-;6828:30;;6867:33;6895:4;6887:6;6867:33;:::i;:::-;6777:129;;;:::o;6912:307::-;6973:4;7063:18;7055:6;7052:30;7049:56;;;7085:18;;:::i;:::-;7049:56;7123:29;7145:6;7123:29;:::i;:::-;7115:37;;7207:4;7201;7197:15;7189:23;;6912:307;;;:::o;7225:148::-;7323:6;7318:3;7313;7300:30;7364:1;7355:6;7350:3;7346:16;7339:27;7225:148;;;:::o;7379:423::-;7456:5;7481:65;7497:48;7538:6;7497:48;:::i;:::-;7481:65;:::i;:::-;7472:74;;7569:6;7562:5;7555:21;7607:4;7600:5;7596:16;7645:3;7636:6;7631:3;7627:16;7624:25;7621:112;;;7652:79;;:::i;:::-;7621:112;7742:54;7789:6;7784:3;7779;7742:54;:::i;:::-;7462:340;7379:423;;;;;:::o;7821:338::-;7876:5;7925:3;7918:4;7910:6;7906:17;7902:27;7892:122;;7933:79;;:::i;:::-;7892:122;8050:6;8037:20;8075:78;8149:3;8141:6;8134:4;8126:6;8122:17;8075:78;:::i;:::-;8066:87;;7882:277;7821:338;;;;:::o;8165:652::-;8242:6;8250;8299:2;8287:9;8278:7;8274:23;8270:32;8267:119;;;8305:79;;:::i;:::-;8267:119;8425:1;8450:53;8495:7;8486:6;8475:9;8471:22;8450:53;:::i;:::-;8440:63;;8396:117;8580:2;8569:9;8565:18;8552:32;8611:18;8603:6;8600:30;8597:117;;;8633:79;;:::i;:::-;8597:117;8738:62;8792:7;8783:6;8772:9;8768:22;8738:62;:::i;:::-;8728:72;;8523:287;8165:652;;;;;:::o;8823:77::-;8860:7;8889:5;8878:16;;8823:77;;;:::o;8906:118::-;8993:24;9011:5;8993:24;:::i;:::-;8988:3;8981:37;8906:118;;:::o;9030:222::-;9123:4;9161:2;9150:9;9146:18;9138:26;;9174:71;9242:1;9231:9;9227:17;9218:6;9174:71;:::i;:::-;9030:222;;;;:::o;9258:116::-;9328:21;9343:5;9328:21;:::i;:::-;9321:5;9318:32;9308:60;;9364:1;9361;9354:12;9308:60;9258:116;:::o;9380:133::-;9423:5;9461:6;9448:20;9439:29;;9477:30;9501:5;9477:30;:::i;:::-;9380:133;;;;:::o;9519:468::-;9584:6;9592;9641:2;9629:9;9620:7;9616:23;9612:32;9609:119;;;9647:79;;:::i;:::-;9609:119;9767:1;9792:53;9837:7;9828:6;9817:9;9813:22;9792:53;:::i;:::-;9782:63;;9738:117;9894:2;9920:50;9962:7;9953:6;9942:9;9938:22;9920:50;:::i;:::-;9910:60;;9865:115;9519:468;;;;;:::o;9993:474::-;10061:6;10069;10118:2;10106:9;10097:7;10093:23;10089:32;10086:119;;;10124:79;;:::i;:::-;10086:119;10244:1;10269:53;10314:7;10305:6;10294:9;10290:22;10269:53;:::i;:::-;10259:63;;10215:117;10371:2;10397:53;10442:7;10433:6;10422:9;10418:22;10397:53;:::i;:::-;10387:63;;10342:118;9993:474;;;;;:::o;10473:180::-;10521:77;10518:1;10511:88;10618:4;10615:1;10608:15;10642:4;10639:1;10632:15;10659:320;10703:6;10740:1;10734:4;10730:12;10720:22;;10787:1;10781:4;10777:12;10808:18;10798:81;;10864:4;10856:6;10852:17;10842:27;;10798:81;10926:2;10918:6;10915:14;10895:18;10892:38;10889:84;;10945:18;;:::i;:::-;10889:84;10710:269;10659:320;;;:::o;10985:176::-;11125:28;11121:1;11113:6;11109:14;11102:52;10985:176;:::o;11167:366::-;11309:3;11330:67;11394:2;11389:3;11330:67;:::i;:::-;11323:74;;11406:93;11495:3;11406:93;:::i;:::-;11524:2;11519:3;11515:12;11508:19;;11167:366;;;:::o;11539:419::-;11705:4;11743:2;11732:9;11728:18;11720:26;;11792:9;11786:4;11782:20;11778:1;11767:9;11763:17;11756:47;11820:131;11946:4;11820:131;:::i;:::-;11812:139;;11539:419;;;:::o;11964:179::-;12104:31;12100:1;12092:6;12088:14;12081:55;11964:179;:::o;12149:366::-;12291:3;12312:67;12376:2;12371:3;12312:67;:::i;:::-;12305:74;;12388:93;12477:3;12388:93;:::i;:::-;12506:2;12501:3;12497:12;12490:19;;12149:366;;;:::o;12521:419::-;12687:4;12725:2;12714:9;12710:18;12702:26;;12774:9;12768:4;12764:20;12760:1;12749:9;12745:17;12738:47;12802:131;12928:4;12802:131;:::i;:::-;12794:139;;12521:419;;;:::o;12946:181::-;13086:33;13082:1;13074:6;13070:14;13063:57;12946:181;:::o;13133:366::-;13275:3;13296:67;13360:2;13355:3;13296:67;:::i;:::-;13289:74;;13372:93;13461:3;13372:93;:::i;:::-;13490:2;13485:3;13481:12;13474:19;;13133:366;;;:::o;13505:419::-;13671:4;13709:2;13698:9;13694:18;13686:26;;13758:9;13752:4;13748:20;13744:1;13733:9;13729:17;13722:47;13786:131;13912:4;13786:131;:::i;:::-;13778:139;;13505:419;;;:::o;13930:180::-;13978:77;13975:1;13968:88;14075:4;14072:1;14065:15;14099:4;14096:1;14089:15;14116:191;14156:3;14175:20;14193:1;14175:20;:::i;:::-;14170:25;;14209:20;14227:1;14209:20;:::i;:::-;14204:25;;14252:1;14249;14245:9;14238:16;;14273:3;14270:1;14267:10;14264:36;;;14280:18;;:::i;:::-;14264:36;14116:191;;;;:::o;14313:173::-;14453:25;14449:1;14441:6;14437:14;14430:49;14313:173;:::o;14492:366::-;14634:3;14655:67;14719:2;14714:3;14655:67;:::i;:::-;14648:74;;14731:93;14820:3;14731:93;:::i;:::-;14849:2;14844:3;14840:12;14833:19;;14492:366;;;:::o;14864:419::-;15030:4;15068:2;15057:9;15053:18;15045:26;;15117:9;15111:4;15107:20;15103:1;15092:9;15088:17;15081:47;15145:131;15271:4;15145:131;:::i;:::-;15137:139;;14864:419;;;:::o;15289:85::-;15334:7;15363:5;15352:16;;15289:85;;;:::o;15380:101::-;15416:7;15456:18;15449:5;15445:30;15434:41;;15380:101;;;:::o;15487:60::-;15515:3;15536:5;15529:12;;15487:60;;;:::o;15553:156::-;15610:9;15643:60;15660:42;15669:32;15695:5;15669:32;:::i;:::-;15660:42;:::i;:::-;15643:60;:::i;:::-;15630:73;;15553:156;;;:::o;15715:145::-;15809:44;15847:5;15809:44;:::i;:::-;15804:3;15797:57;15715:145;;:::o;15866:236::-;15966:4;16004:2;15993:9;15989:18;15981:26;;16017:78;16092:1;16081:9;16077:17;16068:6;16017:78;:::i;:::-;15866:236;;;;:::o;16108:442::-;16257:4;16295:2;16284:9;16280:18;16272:26;;16308:71;16376:1;16365:9;16361:17;16352:6;16308:71;:::i;:::-;16389:72;16457:2;16446:9;16442:18;16433:6;16389:72;:::i;:::-;16471;16539:2;16528:9;16524:18;16515:6;16471:72;:::i;:::-;16108:442;;;;;;:::o;16556:410::-;16596:7;16619:20;16637:1;16619:20;:::i;:::-;16614:25;;16653:20;16671:1;16653:20;:::i;:::-;16648:25;;16708:1;16705;16701:9;16730:30;16748:11;16730:30;:::i;:::-;16719:41;;16909:1;16900:7;16896:15;16893:1;16890:22;16870:1;16863:9;16843:83;16820:139;;16939:18;;:::i;:::-;16820:139;16604:362;16556:410;;;;:::o;16972:180::-;17020:77;17017:1;17010:88;17117:4;17114:1;17107:15;17141:4;17138:1;17131:15;17158:185;17198:1;17215:20;17233:1;17215:20;:::i;:::-;17210:25;;17249:20;17267:1;17249:20;:::i;:::-;17244:25;;17288:1;17278:35;;17293:18;;:::i;:::-;17278:35;17335:1;17332;17328:9;17323:14;;17158:185;;;;:::o;17349:194::-;17389:4;17409:20;17427:1;17409:20;:::i;:::-;17404:25;;17443:20;17461:1;17443:20;:::i;:::-;17438:25;;17487:1;17484;17480:9;17472:17;;17511:1;17505:4;17502:11;17499:37;;;17516:18;;:::i;:::-;17499:37;17349:194;;;;:::o;17549:122::-;17622:24;17640:5;17622:24;:::i;:::-;17615:5;17612:35;17602:63;;17661:1;17658;17651:12;17602:63;17549:122;:::o;17677:143::-;17734:5;17765:6;17759:13;17750:22;;17781:33;17808:5;17781:33;:::i;:::-;17677:143;;;;:::o;17826:351::-;17896:6;17945:2;17933:9;17924:7;17920:23;17916:32;17913:119;;;17951:79;;:::i;:::-;17913:119;18071:1;18096:64;18152:7;18143:6;18132:9;18128:22;18096:64;:::i;:::-;18086:74;;18042:128;17826:351;;;;:::o;18183:171::-;18323:23;18319:1;18311:6;18307:14;18300:47;18183:171;:::o;18360:366::-;18502:3;18523:67;18587:2;18582:3;18523:67;:::i;:::-;18516:74;;18599:93;18688:3;18599:93;:::i;:::-;18717:2;18712:3;18708:12;18701:19;;18360:366;;;:::o;18732:419::-;18898:4;18936:2;18925:9;18921:18;18913:26;;18985:9;18979:4;18975:20;18971:1;18960:9;18956:17;18949:47;19013:131;19139:4;19013:131;:::i;:::-;19005:139;;18732:419;;;:::o;19157:141::-;19206:4;19229:3;19221:11;;19252:3;19249:1;19242:14;19286:4;19283:1;19273:18;19265:26;;19157:141;;;:::o;19304:93::-;19341:6;19388:2;19383;19376:5;19372:14;19368:23;19358:33;;19304:93;;;:::o;19403:107::-;19447:8;19497:5;19491:4;19487:16;19466:37;;19403:107;;;;:::o;19516:393::-;19585:6;19635:1;19623:10;19619:18;19658:97;19688:66;19677:9;19658:97;:::i;:::-;19776:39;19806:8;19795:9;19776:39;:::i;:::-;19764:51;;19848:4;19844:9;19837:5;19833:21;19824:30;;19897:4;19887:8;19883:19;19876:5;19873:30;19863:40;;19592:317;;19516:393;;;;;:::o;19915:142::-;19965:9;19998:53;20016:34;20025:24;20043:5;20025:24;:::i;:::-;20016:34;:::i;:::-;19998:53;:::i;:::-;19985:66;;19915:142;;;:::o;20063:75::-;20106:3;20127:5;20120:12;;20063:75;;;:::o;20144:269::-;20254:39;20285:7;20254:39;:::i;:::-;20315:91;20364:41;20388:16;20364:41;:::i;:::-;20356:6;20349:4;20343:11;20315:91;:::i;:::-;20309:4;20302:105;20220:193;20144:269;;;:::o;20419:73::-;20464:3;20419:73;:::o;20498:189::-;20575:32;;:::i;:::-;20616:65;20674:6;20666;20660:4;20616:65;:::i;:::-;20551:136;20498:189;;:::o;20693:186::-;20753:120;20770:3;20763:5;20760:14;20753:120;;;20824:39;20861:1;20854:5;20824:39;:::i;:::-;20797:1;20790:5;20786:13;20777:22;;20753:120;;;20693:186;;:::o;20885:543::-;20986:2;20981:3;20978:11;20975:446;;;21020:38;21052:5;21020:38;:::i;:::-;21104:29;21122:10;21104:29;:::i;:::-;21094:8;21090:44;21287:2;21275:10;21272:18;21269:49;;;21308:8;21293:23;;21269:49;21331:80;21387:22;21405:3;21387:22;:::i;:::-;21377:8;21373:37;21360:11;21331:80;:::i;:::-;20990:431;;20975:446;20885:543;;;:::o;21434:117::-;21488:8;21538:5;21532:4;21528:16;21507:37;;21434:117;;;;:::o;21557:169::-;21601:6;21634:51;21682:1;21678:6;21670:5;21667:1;21663:13;21634:51;:::i;:::-;21630:56;21715:4;21709;21705:15;21695:25;;21608:118;21557:169;;;;:::o;21731:295::-;21807:4;21953:29;21978:3;21972:4;21953:29;:::i;:::-;21945:37;;22015:3;22012:1;22008:11;22002:4;21999:21;21991:29;;21731:295;;;;:::o;22031:1395::-;22148:37;22181:3;22148:37;:::i;:::-;22250:18;22242:6;22239:30;22236:56;;;22272:18;;:::i;:::-;22236:56;22316:38;22348:4;22342:11;22316:38;:::i;:::-;22401:67;22461:6;22453;22447:4;22401:67;:::i;:::-;22495:1;22519:4;22506:17;;22551:2;22543:6;22540:14;22568:1;22563:618;;;;23225:1;23242:6;23239:77;;;23291:9;23286:3;23282:19;23276:26;23267:35;;23239:77;23342:67;23402:6;23395:5;23342:67;:::i;:::-;23336:4;23329:81;23198:222;22533:887;;22563:618;22615:4;22611:9;22603:6;22599:22;22649:37;22681:4;22649:37;:::i;:::-;22708:1;22722:208;22736:7;22733:1;22730:14;22722:208;;;22815:9;22810:3;22806:19;22800:26;22792:6;22785:42;22866:1;22858:6;22854:14;22844:24;;22913:2;22902:9;22898:18;22885:31;;22759:4;22756:1;22752:12;22747:17;;22722:208;;;22958:6;22949:7;22946:19;22943:179;;;23016:9;23011:3;23007:19;23001:26;23059:48;23101:4;23093:6;23089:17;23078:9;23059:48;:::i;:::-;23051:6;23044:64;22966:156;22943:179;23168:1;23164;23156:6;23152:14;23148:22;23142:4;23135:36;22570:611;;;22533:887;;22123:1303;;;22031:1395;;:::o;23432:98::-;23483:6;23517:5;23511:12;23501:22;;23432:98;;;:::o;23536:147::-;23637:11;23674:3;23659:18;;23536:147;;;;:::o;23689:386::-;23793:3;23821:38;23853:5;23821:38;:::i;:::-;23875:88;23956:6;23951:3;23875:88;:::i;:::-;23868:95;;23972:65;24030:6;24025:3;24018:4;24011:5;24007:16;23972:65;:::i;:::-;24062:6;24057:3;24053:16;24046:23;;23797:278;23689:386;;;;:::o;24081:271::-;24211:3;24233:93;24322:3;24313:6;24233:93;:::i;:::-;24226:100;;24343:3;24336:10;;24081:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2475000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2992",
								"burnFee()": "2535",
								"burnWallet()": "2529",
								"decimals()": "406",
								"initialize()": "infinite",
								"isFeeExempt(address)": "2923",
								"liquidityFee()": "2536",
								"liquidityWallet()": "2597",
								"name()": "infinite",
								"owner()": "2634",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalFee()": "infinite",
								"totalSupply()": "2597",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateFeeExemption(address,bool)": "infinite",
								"updateWallets(address,address,address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"utilityFee()": "2469",
								"utilityWallet()": "2575"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 614,
									"end": 615,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 589,
									"end": 615,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 589,
									"end": 615,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 672,
									"end": 673,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 644,
									"end": 673,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 644,
									"end": 673,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 732,
									"end": 733,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 702,
									"end": 733,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 702,
									"end": 733,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "492"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 4883,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ba0a1f7f82d3f338b53ddf2f484e756acaca96f314577e018310bca068d21a664736f6c634300081a0033",
									".code": [
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "AD3CB1CC"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "DCCD8BD2"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "DCCD8BD2"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "DD62ED3E"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "FCE589D8"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "AD3CB1CC"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "BF4CC52B"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "D4698016"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "8129FC1C"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "98118CB4"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "4F1EF286"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "4F1EF286"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "52D1902D"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "5E4043E9"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "313CE567"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "3F4218E0"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "6228749"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "147C9F6D"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "1DF4CCFC"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 571,
											"end": 4883,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 411,
											"end": 436,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 411,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 411,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 4361,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4361,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3877,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3877,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "tag",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 972,
											"end": 1083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "tag",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 972,
											"end": 1083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "tag",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 852,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 852,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 852,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 852,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 3913,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 3913,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3497,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 1095,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2715,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2715,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 702,
											"end": 733,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "116"
										},
										{
											"begin": 702,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "tag",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 702,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "tag",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 443,
											"end": 471,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "tag",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 443,
											"end": 471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "tag",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 443,
											"end": 471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "tag",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "tag",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 478,
											"end": 508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "tag",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "134"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 478,
											"end": 508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "tag",
											"source": 16,
											"value": "134"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "tag",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 644,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "tag",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 644,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "tag",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3772,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3772,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 615,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "tag",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 589,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "tag",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 589,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "tag",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 411,
											"end": 436,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 411,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2792,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5293,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5296,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5296,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5327,
											"end": 5332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5341,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5343,
											"end": 5348,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5318,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5370,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2586,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4527,
											"end": 4552,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4527,
											"end": 4538,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4527,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4527,
											"end": 4552,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4527,
											"end": 4552,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 4519,
											"end": 4583,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 4519,
											"end": 4583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4628,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4602,
											"end": 4630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4602,
											"end": 4616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4602,
											"end": 4630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4602,
											"end": 4630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4602,
											"end": 4630,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 4594,
											"end": 4664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 4594,
											"end": 4664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4711,
											"end": 4712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4683,
											"end": 4713,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4683,
											"end": 4699,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4683,
											"end": 4713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4683,
											"end": 4713,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4683,
											"end": 4713,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 4675,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 4675,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4775,
											"end": 4786,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4772,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4786,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4813,
											"end": 4827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4797,
											"end": 4810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4827,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4856,
											"end": 4872,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 4838,
											"end": 4853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3970,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3973,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3973,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 3991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 3991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4001,
											"end": 4022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4001,
											"end": 4022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4001,
											"end": 4022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1013,
											"end": 1020,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1047,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 1040,
											"end": 1047,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 1040,
											"end": 1060,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1060,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 1040,
											"end": 1060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1060,
											"name": "tag",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 1040,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 1040,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "tag",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1033,
											"end": 1075,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1033,
											"end": 1075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 972,
											"end": 1083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6056,
											"end": 6060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6090,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6090,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6134,
											"end": 6141,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6112,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6112,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6169,
											"end": 6173,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6177,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6184,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 6159,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 852,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 852,
											"end": 895,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 852,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2586,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4009,
											"end": 4030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4009,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4009,
											"end": 4030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4009,
											"end": 4030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4009,
											"end": 4030,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 4001,
											"end": 4058,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4001,
											"end": 4058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4092,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4088,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4098,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 4106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4196,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4196,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3497,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2586,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3592,
											"end": 3593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3565,
											"end": 3595,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3565,
											"end": 3595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "tag",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 1095,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "43726F636F64696C6F20426F6D62657264696E6F000000000000000000000000"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "424F4D42455244494E4F00000000000000000000000000000000000000000000"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 1147,
											"end": 1197,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 1147,
											"end": 1197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1208,
											"end": 1234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 1223,
											"end": 1233,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1208,
											"end": 1222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 1208,
											"end": 1234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1208,
											"end": 1234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 1208,
											"end": 1234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 1364,
											"end": 1386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 1364,
											"end": 1388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 1364,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 1464,
											"end": 1474,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 776,
											"end": 796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 1458,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 1458,
											"end": 1491,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 1458,
											"end": 1491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "77DA53E0865F111B35912D400822BA89401CA64"
										},
										{
											"begin": 1607,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1617,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1662,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1689,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "775AFE34497A187350607D669C097DD9F6DDFAAD"
										},
										{
											"begin": 1673,
											"end": 1686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1673,
											"end": 1686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1731,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1760,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "D42509A701A192CE204E5FB1BE4FBA0C8B08A982"
										},
										{
											"begin": 1742,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1742,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1916,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1890,
											"end": 1901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1912,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 1920,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1960,
											"end": 1964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1931,
											"end": 1942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1955,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2811,
											"end": 2831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2831,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2811,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3051,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3051,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 733,
											"name": "tag",
											"source": 16,
											"value": "116"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 702,
											"end": 733,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 702,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4554,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4554,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4586,
											"end": 4591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4576,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 4624,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 443,
											"end": 471,
											"name": "tag",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 471,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 443,
											"end": 471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "tag",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 478,
											"end": 508,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 478,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "tag",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 644,
											"end": 673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4813,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4813,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4848,
											"end": 4861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4867,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4869,
											"end": 4876,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2586,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3860,
											"end": 3882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3860,
											"end": 3882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3856,
											"end": 3955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3909,
											"end": 3940,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3940,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3856,
											"end": 3955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3987,
											"end": 3995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3968,
											"end": 3996,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3968,
											"end": 3996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 615,
											"name": "tag",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 589,
											"end": 615,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 589,
											"end": 615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 10118,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 9990,
											"end": 10118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10074,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10083,
											"end": 10088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10099,
											"end": 10104,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10106,
											"end": 10110,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10074,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 10074,
											"end": 10111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10074,
											"end": 10111,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10074,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9990,
											"end": 10118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9990,
											"end": 10118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9990,
											"end": 10118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9990,
											"end": 10118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2958,
											"end": 3136,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2958,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3032,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3021,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3044,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3017,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3017,
											"end": 3126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3098,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3098,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3098,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3098,
											"end": 3110,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3098,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3071,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3111,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3017,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3017,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2958,
											"end": 3136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11734,
											"end": 12210,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 11734,
											"end": 12210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11833,
											"end": 11857,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11860,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 11870,
											"end": 11875,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11877,
											"end": 11884,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11860,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 11860,
											"end": 11885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11860,
											"end": 11885,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 11860,
											"end": 11885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11833,
											"end": 11885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11833,
											"end": 11885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11918,
											"end": 11935,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11899,
											"end": 11915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11899,
											"end": 11935,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11895,
											"end": 12204,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11895,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 11895,
											"end": 12204,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11974,
											"end": 11979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11955,
											"end": 11971,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11955,
											"end": 11979,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11951,
											"end": 12081,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11951,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 11951,
											"end": 12081,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12033,
											"end": 12040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12042,
											"end": 12058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12060,
											"end": 12065,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 12006,
											"end": 12066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12066,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11951,
											"end": 12081,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 11951,
											"end": 12081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12122,
											"end": 12179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 12131,
											"end": 12136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12138,
											"end": 12145,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12166,
											"end": 12171,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12147,
											"end": 12163,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12147,
											"end": 12171,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12173,
											"end": 12178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12122,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 12122,
											"end": 12179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12122,
											"end": 12179,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 12122,
											"end": 12179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11895,
											"end": 12204,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 11895,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11823,
											"end": 12210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 12210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 12210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 12210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 12210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2464,
											"end": 3480,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 2464,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2578,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2585,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2612,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 2567,
											"end": 2612,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2612,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2601,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2612,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 2567,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 3473,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 2563,
											"end": 3473,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2712,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2745,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2747,
											"end": 2753,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2712,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 2712,
											"end": 2754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2712,
											"end": 2754,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2712,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 2563,
											"end": 3473,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 3473,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 2563,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2842,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2855,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 2855,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2855,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2855,
											"end": 2865,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 2855,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2846,
											"end": 2852,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2846,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 2846,
											"end": 2865,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2846,
											"end": 2865,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2846,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 2846,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2846,
											"end": 2865,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 2846,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2845,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 2845,
											"end": 2872,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2845,
											"end": 2872,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2845,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 2845,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2845,
											"end": 2872,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 2845,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2872,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2932,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2918,
											"end": 2925,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2918,
											"end": 2925,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2915,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 2909,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 2908,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2887,
											"end": 2932,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2887,
											"end": 2932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 2998,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2981,
											"end": 2991,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2981,
											"end": 2991,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2972,
											"end": 2978,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2972,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2972,
											"end": 2991,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2972,
											"end": 2991,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2972,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 2972,
											"end": 2991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2972,
											"end": 2991,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2972,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2971,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2971,
											"end": 2998,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2971,
											"end": 2998,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2971,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 2971,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2971,
											"end": 2998,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2971,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2947,
											"end": 2998,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2947,
											"end": 2998,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3036,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3050,
											"end": 3060,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3047,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 3039,
											"end": 3060,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3060,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 3039,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3060,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 3039,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 3039,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3076,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3146,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3162,
											"end": 3168,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3192,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3146,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 3146,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3146,
											"end": 3193,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3146,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3208,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3232,
											"end": 3245,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3208,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 3208,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3208,
											"end": 3261,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 3208,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3276,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3317,
											"end": 3332,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3276,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 3276,
											"end": 3333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3276,
											"end": 3333,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 3276,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 3424,
											"end": 3430,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3432,
											"end": 3441,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3452,
											"end": 3460,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3449,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 3443,
											"end": 3460,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 3443,
											"end": 3460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3460,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 3443,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3408,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 3408,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2772,
											"end": 3473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2772,
											"end": 3473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2772,
											"end": 3473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2772,
											"end": 3473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 3473,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 2563,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2464,
											"end": 3480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2464,
											"end": 3480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2464,
											"end": 3480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2464,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "492"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "492"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 4728,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 4728,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2160,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 2076,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2586,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6131,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6535,
											"end": 6552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6493,
											"end": 6553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6292,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6384,
											"end": 6401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6354,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6184,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5096,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "492"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4446,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4178,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 4282,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4302,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 4282,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4416,
											"end": 4424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4435,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 2388,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2402,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 2365,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2184,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1998,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2095,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 2075,
											"end": 2135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 2075,
											"end": 2135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2145,
											"end": 2177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2145,
											"end": 2177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8722,
											"end": 8930,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 8722,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8811,
											"end": 8812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8799,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8788,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 8788,
											"end": 8879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8865,
											"end": 8866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 8836,
											"end": 8868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8788,
											"end": 8879,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 8788,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8888,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 8904,
											"end": 8905,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8915,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8917,
											"end": 8922,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8888,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 8888,
											"end": 8923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8888,
											"end": 8923,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 8888,
											"end": 8923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8722,
											"end": 8930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8722,
											"end": 8930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8722,
											"end": 8930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1281,
											"end": 1456,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1281,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1400,
											"end": 1432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10965,
											"end": 11452,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 10965,
											"end": 11452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 11098,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 11098,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11147,
											"end": 11148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11130,
											"end": 11149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11130,
											"end": 11149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11130,
											"end": 11135,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11130,
											"end": 11149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11130,
											"end": 11149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11130,
											"end": 11149,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11126,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 11126,
											"end": 11215,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11201,
											"end": 11202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 11172,
											"end": 11204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11126,
											"end": 11215,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 11126,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11247,
											"end": 11248,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11228,
											"end": 11235,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 11224,
											"end": 11314,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11300,
											"end": 11301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 11272,
											"end": 11303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11303,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11314,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 11224,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11355,
											"end": 11360,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11336,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11323,
											"end": 11336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11337,
											"end": 11342,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11344,
											"end": 11351,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 11352,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11360,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11374,
											"end": 11383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11370,
											"end": 11446,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11370,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 11370,
											"end": 11446,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11420,
											"end": 11427,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11413,
											"end": 11418,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11429,
											"end": 11434,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 11404,
											"end": 11435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11435,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11370,
											"end": 11446,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 11370,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10965,
											"end": 11452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10965,
											"end": 11452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10965,
											"end": 11452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10965,
											"end": 11452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10965,
											"end": 11452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6894,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 6586,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6681,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 6673,
											"end": 6759,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6745,
											"end": 6746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 6718,
											"end": 6748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6748,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6759,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 6673,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6772,
											"end": 6774,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6768,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 6768,
											"end": 6854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 6841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 6811,
											"end": 6843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6843,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6768,
											"end": 6854,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 6768,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 6871,
											"end": 6875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 6879,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 6886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 6863,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6887,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 6863,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 2553,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2553,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2591,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 2581,
											"end": 2596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 2606,
											"end": 2625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 8379,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 7209,
											"end": 8379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 7319,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7319,
											"end": 7337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7319,
											"end": 7337,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 7319,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7337,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7337,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7355,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7347,
											"end": 7893,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7501,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7487,
											"end": 7501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7487,
											"end": 7510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 7347,
											"end": 7893,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7893,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7347,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7541,
											"end": 7560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7574,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7579,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7580,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7541,
											"end": 7580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7541,
											"end": 7580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7612,
											"end": 7617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7598,
											"end": 7609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7598,
											"end": 7617,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7709,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 7594,
											"end": 7709,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7673,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7675,
											"end": 7686,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7688,
											"end": 7693,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 7644,
											"end": 7694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7694,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7709,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 7594,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7849,
											"end": 7860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7849,
											"end": 7868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7829,
											"end": 7840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7845,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7868,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7527,
											"end": 7893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7893,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 7347,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7923,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7923,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7909,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7923,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7923,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7923,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 7903,
											"end": 8332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8088,
											"end": 8093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8084,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8070,
											"end": 8084,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 7903,
											"end": 8332,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8332,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 7903,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8302,
											"end": 8307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8294,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8295,
											"end": 8297,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8332,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 7903,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8362,
											"end": 8364,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8356,
											"end": 8360,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 8347,
											"end": 8372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8372,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 8379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 8379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 8379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 8379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 8379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 12,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 4933,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 593,
											"end": 692,
											"name": "tag",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 593,
											"end": 692,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 645,
											"end": 651,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 684,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 673,
											"end": 685,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 663,
											"end": 685,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 663,
											"end": 685,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 593,
											"end": 692,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 593,
											"end": 692,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 593,
											"end": 692,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 593,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 698,
											"end": 867,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 698,
											"end": 867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 782,
											"end": 793,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 811,
											"end": 814,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 804,
											"end": 823,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 856,
											"end": 860,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 854,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 847,
											"end": 861,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 832,
											"end": 861,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 832,
											"end": 861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 698,
											"end": 867,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 698,
											"end": 867,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 698,
											"end": 867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 698,
											"end": 867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 698,
											"end": 867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "tag",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 952,
											"end": 955,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 946,
											"end": 969,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 989,
											"end": 992,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 873,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1059,
											"end": 1065,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1106,
											"end": 1113,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1090,
											"end": 1104,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1114,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1076,
											"end": 1114,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1076,
											"end": 1114,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1018,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1214,
											"end": 1217,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 1242,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "tag",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 1297,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1290,
											"end": 1368,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1290,
											"end": 1368,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1430,
											"end": 1433,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1423,
											"end": 1427,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1428,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 1377,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 1467,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "tag",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1462,
											"end": 1465,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1458,
											"end": 1497,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1497,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1218,
											"end": 1503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1126,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1622,
											"end": 1626,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1662,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1645,
											"end": 1663,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1703,
											"end": 1707,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1693,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1697,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1673,
											"end": 1720,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 1737,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "tag",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1815,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1815,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1828,
											"end": 1903,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 1828,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1897,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1828,
											"end": 1903,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1828,
											"end": 1903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "tag",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2008,
											"end": 2020,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2032,
											"end": 2149,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 2032,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2131,
											"end": 2143,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "tag",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 2228,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "tag",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2218,
											"end": 2253,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2257,
											"end": 2269,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2155,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2354,
											"end": 2374,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 2410,
											"end": 2415,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 2383,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2283,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2428,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 4421,
											"end": 4426,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 4403,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "tag",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4398,
											"end": 4401,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4391,
											"end": 4428,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4316,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 4652,
											"end": 4653,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4650,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 4584,
											"end": 4655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "tag",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 5287,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 4668,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4745,
											"end": 4751,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4759,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4761,
											"end": 4767,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4812,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4807,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4785,
											"end": 4808,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4781,
											"end": 4813,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4778,
											"end": 4897,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4778,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 4778,
											"end": 4897,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4816,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 4816,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 4816,
											"end": 4895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4816,
											"end": 4895,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 4816,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4778,
											"end": 4897,
											"name": "tag",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 4778,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4936,
											"end": 4937,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 5006,
											"end": 5013,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4997,
											"end": 5003,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4982,
											"end": 5004,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4961,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 4961,
											"end": 5014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4961,
											"end": 5014,
											"name": "tag",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 4961,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4951,
											"end": 5014,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4951,
											"end": 5014,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4907,
											"end": 5024,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 5134,
											"end": 5141,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5125,
											"end": 5131,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5114,
											"end": 5123,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5110,
											"end": 5132,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5089,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 5089,
											"end": 5142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5089,
											"end": 5142,
											"name": "tag",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 5089,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5079,
											"end": 5142,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5079,
											"end": 5142,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5034,
											"end": 5152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5217,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 5262,
											"end": 5269,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5253,
											"end": 5259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5251,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5238,
											"end": 5260,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5217,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 5217,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5217,
											"end": 5270,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 5217,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5270,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5270,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5162,
											"end": 5280,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 5287,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 5287,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 5287,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 5287,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 5287,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 5287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5379,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 5293,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5328,
											"end": 5335,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5372,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 5361,
											"end": 5366,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5357,
											"end": 5373,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5346,
											"end": 5373,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5346,
											"end": 5373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5379,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5379,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5379,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5385,
											"end": 5497,
											"name": "tag",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 5385,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 5484,
											"end": 5489,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 5468,
											"end": 5490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5463,
											"end": 5466,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5456,
											"end": 5491,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5385,
											"end": 5497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5385,
											"end": 5497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5385,
											"end": 5497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5503,
											"end": 5717,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 5503,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5592,
											"end": 5596,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5632,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5615,
											"end": 5633,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5705,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5692,
											"end": 5709,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5683,
											"end": 5689,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 5643,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5710,
											"name": "tag",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 5643,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5503,
											"end": 5717,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5503,
											"end": 5717,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5503,
											"end": 5717,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5503,
											"end": 5717,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5503,
											"end": 5717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5723,
											"end": 6052,
											"name": "tag",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 5723,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5833,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5819,
											"end": 5828,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5810,
											"end": 5817,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5806,
											"end": 5829,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5802,
											"end": 5834,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5799,
											"end": 5918,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5799,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 5799,
											"end": 5918,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5837,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 5837,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 5837,
											"end": 5916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5837,
											"end": 5916,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 5837,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5799,
											"end": 5918,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 5799,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5957,
											"end": 5958,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 6027,
											"end": 6034,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6024,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6007,
											"end": 6016,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6003,
											"end": 6025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 5982,
											"end": 6035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6035,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 5982,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5972,
											"end": 6035,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5972,
											"end": 6035,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5928,
											"end": 6045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5723,
											"end": 6052,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5723,
											"end": 6052,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5723,
											"end": 6052,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5723,
											"end": 6052,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5723,
											"end": 6052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6058,
											"end": 6175,
											"name": "tag",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 6058,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6167,
											"end": 6168,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6165,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6157,
											"end": 6169,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6181,
											"end": 6298,
											"name": "tag",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 6181,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6291,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6280,
											"end": 6292,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6304,
											"end": 6484,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 6304,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6352,
											"end": 6429,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6342,
											"end": 6430,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6449,
											"end": 6453,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 6446,
											"end": 6447,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6439,
											"end": 6454,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6473,
											"end": 6477,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6478,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6771,
											"name": "tag",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 6490,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6573,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 6595,
											"end": 6599,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6573,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 6573,
											"end": 6600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6573,
											"end": 6600,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 6573,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6561,
											"end": 6601,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6703,
											"end": 6709,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6691,
											"end": 6701,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6688,
											"end": 6710,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6655,
											"end": 6665,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6652,
											"end": 6686,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6649,
											"end": 6711,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6646,
											"end": 6734,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6646,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 6646,
											"end": 6734,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 6714,
											"end": 6732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "tag",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6646,
											"end": 6734,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 6646,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6754,
											"end": 6764,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6750,
											"end": 6752,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6743,
											"end": 6765,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6533,
											"end": 6771,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6771,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6771,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6777,
											"end": 6906,
											"name": "tag",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 6777,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 6838,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6828,
											"end": 6858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6828,
											"end": 6858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6867,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6867,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 6867,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6867,
											"end": 6900,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 6867,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6777,
											"end": 6906,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6777,
											"end": 6906,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6777,
											"end": 6906,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6777,
											"end": 6906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 7219,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 6912,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7081,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7055,
											"end": 7061,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7052,
											"end": 7082,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7049,
											"end": 7105,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7049,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 7049,
											"end": 7105,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 7085,
											"end": 7103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "tag",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7049,
											"end": 7105,
											"name": "tag",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 7049,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7123,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 7145,
											"end": 7151,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7123,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 7123,
											"end": 7152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7123,
											"end": 7152,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 7123,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7115,
											"end": 7152,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7115,
											"end": 7152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7207,
											"end": 7211,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7205,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7197,
											"end": 7212,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7189,
											"end": 7212,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7189,
											"end": 7212,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 7219,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 7219,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 7219,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 7219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7373,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 7225,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7318,
											"end": 7321,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7313,
											"end": 7316,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7300,
											"end": 7330,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7355,
											"end": 7361,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7350,
											"end": 7353,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7346,
											"end": 7362,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7379,
											"end": 7802,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 7379,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7456,
											"end": 7461,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7481,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 7497,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 7538,
											"end": 7544,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7497,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 7497,
											"end": 7545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7497,
											"end": 7545,
											"name": "tag",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 7497,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 7481,
											"end": 7546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7546,
											"name": "tag",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 7481,
											"end": 7546,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7472,
											"end": 7546,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7472,
											"end": 7546,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7562,
											"end": 7567,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7555,
											"end": 7576,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7607,
											"end": 7611,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7600,
											"end": 7605,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7596,
											"end": 7612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7631,
											"end": 7634,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7627,
											"end": 7643,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7624,
											"end": 7649,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7621,
											"end": 7733,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7621,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 7621,
											"end": 7733,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7652,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 7652,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 7652,
											"end": 7731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7652,
											"end": 7731,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 7652,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7621,
											"end": 7733,
											"name": "tag",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 7621,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7742,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 7789,
											"end": 7795,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7784,
											"end": 7787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7779,
											"end": 7782,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7742,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 7742,
											"end": 7796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7742,
											"end": 7796,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 7742,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7462,
											"end": 7802,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7379,
											"end": 7802,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7379,
											"end": 7802,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7379,
											"end": 7802,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7379,
											"end": 7802,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7379,
											"end": 7802,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7379,
											"end": 7802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7821,
											"end": 8159,
											"name": "tag",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 7821,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7876,
											"end": 7881,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7918,
											"end": 7922,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7902,
											"end": 7929,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7892,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 7892,
											"end": 8014,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7933,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 7933,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 7933,
											"end": 8012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7933,
											"end": 8012,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 7933,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7892,
											"end": 8014,
											"name": "tag",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 7892,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8050,
											"end": 8056,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8037,
											"end": 8057,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8075,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 8149,
											"end": 8152,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8141,
											"end": 8147,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8126,
											"end": 8132,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8122,
											"end": 8139,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8075,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 8075,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8075,
											"end": 8153,
											"name": "tag",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 8075,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8066,
											"end": 8153,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8066,
											"end": 8153,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7882,
											"end": 8159,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7821,
											"end": 8159,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7821,
											"end": 8159,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7821,
											"end": 8159,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7821,
											"end": 8159,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7821,
											"end": 8159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8165,
											"end": 8817,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 8165,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8242,
											"end": 8248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8250,
											"end": 8256,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8287,
											"end": 8296,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8278,
											"end": 8285,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8274,
											"end": 8297,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8270,
											"end": 8302,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8267,
											"end": 8386,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8267,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 8267,
											"end": 8386,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8305,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 8305,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 8305,
											"end": 8384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8305,
											"end": 8384,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 8305,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8267,
											"end": 8386,
											"name": "tag",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 8267,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 8495,
											"end": 8502,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8486,
											"end": 8492,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8475,
											"end": 8484,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8471,
											"end": 8493,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8450,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 8450,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8450,
											"end": 8503,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 8450,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8440,
											"end": 8503,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8440,
											"end": 8503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8396,
											"end": 8513,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8580,
											"end": 8582,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8569,
											"end": 8578,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8552,
											"end": 8584,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8603,
											"end": 8609,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8600,
											"end": 8630,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8597,
											"end": 8714,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8597,
											"end": 8714,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 8597,
											"end": 8714,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8633,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 8633,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 8633,
											"end": 8712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8633,
											"end": 8712,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 8633,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8597,
											"end": 8714,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 8597,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8738,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 8792,
											"end": 8799,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8772,
											"end": 8781,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8768,
											"end": 8790,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8738,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 8738,
											"end": 8800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8738,
											"end": 8800,
											"name": "tag",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 8738,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8523,
											"end": 8810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8165,
											"end": 8817,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8165,
											"end": 8817,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8165,
											"end": 8817,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8165,
											"end": 8817,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8165,
											"end": 8817,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8165,
											"end": 8817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8823,
											"end": 8900,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 8823,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8860,
											"end": 8867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8889,
											"end": 8894,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8878,
											"end": 8894,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8878,
											"end": 8894,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8823,
											"end": 8900,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8823,
											"end": 8900,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8823,
											"end": 8900,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8823,
											"end": 8900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8906,
											"end": 9024,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 8906,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8993,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 9011,
											"end": 9016,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8993,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 8993,
											"end": 9017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8993,
											"end": 9017,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 8993,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8988,
											"end": 8991,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8981,
											"end": 9018,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8906,
											"end": 9024,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8906,
											"end": 9024,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8906,
											"end": 9024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9030,
											"end": 9252,
											"name": "tag",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 9030,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9123,
											"end": 9127,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9163,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9150,
											"end": 9159,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9146,
											"end": 9164,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9138,
											"end": 9164,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9138,
											"end": 9164,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9174,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 9242,
											"end": 9243,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9227,
											"end": 9244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9218,
											"end": 9224,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9174,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 9174,
											"end": 9245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9174,
											"end": 9245,
											"name": "tag",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 9174,
											"end": 9245,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9030,
											"end": 9252,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9030,
											"end": 9252,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9030,
											"end": 9252,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9030,
											"end": 9252,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9030,
											"end": 9252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9258,
											"end": 9374,
											"name": "tag",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 9258,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9328,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 9343,
											"end": 9348,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9328,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 9328,
											"end": 9349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9328,
											"end": 9349,
											"name": "tag",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 9328,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9321,
											"end": 9326,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9318,
											"end": 9350,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 9308,
											"end": 9368,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9362,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9368,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 9308,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9258,
											"end": 9374,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9258,
											"end": 9374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9380,
											"end": 9513,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 9380,
											"end": 9513,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9423,
											"end": 9428,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9467,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9448,
											"end": 9468,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9439,
											"end": 9468,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9439,
											"end": 9468,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9477,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 9501,
											"end": 9506,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9477,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 9477,
											"end": 9507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9477,
											"end": 9507,
											"name": "tag",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 9477,
											"end": 9507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9380,
											"end": 9513,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9380,
											"end": 9513,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9380,
											"end": 9513,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9380,
											"end": 9513,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9380,
											"end": 9513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9519,
											"end": 9987,
											"name": "tag",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 9519,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9584,
											"end": 9590,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9592,
											"end": 9598,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9641,
											"end": 9643,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9629,
											"end": 9638,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9620,
											"end": 9627,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9616,
											"end": 9639,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9612,
											"end": 9644,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9609,
											"end": 9728,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9609,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 9609,
											"end": 9728,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9647,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 9647,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 9647,
											"end": 9726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9647,
											"end": 9726,
											"name": "tag",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 9647,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9609,
											"end": 9728,
											"name": "tag",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 9609,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9767,
											"end": 9768,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 9837,
											"end": 9844,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9828,
											"end": 9834,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9817,
											"end": 9826,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9813,
											"end": 9835,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9792,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 9792,
											"end": 9845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9792,
											"end": 9845,
											"name": "tag",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 9792,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9782,
											"end": 9845,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9782,
											"end": 9845,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9738,
											"end": 9855,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9894,
											"end": 9896,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9920,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 9962,
											"end": 9969,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9953,
											"end": 9959,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9942,
											"end": 9951,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9938,
											"end": 9960,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9920,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 9920,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9920,
											"end": 9970,
											"name": "tag",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 9920,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9910,
											"end": 9970,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9910,
											"end": 9970,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9865,
											"end": 9980,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9519,
											"end": 9987,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9519,
											"end": 9987,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9519,
											"end": 9987,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9519,
											"end": 9987,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9519,
											"end": 9987,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9519,
											"end": 9987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10467,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 9993,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10069,
											"end": 10075,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10118,
											"end": 10120,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10106,
											"end": 10115,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10093,
											"end": 10116,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10089,
											"end": 10121,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10086,
											"end": 10205,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10086,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 10086,
											"end": 10205,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10124,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 10124,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 10124,
											"end": 10203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10124,
											"end": 10203,
											"name": "tag",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 10124,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10086,
											"end": 10205,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 10086,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10244,
											"end": 10245,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 10314,
											"end": 10321,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10305,
											"end": 10311,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10303,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10290,
											"end": 10312,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 10269,
											"end": 10322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10259,
											"end": 10322,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10259,
											"end": 10322,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10215,
											"end": 10332,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10397,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 10442,
											"end": 10449,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10433,
											"end": 10439,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10422,
											"end": 10431,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10418,
											"end": 10440,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10397,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 10397,
											"end": 10450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10397,
											"end": 10450,
											"name": "tag",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 10397,
											"end": 10450,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10387,
											"end": 10450,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10387,
											"end": 10450,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10342,
											"end": 10460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10467,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10467,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10467,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10473,
											"end": 10653,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 10473,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10521,
											"end": 10598,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10518,
											"end": 10519,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10599,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10618,
											"end": 10622,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 10615,
											"end": 10616,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 10608,
											"end": 10623,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10642,
											"end": 10646,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10639,
											"end": 10640,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10632,
											"end": 10647,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10659,
											"end": 10979,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 10659,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10703,
											"end": 10709,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10741,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 10734,
											"end": 10738,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10730,
											"end": 10742,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 10720,
											"end": 10742,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10720,
											"end": 10742,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10787,
											"end": 10788,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10781,
											"end": 10785,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10777,
											"end": 10789,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10798,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 10798,
											"end": 10879,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10864,
											"end": 10868,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10852,
											"end": 10869,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10842,
											"end": 10869,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10842,
											"end": 10869,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10798,
											"end": 10879,
											"name": "tag",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 10798,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10926,
											"end": 10928,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10918,
											"end": 10924,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10915,
											"end": 10929,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10895,
											"end": 10913,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10892,
											"end": 10930,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10889,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 10889,
											"end": 10973,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 10945,
											"end": 10963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "tag",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10889,
											"end": 10973,
											"name": "tag",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 10889,
											"end": 10973,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10710,
											"end": 10979,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10659,
											"end": 10979,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10659,
											"end": 10979,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10659,
											"end": 10979,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10659,
											"end": 10979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10985,
											"end": 11161,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 10985,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11153,
											"name": "PUSH",
											"source": 17,
											"value": "4275726E2077616C6C65742063616E6E6F74206265207A65726F000000000000"
										},
										{
											"begin": 11121,
											"end": 11122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11119,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11102,
											"end": 11154,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10985,
											"end": 11161,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10985,
											"end": 11161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11309,
											"end": 11312,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 11394,
											"end": 11396,
											"name": "PUSH",
											"source": 17,
											"value": "1A"
										},
										{
											"begin": 11389,
											"end": 11392,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 11330,
											"end": 11397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "tag",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 11397,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 11397,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 11495,
											"end": 11498,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 11406,
											"end": 11499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11524,
											"end": 11526,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11519,
											"end": 11522,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11515,
											"end": 11527,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11167,
											"end": 11533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11705,
											"end": 11709,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11743,
											"end": 11745,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11732,
											"end": 11741,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11728,
											"end": 11746,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11720,
											"end": 11746,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11720,
											"end": 11746,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11792,
											"end": 11801,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11786,
											"end": 11790,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11782,
											"end": 11802,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11778,
											"end": 11779,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11767,
											"end": 11776,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11763,
											"end": 11780,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11756,
											"end": 11803,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11820,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 11946,
											"end": 11950,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11820,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 11820,
											"end": 11951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11820,
											"end": 11951,
											"name": "tag",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 11820,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11812,
											"end": 11951,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11812,
											"end": 11951,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11539,
											"end": 11958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11964,
											"end": 12143,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 11964,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12104,
											"end": 12135,
											"name": "PUSH",
											"source": 17,
											"value": "5574696C6974792077616C6C65742063616E6E6F74206265207A65726F000000"
										},
										{
											"begin": 12100,
											"end": 12101,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12092,
											"end": 12098,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12088,
											"end": 12102,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12081,
											"end": 12136,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11964,
											"end": 12143,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11964,
											"end": 12143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12291,
											"end": 12294,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12312,
											"end": 12379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 12376,
											"end": 12378,
											"name": "PUSH",
											"source": 17,
											"value": "1D"
										},
										{
											"begin": 12371,
											"end": 12374,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12312,
											"end": 12379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 12312,
											"end": 12379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12312,
											"end": 12379,
											"name": "tag",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 12312,
											"end": 12379,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12305,
											"end": 12379,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12305,
											"end": 12379,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12388,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 12477,
											"end": 12480,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12388,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 12388,
											"end": 12481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12388,
											"end": 12481,
											"name": "tag",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 12388,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12506,
											"end": 12508,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12501,
											"end": 12504,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12497,
											"end": 12509,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12490,
											"end": 12509,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12490,
											"end": 12509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12149,
											"end": 12515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "tag",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12687,
											"end": 12691,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12725,
											"end": 12727,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12710,
											"end": 12728,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12702,
											"end": 12728,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12702,
											"end": 12728,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12783,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12768,
											"end": 12772,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12760,
											"end": 12761,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12758,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12745,
											"end": 12762,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12738,
											"end": 12785,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12802,
											"end": 12933,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 12928,
											"end": 12932,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12802,
											"end": 12933,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 12802,
											"end": 12933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12802,
											"end": 12933,
											"name": "tag",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 12802,
											"end": 12933,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12794,
											"end": 12933,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12794,
											"end": 12933,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12521,
											"end": 12940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12946,
											"end": 13127,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 12946,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13086,
											"end": 13119,
											"name": "PUSH",
											"source": 17,
											"value": "4C69717569646974792077616C6C65742063616E6E6F74206265207A65726F00"
										},
										{
											"begin": 13082,
											"end": 13083,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13074,
											"end": 13080,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13084,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13063,
											"end": 13120,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12946,
											"end": 13127,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12946,
											"end": 13127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "tag",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13275,
											"end": 13278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13296,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 13360,
											"end": 13362,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 13355,
											"end": 13358,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13296,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 13296,
											"end": 13363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13296,
											"end": 13363,
											"name": "tag",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 13296,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13289,
											"end": 13363,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13289,
											"end": 13363,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13372,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 13461,
											"end": 13464,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13372,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 13372,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13372,
											"end": 13465,
											"name": "tag",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 13372,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13490,
											"end": 13492,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13485,
											"end": 13488,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13481,
											"end": 13493,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13474,
											"end": 13493,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13474,
											"end": 13493,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13133,
											"end": 13499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "tag",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13671,
											"end": 13675,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13709,
											"end": 13711,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13698,
											"end": 13707,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13694,
											"end": 13712,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13686,
											"end": 13712,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13686,
											"end": 13712,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13758,
											"end": 13767,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13752,
											"end": 13756,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13748,
											"end": 13768,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13744,
											"end": 13745,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13733,
											"end": 13742,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13729,
											"end": 13746,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13722,
											"end": 13769,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13786,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 13912,
											"end": 13916,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13786,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 13786,
											"end": 13917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13786,
											"end": 13917,
											"name": "tag",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 13786,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13778,
											"end": 13917,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13778,
											"end": 13917,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13505,
											"end": 13924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13930,
											"end": 14110,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 13930,
											"end": 14110,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13978,
											"end": 14055,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13975,
											"end": 13976,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 14056,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14075,
											"end": 14079,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 14072,
											"end": 14073,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 14065,
											"end": 14080,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14099,
											"end": 14103,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14096,
											"end": 14097,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14089,
											"end": 14104,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14116,
											"end": 14307,
											"name": "tag",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 14116,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14156,
											"end": 14159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14175,
											"end": 14195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 14193,
											"end": 14194,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14175,
											"end": 14195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 14175,
											"end": 14195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14175,
											"end": 14195,
											"name": "tag",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 14175,
											"end": 14195,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14170,
											"end": 14195,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14170,
											"end": 14195,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14209,
											"end": 14229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 14227,
											"end": 14228,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14209,
											"end": 14229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 14209,
											"end": 14229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14209,
											"end": 14229,
											"name": "tag",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 14209,
											"end": 14229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14204,
											"end": 14229,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14204,
											"end": 14229,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14252,
											"end": 14253,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14249,
											"end": 14250,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14245,
											"end": 14254,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14238,
											"end": 14254,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14238,
											"end": 14254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14273,
											"end": 14276,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14270,
											"end": 14271,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14267,
											"end": 14277,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14264,
											"end": 14300,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14264,
											"end": 14300,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 14264,
											"end": 14300,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14280,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 14280,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 14280,
											"end": 14298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14280,
											"end": 14298,
											"name": "tag",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 14280,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14264,
											"end": 14300,
											"name": "tag",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 14264,
											"end": 14300,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14116,
											"end": 14307,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14116,
											"end": 14307,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14116,
											"end": 14307,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14116,
											"end": 14307,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14116,
											"end": 14307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14313,
											"end": 14486,
											"name": "tag",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 14313,
											"end": 14486,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14453,
											"end": 14478,
											"name": "PUSH",
											"source": 17,
											"value": "496E76616C6964206163636F756E742061646472657373000000000000000000"
										},
										{
											"begin": 14449,
											"end": 14450,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14441,
											"end": 14447,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14437,
											"end": 14451,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14430,
											"end": 14479,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14313,
											"end": 14486,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14313,
											"end": 14486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14492,
											"end": 14858,
											"name": "tag",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 14492,
											"end": 14858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14634,
											"end": 14637,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14655,
											"end": 14722,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "656"
										},
										{
											"begin": 14719,
											"end": 14721,
											"name": "PUSH",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 14714,
											"end": 14717,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14655,
											"end": 14722,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 14655,
											"end": 14722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14655,
											"end": 14722,
											"name": "tag",
											"source": 17,
											"value": "656"
										},
										{
											"begin": 14655,
											"end": 14722,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14648,
											"end": 14722,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14648,
											"end": 14722,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14731,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 14820,
											"end": 14823,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14731,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 14731,
											"end": 14824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14731,
											"end": 14824,
											"name": "tag",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 14731,
											"end": 14824,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14849,
											"end": 14851,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14847,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14840,
											"end": 14852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14833,
											"end": 14852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14833,
											"end": 14852,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14492,
											"end": 14858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14492,
											"end": 14858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14492,
											"end": 14858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14492,
											"end": 14858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14864,
											"end": 15283,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 14864,
											"end": 15283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15030,
											"end": 15034,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15068,
											"end": 15070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15057,
											"end": 15066,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15053,
											"end": 15071,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15045,
											"end": 15071,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15045,
											"end": 15071,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15117,
											"end": 15126,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15111,
											"end": 15115,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15107,
											"end": 15127,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15103,
											"end": 15104,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15092,
											"end": 15101,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15088,
											"end": 15105,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15081,
											"end": 15128,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15145,
											"end": 15276,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 15271,
											"end": 15275,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15145,
											"end": 15276,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 15145,
											"end": 15276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15145,
											"end": 15276,
											"name": "tag",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 15145,
											"end": 15276,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15137,
											"end": 15276,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15137,
											"end": 15276,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14864,
											"end": 15283,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14864,
											"end": 15283,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14864,
											"end": 15283,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14864,
											"end": 15283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15289,
											"end": 15374,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 15289,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15334,
											"end": 15341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15363,
											"end": 15368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15289,
											"end": 15374,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15289,
											"end": 15374,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15289,
											"end": 15374,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15289,
											"end": 15374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15380,
											"end": 15481,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 15380,
											"end": 15481,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15416,
											"end": 15423,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15456,
											"end": 15474,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15449,
											"end": 15454,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15445,
											"end": 15475,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 15434,
											"end": 15475,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15434,
											"end": 15475,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15380,
											"end": 15481,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15380,
											"end": 15481,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15380,
											"end": 15481,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15380,
											"end": 15481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15487,
											"end": 15547,
											"name": "tag",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 15487,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15515,
											"end": 15518,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15536,
											"end": 15541,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15529,
											"end": 15541,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15529,
											"end": 15541,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15487,
											"end": 15547,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15487,
											"end": 15547,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15487,
											"end": 15547,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15487,
											"end": 15547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15553,
											"end": 15709,
											"name": "tag",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 15553,
											"end": 15709,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15610,
											"end": 15619,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15643,
											"end": 15703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 15660,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 15669,
											"end": 15701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 15695,
											"end": 15700,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 15669,
											"end": 15701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15701,
											"name": "tag",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 15669,
											"end": 15701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15660,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 15660,
											"end": 15702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15660,
											"end": 15702,
											"name": "tag",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 15660,
											"end": 15702,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15643,
											"end": 15703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 15643,
											"end": 15703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15643,
											"end": 15703,
											"name": "tag",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 15643,
											"end": 15703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15630,
											"end": 15703,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15630,
											"end": 15703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15553,
											"end": 15709,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15553,
											"end": 15709,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15553,
											"end": 15709,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15553,
											"end": 15709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15715,
											"end": 15860,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 15715,
											"end": 15860,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15809,
											"end": 15853,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 15847,
											"end": 15852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15809,
											"end": 15853,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 15809,
											"end": 15853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15809,
											"end": 15853,
											"name": "tag",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 15809,
											"end": 15853,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15804,
											"end": 15807,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15797,
											"end": 15854,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15715,
											"end": 15860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15715,
											"end": 15860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15715,
											"end": 15860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15866,
											"end": 16102,
											"name": "tag",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 15866,
											"end": 16102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15966,
											"end": 15970,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16004,
											"end": 16006,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15993,
											"end": 16002,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15989,
											"end": 16007,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15981,
											"end": 16007,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15981,
											"end": 16007,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16017,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 16092,
											"end": 16093,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16081,
											"end": 16090,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16077,
											"end": 16094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16068,
											"end": 16074,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16017,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 16017,
											"end": 16095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16017,
											"end": 16095,
											"name": "tag",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 16017,
											"end": 16095,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15866,
											"end": 16102,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15866,
											"end": 16102,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15866,
											"end": 16102,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15866,
											"end": 16102,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15866,
											"end": 16102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16108,
											"end": 16550,
											"name": "tag",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 16108,
											"end": 16550,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16257,
											"end": 16261,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16295,
											"end": 16297,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 16284,
											"end": 16293,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16280,
											"end": 16298,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16272,
											"end": 16298,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16272,
											"end": 16298,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16308,
											"end": 16379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 16376,
											"end": 16377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16365,
											"end": 16374,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16361,
											"end": 16378,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16352,
											"end": 16358,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 16308,
											"end": 16379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 16308,
											"end": 16379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16308,
											"end": 16379,
											"name": "tag",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 16308,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16389,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 16457,
											"end": 16459,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16446,
											"end": 16455,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16442,
											"end": 16460,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16433,
											"end": 16439,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16389,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 16389,
											"end": 16461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16389,
											"end": 16461,
											"name": "tag",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 16389,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16471,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 16539,
											"end": 16541,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 16528,
											"end": 16537,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16524,
											"end": 16542,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16515,
											"end": 16521,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16471,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 16471,
											"end": 16543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16471,
											"end": 16543,
											"name": "tag",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 16471,
											"end": 16543,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16108,
											"end": 16550,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 16108,
											"end": 16550,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 16108,
											"end": 16550,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16108,
											"end": 16550,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16108,
											"end": 16550,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16108,
											"end": 16550,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16108,
											"end": 16550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16556,
											"end": 16966,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 16556,
											"end": 16966,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16596,
											"end": 16603,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16639,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 16637,
											"end": 16638,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16619,
											"end": 16639,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 16619,
											"end": 16639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16619,
											"end": 16639,
											"name": "tag",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 16619,
											"end": 16639,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16614,
											"end": 16639,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16614,
											"end": 16639,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16653,
											"end": 16673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 16671,
											"end": 16672,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16653,
											"end": 16673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 16653,
											"end": 16673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16653,
											"end": 16673,
											"name": "tag",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 16653,
											"end": 16673,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16648,
											"end": 16673,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16648,
											"end": 16673,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16708,
											"end": 16709,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16705,
											"end": 16706,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16701,
											"end": 16710,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 16730,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 16748,
											"end": 16759,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16730,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 16730,
											"end": 16760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16730,
											"end": 16760,
											"name": "tag",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 16730,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16719,
											"end": 16760,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16719,
											"end": 16760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16909,
											"end": 16910,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16900,
											"end": 16907,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16896,
											"end": 16911,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 16893,
											"end": 16894,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16890,
											"end": 16912,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 16870,
											"end": 16871,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16863,
											"end": 16872,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16843,
											"end": 16926,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 16820,
											"end": 16959,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "679"
										},
										{
											"begin": 16820,
											"end": 16959,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16939,
											"end": 16957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 16939,
											"end": 16957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 16939,
											"end": 16957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16939,
											"end": 16957,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 16939,
											"end": 16957,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16820,
											"end": 16959,
											"name": "tag",
											"source": 17,
											"value": "679"
										},
										{
											"begin": 16820,
											"end": 16959,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16604,
											"end": 16966,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16556,
											"end": 16966,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16556,
											"end": 16966,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16556,
											"end": 16966,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16556,
											"end": 16966,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16556,
											"end": 16966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16972,
											"end": 17152,
											"name": "tag",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 16972,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17020,
											"end": 17097,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17017,
											"end": 17018,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17010,
											"end": 17098,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17117,
											"end": 17121,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 17114,
											"end": 17115,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17141,
											"end": 17145,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 17138,
											"end": 17139,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17131,
											"end": 17146,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 17158,
											"end": 17343,
											"name": "tag",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 17158,
											"end": 17343,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17198,
											"end": 17199,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17215,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 17233,
											"end": 17234,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17215,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 17215,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17215,
											"end": 17235,
											"name": "tag",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 17215,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17249,
											"end": 17269,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 17267,
											"end": 17268,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17249,
											"end": 17269,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 17249,
											"end": 17269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17249,
											"end": 17269,
											"name": "tag",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 17249,
											"end": 17269,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17244,
											"end": 17269,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17244,
											"end": 17269,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17288,
											"end": 17289,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17278,
											"end": 17313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 17278,
											"end": 17313,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17293,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 17293,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 17293,
											"end": 17311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17293,
											"end": 17311,
											"name": "tag",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 17293,
											"end": 17311,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17278,
											"end": 17313,
											"name": "tag",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 17278,
											"end": 17313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17335,
											"end": 17336,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17332,
											"end": 17333,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17328,
											"end": 17337,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 17323,
											"end": 17337,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17323,
											"end": 17337,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17158,
											"end": 17343,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17158,
											"end": 17343,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17158,
											"end": 17343,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17158,
											"end": 17343,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17158,
											"end": 17343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17349,
											"end": 17543,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 17349,
											"end": 17543,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17389,
											"end": 17393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17409,
											"end": 17429,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 17427,
											"end": 17428,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17409,
											"end": 17429,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 17409,
											"end": 17429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17409,
											"end": 17429,
											"name": "tag",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 17409,
											"end": 17429,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17404,
											"end": 17429,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17404,
											"end": 17429,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17443,
											"end": 17463,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 17461,
											"end": 17462,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17443,
											"end": 17463,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 17443,
											"end": 17463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17443,
											"end": 17463,
											"name": "tag",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 17443,
											"end": 17463,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17438,
											"end": 17463,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17438,
											"end": 17463,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17487,
											"end": 17488,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17484,
											"end": 17485,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17480,
											"end": 17489,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17472,
											"end": 17489,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17472,
											"end": 17489,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17511,
											"end": 17512,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17505,
											"end": 17509,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17502,
											"end": 17513,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 17499,
											"end": 17536,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 17499,
											"end": 17536,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "690"
										},
										{
											"begin": 17499,
											"end": 17536,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 17516,
											"end": 17534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "tag",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17499,
											"end": 17536,
											"name": "tag",
											"source": 17,
											"value": "690"
										},
										{
											"begin": 17499,
											"end": 17536,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17349,
											"end": 17543,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17349,
											"end": 17543,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17349,
											"end": 17543,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17349,
											"end": 17543,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17349,
											"end": 17543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17549,
											"end": 17671,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 17549,
											"end": 17671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17622,
											"end": 17646,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 17640,
											"end": 17645,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17622,
											"end": 17646,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 17622,
											"end": 17646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17622,
											"end": 17646,
											"name": "tag",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 17622,
											"end": 17646,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17615,
											"end": 17620,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17612,
											"end": 17647,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 17602,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "694"
										},
										{
											"begin": 17602,
											"end": 17665,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17661,
											"end": 17662,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17658,
											"end": 17659,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17651,
											"end": 17663,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 17602,
											"end": 17665,
											"name": "tag",
											"source": 17,
											"value": "694"
										},
										{
											"begin": 17602,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17549,
											"end": 17671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17549,
											"end": 17671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17677,
											"end": 17820,
											"name": "tag",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 17677,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17734,
											"end": 17739,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17765,
											"end": 17771,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17759,
											"end": 17772,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 17750,
											"end": 17772,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17750,
											"end": 17772,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17781,
											"end": 17814,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 17808,
											"end": 17813,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17781,
											"end": 17814,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 17781,
											"end": 17814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17781,
											"end": 17814,
											"name": "tag",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 17781,
											"end": 17814,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17677,
											"end": 17820,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17677,
											"end": 17820,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17677,
											"end": 17820,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17677,
											"end": 17820,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17677,
											"end": 17820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17826,
											"end": 18177,
											"name": "tag",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 17826,
											"end": 18177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17945,
											"end": 17947,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17933,
											"end": 17942,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17924,
											"end": 17931,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17920,
											"end": 17943,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17916,
											"end": 17948,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 17913,
											"end": 18032,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 17913,
											"end": 18032,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 17913,
											"end": 18032,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17951,
											"end": 18030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 17951,
											"end": 18030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 17951,
											"end": 18030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17951,
											"end": 18030,
											"name": "tag",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 17951,
											"end": 18030,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17913,
											"end": 18032,
											"name": "tag",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 17913,
											"end": 18032,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18071,
											"end": 18072,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18096,
											"end": 18160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 18152,
											"end": 18159,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18143,
											"end": 18149,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18132,
											"end": 18141,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18128,
											"end": 18150,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18096,
											"end": 18160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 18096,
											"end": 18160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18096,
											"end": 18160,
											"name": "tag",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 18096,
											"end": 18160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18086,
											"end": 18160,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18086,
											"end": 18160,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18042,
											"end": 18170,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17826,
											"end": 18177,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17826,
											"end": 18177,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17826,
											"end": 18177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17826,
											"end": 18177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17826,
											"end": 18177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18183,
											"end": 18354,
											"name": "tag",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 18183,
											"end": 18354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18323,
											"end": 18346,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A206F776E776572206973207A65726F0000000000000000000000"
										},
										{
											"begin": 18319,
											"end": 18320,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18311,
											"end": 18317,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18307,
											"end": 18321,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18300,
											"end": 18347,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18183,
											"end": 18354,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18183,
											"end": 18354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18360,
											"end": 18726,
											"name": "tag",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 18360,
											"end": 18726,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18502,
											"end": 18505,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18523,
											"end": 18590,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 18587,
											"end": 18589,
											"name": "PUSH",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 18582,
											"end": 18585,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18523,
											"end": 18590,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 18523,
											"end": 18590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18523,
											"end": 18590,
											"name": "tag",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 18523,
											"end": 18590,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18516,
											"end": 18590,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18516,
											"end": 18590,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18599,
											"end": 18692,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 18688,
											"end": 18691,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18599,
											"end": 18692,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 18599,
											"end": 18692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18599,
											"end": 18692,
											"name": "tag",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 18599,
											"end": 18692,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18717,
											"end": 18719,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18712,
											"end": 18715,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18708,
											"end": 18720,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18701,
											"end": 18720,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18701,
											"end": 18720,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18360,
											"end": 18726,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18360,
											"end": 18726,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18360,
											"end": 18726,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18360,
											"end": 18726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18732,
											"end": 19151,
											"name": "tag",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 18732,
											"end": 19151,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18898,
											"end": 18902,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18936,
											"end": 18938,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18925,
											"end": 18934,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18921,
											"end": 18939,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18913,
											"end": 18939,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18913,
											"end": 18939,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18985,
											"end": 18994,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18979,
											"end": 18983,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18975,
											"end": 18995,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 18971,
											"end": 18972,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18960,
											"end": 18969,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18956,
											"end": 18973,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18949,
											"end": 18996,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19013,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 19139,
											"end": 19143,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19013,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 19013,
											"end": 19144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19013,
											"end": 19144,
											"name": "tag",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 19013,
											"end": 19144,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19005,
											"end": 19144,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19005,
											"end": 19144,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18732,
											"end": 19151,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18732,
											"end": 19151,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18732,
											"end": 19151,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18732,
											"end": 19151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19157,
											"end": 19298,
											"name": "tag",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 19157,
											"end": 19298,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19206,
											"end": 19210,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19229,
											"end": 19232,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19221,
											"end": 19232,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19221,
											"end": 19232,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19252,
											"end": 19255,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19249,
											"end": 19250,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19242,
											"end": 19256,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19286,
											"end": 19290,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19283,
											"end": 19284,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19273,
											"end": 19291,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 19265,
											"end": 19291,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19265,
											"end": 19291,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19157,
											"end": 19298,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19157,
											"end": 19298,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19157,
											"end": 19298,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19157,
											"end": 19298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19304,
											"end": 19397,
											"name": "tag",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 19304,
											"end": 19397,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19341,
											"end": 19347,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19388,
											"end": 19390,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19383,
											"end": 19385,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 19376,
											"end": 19381,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19372,
											"end": 19386,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19368,
											"end": 19391,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 19358,
											"end": 19391,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19358,
											"end": 19391,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19304,
											"end": 19397,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19304,
											"end": 19397,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19304,
											"end": 19397,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19304,
											"end": 19397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19510,
											"name": "tag",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 19403,
											"end": 19510,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19447,
											"end": 19455,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19497,
											"end": 19502,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19491,
											"end": 19495,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19487,
											"end": 19503,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 19466,
											"end": 19503,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19466,
											"end": 19503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19510,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19510,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19510,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19510,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19516,
											"end": 19909,
											"name": "tag",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 19516,
											"end": 19909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19585,
											"end": 19591,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19635,
											"end": 19636,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 19623,
											"end": 19633,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19619,
											"end": 19637,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 19658,
											"end": 19755,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "711"
										},
										{
											"begin": 19688,
											"end": 19754,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19677,
											"end": 19686,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19658,
											"end": 19755,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 19658,
											"end": 19755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19658,
											"end": 19755,
											"name": "tag",
											"source": 17,
											"value": "711"
										},
										{
											"begin": 19658,
											"end": 19755,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19776,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 19806,
											"end": 19814,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 19795,
											"end": 19804,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19776,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 19776,
											"end": 19815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19776,
											"end": 19815,
											"name": "tag",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 19776,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19764,
											"end": 19815,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 19764,
											"end": 19815,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19848,
											"end": 19852,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 19844,
											"end": 19853,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 19837,
											"end": 19842,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19833,
											"end": 19854,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 19824,
											"end": 19854,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 19824,
											"end": 19854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19897,
											"end": 19901,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 19887,
											"end": 19895,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 19902,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 19876,
											"end": 19881,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19873,
											"end": 19903,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 19863,
											"end": 19903,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19863,
											"end": 19903,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19592,
											"end": 19909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19592,
											"end": 19909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19516,
											"end": 19909,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 19516,
											"end": 19909,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19516,
											"end": 19909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19516,
											"end": 19909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19516,
											"end": 19909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19516,
											"end": 19909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19915,
											"end": 20057,
											"name": "tag",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 19915,
											"end": 20057,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19965,
											"end": 19974,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19998,
											"end": 20051,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 20016,
											"end": 20050,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 20025,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 20043,
											"end": 20048,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20025,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 20025,
											"end": 20049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20025,
											"end": 20049,
											"name": "tag",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 20025,
											"end": 20049,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20016,
											"end": 20050,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 20016,
											"end": 20050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20016,
											"end": 20050,
											"name": "tag",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 20016,
											"end": 20050,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19998,
											"end": 20051,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 19998,
											"end": 20051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19998,
											"end": 20051,
											"name": "tag",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 19998,
											"end": 20051,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19985,
											"end": 20051,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19985,
											"end": 20051,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19915,
											"end": 20057,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19915,
											"end": 20057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19915,
											"end": 20057,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19915,
											"end": 20057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20063,
											"end": 20138,
											"name": "tag",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 20063,
											"end": 20138,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20106,
											"end": 20109,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20127,
											"end": 20132,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20120,
											"end": 20132,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20120,
											"end": 20132,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20063,
											"end": 20138,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20063,
											"end": 20138,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20063,
											"end": 20138,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20063,
											"end": 20138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20144,
											"end": 20413,
											"name": "tag",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 20144,
											"end": 20413,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20254,
											"end": 20293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "719"
										},
										{
											"begin": 20285,
											"end": 20292,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20254,
											"end": 20293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 20254,
											"end": 20293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20254,
											"end": 20293,
											"name": "tag",
											"source": 17,
											"value": "719"
										},
										{
											"begin": 20254,
											"end": 20293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20315,
											"end": 20406,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "720"
										},
										{
											"begin": 20364,
											"end": 20405,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 20388,
											"end": 20404,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20364,
											"end": 20405,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 20364,
											"end": 20405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20364,
											"end": 20405,
											"name": "tag",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 20364,
											"end": 20405,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20356,
											"end": 20362,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20349,
											"end": 20353,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20343,
											"end": 20354,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 20315,
											"end": 20406,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 20315,
											"end": 20406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20315,
											"end": 20406,
											"name": "tag",
											"source": 17,
											"value": "720"
										},
										{
											"begin": 20315,
											"end": 20406,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20309,
											"end": 20313,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20302,
											"end": 20407,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 20220,
											"end": 20413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20144,
											"end": 20413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20144,
											"end": 20413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20144,
											"end": 20413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20144,
											"end": 20413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20419,
											"end": 20492,
											"name": "tag",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 20419,
											"end": 20492,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20464,
											"end": 20467,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20419,
											"end": 20492,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20419,
											"end": 20492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20498,
											"end": 20687,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 20498,
											"end": 20687,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20575,
											"end": 20607,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 20575,
											"end": 20607,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 20575,
											"end": 20607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20575,
											"end": 20607,
											"name": "tag",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 20575,
											"end": 20607,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20616,
											"end": 20681,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 20674,
											"end": 20680,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20666,
											"end": 20672,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20660,
											"end": 20664,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20616,
											"end": 20681,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 20616,
											"end": 20681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20616,
											"end": 20681,
											"name": "tag",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 20616,
											"end": 20681,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20551,
											"end": 20687,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20498,
											"end": 20687,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20498,
											"end": 20687,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20498,
											"end": 20687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20693,
											"end": 20879,
											"name": "tag",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 20693,
											"end": 20879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20753,
											"end": 20873,
											"name": "tag",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 20753,
											"end": 20873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20770,
											"end": 20773,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20763,
											"end": 20768,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20760,
											"end": 20774,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 20753,
											"end": 20873,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20753,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "729"
										},
										{
											"begin": 20753,
											"end": 20873,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20824,
											"end": 20863,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 20861,
											"end": 20862,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20854,
											"end": 20859,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20824,
											"end": 20863,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 20824,
											"end": 20863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20824,
											"end": 20863,
											"name": "tag",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 20824,
											"end": 20863,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20797,
											"end": 20798,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 20790,
											"end": 20795,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20786,
											"end": 20799,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20777,
											"end": 20799,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20777,
											"end": 20799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20753,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 20753,
											"end": 20873,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20753,
											"end": 20873,
											"name": "tag",
											"source": 17,
											"value": "729"
										},
										{
											"begin": 20753,
											"end": 20873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20693,
											"end": 20879,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20693,
											"end": 20879,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20693,
											"end": 20879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20885,
											"end": 21428,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 20885,
											"end": 21428,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20986,
											"end": 20988,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 20981,
											"end": 20984,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20978,
											"end": 20989,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 20975,
											"end": 21421,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20975,
											"end": 21421,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 20975,
											"end": 21421,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21020,
											"end": 21058,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 21052,
											"end": 21057,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21020,
											"end": 21058,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 21020,
											"end": 21058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21020,
											"end": 21058,
											"name": "tag",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 21020,
											"end": 21058,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21104,
											"end": 21133,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 21122,
											"end": 21132,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 21104,
											"end": 21133,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 21104,
											"end": 21133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21104,
											"end": 21133,
											"name": "tag",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 21104,
											"end": 21133,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21094,
											"end": 21102,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21090,
											"end": 21134,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21287,
											"end": 21289,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21275,
											"end": 21285,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 21272,
											"end": 21290,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 21269,
											"end": 21318,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 21269,
											"end": 21318,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 21269,
											"end": 21318,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21308,
											"end": 21316,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21293,
											"end": 21316,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21293,
											"end": 21316,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21269,
											"end": 21318,
											"name": "tag",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 21269,
											"end": 21318,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21331,
											"end": 21411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "736"
										},
										{
											"begin": 21387,
											"end": 21409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "737"
										},
										{
											"begin": 21405,
											"end": 21408,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 21387,
											"end": 21409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 21387,
											"end": 21409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21387,
											"end": 21409,
											"name": "tag",
											"source": 17,
											"value": "737"
										},
										{
											"begin": 21387,
											"end": 21409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21377,
											"end": 21385,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21373,
											"end": 21410,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21360,
											"end": 21371,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21331,
											"end": 21411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 21331,
											"end": 21411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21331,
											"end": 21411,
											"name": "tag",
											"source": 17,
											"value": "736"
										},
										{
											"begin": 21331,
											"end": 21411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20990,
											"end": 21421,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20990,
											"end": 21421,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20975,
											"end": 21421,
											"name": "tag",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 20975,
											"end": 21421,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20885,
											"end": 21428,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20885,
											"end": 21428,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20885,
											"end": 21428,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20885,
											"end": 21428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21434,
											"end": 21551,
											"name": "tag",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 21434,
											"end": 21551,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21488,
											"end": 21496,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21538,
											"end": 21543,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21532,
											"end": 21536,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21528,
											"end": 21544,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 21507,
											"end": 21544,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21507,
											"end": 21544,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21434,
											"end": 21551,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21434,
											"end": 21551,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21434,
											"end": 21551,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21434,
											"end": 21551,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21434,
											"end": 21551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21557,
											"end": 21726,
											"name": "tag",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 21557,
											"end": 21726,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21601,
											"end": 21607,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21634,
											"end": 21685,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 21682,
											"end": 21683,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21678,
											"end": 21684,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 21670,
											"end": 21675,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 21667,
											"end": 21668,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 21663,
											"end": 21676,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 21634,
											"end": 21685,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 21634,
											"end": 21685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21634,
											"end": 21685,
											"name": "tag",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 21634,
											"end": 21685,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21630,
											"end": 21686,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 21715,
											"end": 21719,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 21709,
											"end": 21713,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21705,
											"end": 21720,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 21695,
											"end": 21720,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21695,
											"end": 21720,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21608,
											"end": 21726,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21557,
											"end": 21726,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21557,
											"end": 21726,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21557,
											"end": 21726,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21557,
											"end": 21726,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21557,
											"end": 21726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22026,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 21731,
											"end": 22026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21807,
											"end": 21811,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21953,
											"end": 21982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 21978,
											"end": 21981,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21972,
											"end": 21976,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21953,
											"end": 21982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 21953,
											"end": 21982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21953,
											"end": 21982,
											"name": "tag",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 21953,
											"end": 21982,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21945,
											"end": 21982,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21945,
											"end": 21982,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22015,
											"end": 22018,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22012,
											"end": 22013,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 22008,
											"end": 22019,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 22002,
											"end": 22006,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21999,
											"end": 22020,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 21991,
											"end": 22020,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21991,
											"end": 22020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22026,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22031,
											"end": 23426,
											"name": "tag",
											"source": 17,
											"value": "394"
										},
										{
											"begin": 22031,
											"end": 23426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "744"
										},
										{
											"begin": 22181,
											"end": 22184,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 22148,
											"end": 22185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22185,
											"name": "tag",
											"source": 17,
											"value": "744"
										},
										{
											"begin": 22148,
											"end": 22185,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22250,
											"end": 22268,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22242,
											"end": 22248,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22239,
											"end": 22269,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 22236,
											"end": 22292,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22236,
											"end": 22292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 22236,
											"end": 22292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22272,
											"end": 22290,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 22272,
											"end": 22290,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 22272,
											"end": 22290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22272,
											"end": 22290,
											"name": "tag",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 22272,
											"end": 22290,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22236,
											"end": 22292,
											"name": "tag",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 22236,
											"end": 22292,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22316,
											"end": 22354,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 22348,
											"end": 22352,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22342,
											"end": 22353,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 22316,
											"end": 22354,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 22316,
											"end": 22354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22316,
											"end": 22354,
											"name": "tag",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 22316,
											"end": 22354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22401,
											"end": 22468,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "748"
										},
										{
											"begin": 22461,
											"end": 22467,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22453,
											"end": 22459,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22447,
											"end": 22451,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 22401,
											"end": 22468,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 22401,
											"end": 22468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22401,
											"end": 22468,
											"name": "tag",
											"source": 17,
											"value": "748"
										},
										{
											"begin": 22401,
											"end": 22468,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22495,
											"end": 22496,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22519,
											"end": 22523,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22506,
											"end": 22523,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22506,
											"end": 22523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22551,
											"end": 22553,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 22543,
											"end": 22549,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22540,
											"end": 22554,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 22568,
											"end": 22569,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 22563,
											"end": 23181,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22563,
											"end": 23181,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 22563,
											"end": 23181,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 22563,
											"end": 23181,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23225,
											"end": 23226,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23242,
											"end": 23248,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23239,
											"end": 23316,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 23239,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 23239,
											"end": 23316,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23291,
											"end": 23300,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23286,
											"end": 23289,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 23282,
											"end": 23301,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23276,
											"end": 23302,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 23267,
											"end": 23302,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23267,
											"end": 23302,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23239,
											"end": 23316,
											"name": "tag",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 23239,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23342,
											"end": 23409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 23402,
											"end": 23408,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23395,
											"end": 23400,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23342,
											"end": 23409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 23342,
											"end": 23409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23342,
											"end": 23409,
											"name": "tag",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 23342,
											"end": 23409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23336,
											"end": 23340,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 23329,
											"end": 23410,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 23198,
											"end": 23420,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22533,
											"end": 23420,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "749"
										},
										{
											"begin": 22533,
											"end": 23420,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22563,
											"end": 23181,
											"name": "tag",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 22563,
											"end": 23181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22615,
											"end": 22619,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 22611,
											"end": 22620,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 22603,
											"end": 22609,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22599,
											"end": 22621,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 22649,
											"end": 22686,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "753"
										},
										{
											"begin": 22681,
											"end": 22685,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 22649,
											"end": 22686,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 22649,
											"end": 22686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22649,
											"end": 22686,
											"name": "tag",
											"source": 17,
											"value": "753"
										},
										{
											"begin": 22649,
											"end": 22686,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22708,
											"end": 22709,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22722,
											"end": 22930,
											"name": "tag",
											"source": 17,
											"value": "754"
										},
										{
											"begin": 22722,
											"end": 22930,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22736,
											"end": 22743,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22733,
											"end": 22734,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22730,
											"end": 22744,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 22722,
											"end": 22930,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22722,
											"end": 22930,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 22722,
											"end": 22930,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22815,
											"end": 22824,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22810,
											"end": 22813,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 22806,
											"end": 22825,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22800,
											"end": 22826,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 22792,
											"end": 22798,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22785,
											"end": 22827,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 22866,
											"end": 22867,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 22858,
											"end": 22864,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22854,
											"end": 22868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22844,
											"end": 22868,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22844,
											"end": 22868,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22913,
											"end": 22915,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22902,
											"end": 22911,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22885,
											"end": 22916,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 22885,
											"end": 22916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22759,
											"end": 22763,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22757,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22752,
											"end": 22764,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22747,
											"end": 22764,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22747,
											"end": 22764,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22722,
											"end": 22930,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "754"
										},
										{
											"begin": 22722,
											"end": 22930,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22722,
											"end": 22930,
											"name": "tag",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 22722,
											"end": 22930,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22958,
											"end": 22964,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 22949,
											"end": 22956,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22946,
											"end": 22965,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 22943,
											"end": 23122,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22943,
											"end": 23122,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 22943,
											"end": 23122,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23016,
											"end": 23025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23011,
											"end": 23014,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 23007,
											"end": 23026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23001,
											"end": 23027,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 23059,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 23101,
											"end": 23105,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 23093,
											"end": 23099,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 23089,
											"end": 23106,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 23078,
											"end": 23087,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23059,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 23059,
											"end": 23107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23059,
											"end": 23107,
											"name": "tag",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 23059,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23051,
											"end": 23057,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23044,
											"end": 23108,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 22966,
											"end": 23122,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22943,
											"end": 23122,
											"name": "tag",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 22943,
											"end": 23122,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23168,
											"end": 23169,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 23164,
											"end": 23165,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 23156,
											"end": 23162,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 23152,
											"end": 23166,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 23148,
											"end": 23170,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23142,
											"end": 23146,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 23135,
											"end": 23171,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 22570,
											"end": 23181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22570,
											"end": 23181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22570,
											"end": 23181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22533,
											"end": 23420,
											"name": "tag",
											"source": 17,
											"value": "749"
										},
										{
											"begin": 22533,
											"end": 23420,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22533,
											"end": 23420,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22123,
											"end": 23426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22123,
											"end": 23426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22123,
											"end": 23426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22031,
											"end": 23426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22031,
											"end": 23426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22031,
											"end": 23426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23432,
											"end": 23530,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 23432,
											"end": 23530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23483,
											"end": 23489,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23517,
											"end": 23522,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23511,
											"end": 23523,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 23501,
											"end": 23523,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23501,
											"end": 23523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23432,
											"end": 23530,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23432,
											"end": 23530,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23432,
											"end": 23530,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23432,
											"end": 23530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23536,
											"end": 23683,
											"name": "tag",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 23536,
											"end": 23683,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23637,
											"end": 23648,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23674,
											"end": 23677,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23659,
											"end": 23677,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23659,
											"end": 23677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23536,
											"end": 23683,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23536,
											"end": 23683,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23536,
											"end": 23683,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23536,
											"end": 23683,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23536,
											"end": 23683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23689,
											"end": 24075,
											"name": "tag",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 23689,
											"end": 24075,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23793,
											"end": 23796,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23821,
											"end": 23859,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 23853,
											"end": 23858,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23821,
											"end": 23859,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 23821,
											"end": 23859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23821,
											"end": 23859,
											"name": "tag",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 23821,
											"end": 23859,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23875,
											"end": 23963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 23956,
											"end": 23962,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23951,
											"end": 23954,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23875,
											"end": 23963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 23875,
											"end": 23963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23875,
											"end": 23963,
											"name": "tag",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 23875,
											"end": 23963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23868,
											"end": 23963,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 23868,
											"end": 23963,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23972,
											"end": 24037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "764"
										},
										{
											"begin": 24030,
											"end": 24036,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24025,
											"end": 24028,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 24018,
											"end": 24022,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24011,
											"end": 24016,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 24007,
											"end": 24023,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23972,
											"end": 24037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 23972,
											"end": 24037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23972,
											"end": 24037,
											"name": "tag",
											"source": 17,
											"value": "764"
										},
										{
											"begin": 23972,
											"end": 24037,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24062,
											"end": 24068,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24057,
											"end": 24060,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24053,
											"end": 24069,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24046,
											"end": 24069,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24046,
											"end": 24069,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23797,
											"end": 24075,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23689,
											"end": 24075,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23689,
											"end": 24075,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23689,
											"end": 24075,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23689,
											"end": 24075,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23689,
											"end": 24075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24081,
											"end": 24352,
											"name": "tag",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 24081,
											"end": 24352,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24211,
											"end": 24214,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24233,
											"end": 24326,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 24322,
											"end": 24325,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24313,
											"end": 24319,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24233,
											"end": 24326,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 24233,
											"end": 24326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24233,
											"end": 24326,
											"name": "tag",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 24233,
											"end": 24326,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24226,
											"end": 24326,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24226,
											"end": 24326,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24343,
											"end": 24346,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24336,
											"end": 24346,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24336,
											"end": 24346,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24081,
											"end": 24352,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 24081,
											"end": 24352,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24081,
											"end": 24352,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24081,
											"end": 24352,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24081,
											"end": 24352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/token/CrocodiloBomberdino.sol",
								"contracts/token/utils/FeeManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnFee()": "fce589d8",
							"burnWallet()": "06228749",
							"decimals()": "313ce567",
							"initialize()": "8129fc1c",
							"isFeeExempt(address)": "3f4218e0",
							"liquidityFee()": "98118cb4",
							"liquidityWallet()": "d4698016",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalFee()": "1df4ccfc",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateFeeExemption(address,bool)": "5e4043e9",
							"updateWallets(address,address,address)": "147c9f6d",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"utilityFee()": "dccd8bd2",
							"utilityWallet()": "bf4cc52b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFeeExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"updateFeeExemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_utilityWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidityWallet\",\"type\":\"address\"}],\"name\":\"updateWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Upgradeable ERC20 token with a 5% fee on transfers:      2% burn, 2% utility, and 1% liquidity.      Uses the UUPS upgradeable pattern and integrates fee management.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"initialize()\":{\"details\":\"Initializes the contract: sets token details, mints the total supply,      initializes fee wallet addresses (replace these with your secure addresses before mainnet deployment),      and exempts the deployer and the contract itself from fees.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateFeeExemption(address,bool)\":{\"params\":{\"account\":\"The address to update.\",\"exempt\":\"Boolean flag indicating if the account should be fee-exempt.\"}},\"updateWallets(address,address,address)\":{\"params\":{\"_burnWallet\":\"New burn wallet address.\",\"_liquidityWallet\":\"New liquidity wallet address.\",\"_utilityWallet\":\"New utility wallet address.\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"CrocodiloBomberdino\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"totalFee()\":{\"notice\":\"Returns the total fee percentage.\"},\"updateFeeExemption(address,bool)\":{\"notice\":\"Updates the fee exemption status for an account.\"},\"updateWallets(address,address,address)\":{\"notice\":\"Updates the fee wallet addresses.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/CrocodiloBomberdino.sol\":\"CrocodiloBomberdino\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x77b5db0459729eb68e45320a715ee280490bf11132a73a9b1b520acfab5cec9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a22d0a284028864a39d89fc3383137eb08887948c4a7913b708d19b1fa542d2\",\"dweb:/ipfs/Qmedc7f7yAzuGdHLMKEwngkVUD99mVecaMSYhABabSGMG7\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x17e0e9e31ea417d52145013c539f4b2071813a186e30c7e13ee2fbf98387942a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5188bf47196aacb99e3f9705d5c6c322f7c21ff5c78e3dd92d449f2e96cfc289\",\"dweb:/ipfs/QmboqyLLcxRRh9AwHyKES3LQbVAhhAUTyz7TWQtgMzrCCA\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/token/CrocodiloBomberdino.sol\":{\"keccak256\":\"0x827763dd6d606ea61807efdabe393b60b7231d1197603b0e79832e2f68806d4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50f9de10afc113313314fe77046f7d987842fe66f63f183663d2b1c5526153dc\",\"dweb:/ipfs/QmNd6kjTGtVAFuBBhVNTgfTXsTgU3Zx76Qnu15Mf3NgUcE\"]},\"contracts/token/utils/FeeManager.sol\":{\"keccak256\":\"0x8173b57f206402d54f4713e3df944e38b293cf9713d0ed9c45c0550b2e2ad1f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b9c14850802e3fedfaad60d3585a1b47637ceefd582cdbd367250b4a642734\",\"dweb:/ipfs/QmWdyh8hwhpf2gBeXTmu3ZtGHhyoYWVy7JCRfn2hsLcivX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2571,
								"contract": "contracts/token/CrocodiloBomberdino.sol:CrocodiloBomberdino",
								"label": "burnWallet",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2573,
								"contract": "contracts/token/CrocodiloBomberdino.sol:CrocodiloBomberdino",
								"label": "utilityWallet",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2575,
								"contract": "contracts/token/CrocodiloBomberdino.sol:CrocodiloBomberdino",
								"label": "liquidityWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2578,
								"contract": "contracts/token/CrocodiloBomberdino.sol:CrocodiloBomberdino",
								"label": "burnFee",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2581,
								"contract": "contracts/token/CrocodiloBomberdino.sol:CrocodiloBomberdino",
								"label": "utilityFee",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2584,
								"contract": "contracts/token/CrocodiloBomberdino.sol:CrocodiloBomberdino",
								"label": "liquidityFee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2588,
								"contract": "contracts/token/CrocodiloBomberdino.sol:CrocodiloBomberdino",
								"label": "isFeeExempt",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"totalFee()": {
								"notice": "Returns the total fee percentage."
							},
							"updateFeeExemption(address,bool)": {
								"notice": "Updates the fee exemption status for an account."
							},
							"updateWallets(address,address,address)": {
								"notice": "Updates the fee wallet addresses."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/token/utils/FeeManager.sol": {
				"FeeManager": {
					"abi": [
						{
							"inputs": [],
							"name": "burnFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isFeeExempt",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "utilityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "utilityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contains fee parameters, wallet address storage, and fee calculation.      This abstract contract does NOT enforce access control;      functions that need protection will be implemented in the derived token contract.",
						"kind": "dev",
						"methods": {},
						"title": "FeeManager",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burnFee()": "fce589d8",
							"burnWallet()": "06228749",
							"isFeeExempt(address)": "3f4218e0",
							"liquidityFee()": "98118cb4",
							"liquidityWallet()": "d4698016",
							"totalFee()": "1df4ccfc",
							"utilityFee()": "dccd8bd2",
							"utilityWallet()": "bf4cc52b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"burnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFeeExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contains fee parameters, wallet address storage, and fee calculation.      This abstract contract does NOT enforce access control;      functions that need protection will be implemented in the derived token contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FeeManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"totalFee()\":{\"notice\":\"Returns the total fee percentage.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/utils/FeeManager.sol\":\"FeeManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/utils/FeeManager.sol\":{\"keccak256\":\"0x8173b57f206402d54f4713e3df944e38b293cf9713d0ed9c45c0550b2e2ad1f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b9c14850802e3fedfaad60d3585a1b47637ceefd582cdbd367250b4a642734\",\"dweb:/ipfs/QmWdyh8hwhpf2gBeXTmu3ZtGHhyoYWVy7JCRfn2hsLcivX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2571,
								"contract": "contracts/token/utils/FeeManager.sol:FeeManager",
								"label": "burnWallet",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2573,
								"contract": "contracts/token/utils/FeeManager.sol:FeeManager",
								"label": "utilityWallet",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2575,
								"contract": "contracts/token/utils/FeeManager.sol:FeeManager",
								"label": "liquidityWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2578,
								"contract": "contracts/token/utils/FeeManager.sol:FeeManager",
								"label": "burnFee",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2581,
								"contract": "contracts/token/utils/FeeManager.sol:FeeManager",
								"label": "utilityFee",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2584,
								"contract": "contracts/token/utils/FeeManager.sol:FeeManager",
								"label": "liquidityFee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2588,
								"contract": "contracts/token/utils/FeeManager.sol:FeeManager",
								"label": "isFeeExempt",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"totalFee()": {
								"notice": "Returns the total fee percentage."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1317
						],
						"Initializable": [
							472
						],
						"OwnableUpgradeable": [
							204
						]
					},
					"id": 205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 205,
							"sourceUnit": 1318,
							"src": "144:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1317,
										"src": "152:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 205,
							"sourceUnit": 473,
							"src": "216:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 472,
										"src": "224:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"850:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "850:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "850:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"865:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1317,
										"src": "865:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "865:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "285:520:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204,
								1317,
								472
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "828:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "894:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "1012:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "1004:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1004:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "975:14:0",
									"nodeType": "StructDefinition",
									"scope": 204,
									"src": "968:61:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1179:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 204,
									"src": "1154:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1154:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1204:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1359:97:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1382:64:0",
													"nodeType": "YulBlock",
													"src": "1382:64:0",
													"statements": [
														{
															"nativeSrc": "1400:32:0",
															"nodeType": "YulAssignment",
															"src": "1400:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1410:22:0",
																"nodeType": "YulIdentifier",
																"src": "1410:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1400:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1400:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1400:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1410:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1373:73:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1290:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1308:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1356:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1333:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1333:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1333:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1333:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:26:0"
									},
									"scope": 204,
									"src": "1281:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1466:91:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1572:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1607:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1599:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1598:17:0"
									},
									"src": "1566:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1626:88:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1729:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1749:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:15:0"
									},
									"src": "1723:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1780:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1817:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1801:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1848:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1832:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:57:0"
									},
									"src": "1774:84:0"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2065:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 50,
																"name": "initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2083:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2107:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2099:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 51,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2099:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2099:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2083:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206f776e776572206973207a65726f",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6",
																"typeString": "literal_string \"ERC20: ownwer is zero\""
															},
															"value": "ERC20: ownwer is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f675256d51e0baa3f6da9f01528ed2c1d6b34edead393e95591fe4dba13629a6",
																"typeString": "literal_string \"ERC20: ownwer is zero\""
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2075:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 60,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2164:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 59,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2145:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2145:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "2145:32:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1868:121:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "initializer",
												"nameLocations": [
													"2053:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 312,
												"src": "2053:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2053:11:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "2007:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2030:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2022:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2021:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2065:0:0"
									},
									"scope": 204,
									"src": "1998:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2276:173:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 71,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "2294:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2318:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 72,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2310:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2310:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2294:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 85,
												"nodeType": "IfStatement",
												"src": "2290:103:0",
												"trueBody": {
													"id": 84,
													"nodeType": "Block",
													"src": "2322:71:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 80,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2375:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2367:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 78,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2367:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2367:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 77,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2347:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2347:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 83,
															"nodeType": "RevertStatement",
															"src": "2340:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2425:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2406:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2406:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2406:32:0"
											}
										]
									},
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 69,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 68,
												"name": "onlyInitializing",
												"nameLocations": [
													"2259:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "2259:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2259:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "2203:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2236:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2228:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:22:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2276:0:0"
									},
									"scope": 204,
									"src": "2194:255:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "2572:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 94,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2586:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2586:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2586:13:0"
											},
											{
												"id": 97,
												"nodeType": "PlaceholderStatement",
												"src": "2613:1:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2459:83:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 99,
									"name": "onlyOwner",
									"nameLocation": "2560:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2569:2:0"
									},
									"src": "2551:74:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2770:101:0",
										"statements": [
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 114,
														"src": "2784:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 106,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 105,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2784:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2784:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2784:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 108,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2811:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2784:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 111,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "2852:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2854:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2852:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 104,
												"id": 113,
												"nodeType": "Return",
												"src": "2845:15:0"
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2635:71:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2724:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2761:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:9:0"
									},
									"scope": 204,
									"src": "2715:156:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "3003:133:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "3021:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3021:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 121,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "3032:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3032:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3021:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "IfStatement",
												"src": "3017:109:0",
												"trueBody": {
													"id": 129,
													"nodeType": "Block",
													"src": "3046:80:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 125,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "3098:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3098:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 124,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "3071:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3071:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 128,
															"nodeType": "RevertStatement",
															"src": "3064:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2881:68:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2967:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2978:2:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3003:0:0"
									},
									"scope": 204,
									"src": "2958:178:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3551:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3592:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3584:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 139,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3584:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3584:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 138,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "3565:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3565:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "3565:30:0"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "3146:342:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyOwner",
												"nameLocations": [
													"3541:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 99,
												"src": "3541:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3541:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3506:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3523:2:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3551:0:0"
									},
									"scope": 204,
									"src": "3497:109:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "3842:165:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "3860:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3880:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 155,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3872:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3872:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3860:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 168,
												"nodeType": "IfStatement",
												"src": "3856:99:0",
												"trueBody": {
													"id": 167,
													"nodeType": "Block",
													"src": "3884:71:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3937:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3929:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 161,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3929:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3929:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 160,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3909:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3909:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 166,
															"nodeType": "RevertStatement",
															"src": "3902:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 170,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3987:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 169,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "3968:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3968:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "3968:28:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "3616:147:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 152,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 151,
												"name": "onlyOwner",
												"nameLocations": [
													"3832:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 99,
												"src": "3832:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3832:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3781:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3807:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3799:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3798:18:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3842:0:0"
									},
									"scope": 204,
									"src": "3772:235:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "4241:205:0",
										"statements": [
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4278:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "4255:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 181,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 180,
																"name": "OwnableStorage",
																"nameLocations": [
																	"4255:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "4255:14:0"
															},
															"referencedDeclaration": 14,
															"src": "4255:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 183,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "4282:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4282:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4255:47:0"
											},
											{
												"assignments": [
													187
												],
												"declarations": [
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "4324:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "4316:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 186,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4316:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"expression": {
														"id": 188,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "4335:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4337:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "4335:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4316:27:0"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 191,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "4357:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4359:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "4357:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 194,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "4368:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4357:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "4357:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 198,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "4416:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4426:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "4395:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4395:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "4390:45:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "4017:152:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "4187:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4214:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4206:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4205:18:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4241:0:0"
									},
									"scope": 204,
									"src": "4178:268:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 205,
							"src": "810:3642:0",
							"usedErrors": [
								30,
								35,
								221,
								224
							],
							"usedEvents": [
								41,
								229
							]
						}
					],
					"src": "114:4339:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							472
						]
					},
					"id": 473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 207,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 215,
									"members": [
										{
											"constant": false,
											"id": 211,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 210,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 213,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 472,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 218,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 472,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 216,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 221,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 224,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 229,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 226,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													234
												],
												"declarations": [
													{
														"constant": false,
														"id": 234,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 233,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 232,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 215,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 215,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 235,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$215_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 238,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 240,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													245
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 244,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"expression": {
														"id": 246,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 211,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 249,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 251,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 254,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 257,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 259,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 264,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$472",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$472",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 262,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 272,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 274,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 277,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 279,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 282,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 239,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 296,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 295,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 214,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 297,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 298,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 239,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 310,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 299,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 214,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 305,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 308,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 312,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 318,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 317,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 215,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 215,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 322,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 320,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$215_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 323,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 325,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 211,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 327,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 334,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 333,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 330,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 332,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 335,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 338,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 341,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 347,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 348,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 355,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 354,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 359,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 314,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 362,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 365,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 367,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 371,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 378,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 377,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 374,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 376,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 472,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 385,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 384,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 215,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 215,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 387,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$215_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 390,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 214,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 395,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 392,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 394,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 397,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 400,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 399,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 405,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 409,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 408,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 417,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 416,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 415,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 422,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 472,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 432,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$215_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 211,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 431,
												"id": 435,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 429,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 472,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 443,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$215_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 214,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 442,
												"id": 446,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 472,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 454,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 218,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 453,
												"id": 455,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 472,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 464,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 466,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 462,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 465,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 469,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 215,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 215,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$215_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 472,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 473,
							"src": "2349:6929:1",
							"usedErrors": [
								221,
								224
							],
							"usedEvents": [
								229
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1779
						],
						"IERC1822Proxiable": [
							1348
						],
						"Initializable": [
							472
						],
						"UUPSUpgradeable": [
							654
						]
					},
					"id": 655,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 476,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 655,
							"sourceUnit": 1349,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 475,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1348,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 478,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 655,
							"sourceUnit": 1780,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 477,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 655,
							"sourceUnit": 473,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 479,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 472,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 482,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "1023:13:2"
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 484,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1348,
										"src": "1038:17:2"
									},
									"id": 485,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 481,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 654,
							"linearizedBaseContracts": [
								654,
								1348,
								472
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 492,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 654,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 487,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 490,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$654",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$654",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 489,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 488,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 491,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 496,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 654,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 494,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 499,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 504,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 501,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 507,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 510,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 512,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 515,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 518,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 520,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 523,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 522,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 654,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 529,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 528,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 654,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1347
									],
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 540,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1779_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1500,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 539,
												"id": 542,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 536,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 535,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 520,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 537,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 654,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 555,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 554,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 558,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 551,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 654,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "4623:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 570,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$654",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$654",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 572,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 574,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "4728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1779_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1531,
																"src": "4728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 577,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "4633:251:2",
												"trueBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "4823:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 580,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "4844:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 582,
															"nodeType": "RevertStatement",
															"src": "4837:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:2"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:2"
									},
									"scope": 654,
									"src": "4578:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5059:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 592,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$654",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$654",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 590,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 594,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "5090:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "5069:145:2",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "5098:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 596,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "5174:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "5167:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:2"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:2"
									},
									"scope": 654,
									"src": "5007:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:2"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:2"
									},
									"scope": 654,
									"src": "5603:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6117:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 641,
															"nodeType": "Block",
															"src": "6207:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 624,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 622,
																			"src": "6225:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 625,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1779,
																				"src": "6233:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1779_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1500,
																			"src": "6233:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 633,
																	"nodeType": "IfStatement",
																	"src": "6221:120:2",
																	"trueBody": {
																		"id": 632,
																		"nodeType": "Block",
																		"src": "6267:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 629,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 622,
																							"src": "6321:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 628,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 504,
																						"src": "6292:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 630,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 631,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 637,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 611,
																				"src": "6384:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 638,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 613,
																				"src": "6403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 634,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1779,
																				"src": "6354:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1779_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1594,
																			"src": "6354:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 640,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:2"
																}
															]
														},
														"errorName": "",
														"id": 642,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 623,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 622,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 642,
																	"src": "6193:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:2"
														},
														"src": "6184:235:2"
													},
													{
														"block": {
															"id": 649,
															"nodeType": "Block",
															"src": "6426:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 646,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 611,
																				"src": "6535:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 643,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1779,
																				"src": "6493:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1779_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1505,
																			"src": "6493:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 648,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:2"
																}
															]
														},
														"errorName": "",
														"id": 650,
														"nodeType": "TryCatchClause",
														"src": "6420:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 617,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "6149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 616,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "6131:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1348_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1348",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1347,
														"src": "6131:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 651,
												"nodeType": "TryStatement",
												"src": "6127:437:2"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6063:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6090:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:2"
									},
									"scope": 654,
									"src": "6032:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 655,
							"src": "986:5586:2",
							"usedErrors": [
								221,
								224,
								499,
								504,
								1505,
								1518,
								1903,
								2166
							],
							"usedEvents": [
								229,
								1325
							]
						}
					],
					"src": "115:6458:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1317
						],
						"ERC20Upgradeable": [
							1271
						],
						"IERC20": [
							1867
						],
						"IERC20Errors": [
							1390
						],
						"IERC20Metadata": [
							1893
						],
						"Initializable": [
							472
						]
					},
					"id": 1272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 656,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 658,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1272,
							"sourceUnit": 1868,
							"src": "131:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 657,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1867,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1272,
							"sourceUnit": 1894,
							"src": "202:97:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 659,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1893,
										"src": "210:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1272,
							"sourceUnit": 1318,
							"src": "300:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 661,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1317,
										"src": "308:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 664,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1272,
							"sourceUnit": 1486,
							"src": "371:83:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 663,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1390,
										"src": "379:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1272,
							"sourceUnit": 473,
							"src": "455:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 665,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 472,
										"src": "463:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "1319:13:3"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:3"
								},
								{
									"baseName": {
										"id": 670,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1317,
										"src": "1334:18:3"
									},
									"id": 671,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:3"
								},
								{
									"baseName": {
										"id": 672,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1867,
										"src": "1354:6:3"
									},
									"id": 673,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:3"
								},
								{
									"baseName": {
										"id": 674,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1893,
										"src": "1362:14:3"
									},
									"id": 675,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:3"
								},
								{
									"baseName": {
										"id": 676,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1390,
										"src": "1378:12:3"
									},
									"id": 677,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:3"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1271,
							"linearizedBaseContracts": [
								1271,
								1390,
								1893,
								1867,
								1317,
								472
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 695,
									"members": [
										{
											"constant": false,
											"id": 682,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "1495:45:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 681,
												"keyName": "account",
												"keyNameLocation": "1511:7:3",
												"keyType": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 688,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "1551:75:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 687,
												"keyName": "account",
												"keyNameLocation": "1567:7:3",
												"keyType": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 686,
													"keyName": "spender",
													"keyNameLocation": "1594:7:3",
													"keyType": {
														"id": 684,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 685,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 690,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "1637:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 692,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "1668:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 691,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 694,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "1690:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 693,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:3",
									"nodeType": "StructDefinition",
									"scope": 1271,
									"src": "1465:246:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 698,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1271,
									"src": "1826:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 696,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 697,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "2021:79:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:3",
													"nodeType": "YulBlock",
													"src": "2040:54:3",
													"statements": [
														{
															"nativeSrc": "2054:30:3",
															"nodeType": "YulAssignment",
															"src": "2054:30:3",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:3",
																"nodeType": "YulIdentifier",
																"src": "2064:20:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 698,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:3",
														"valueSize": 1
													}
												],
												"id": 704,
												"nodeType": "InlineAssembly",
												"src": "2031:63:3"
											}
										]
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:3"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1997:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 701,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 700,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 695,
														"src": "1997:12:3"
													},
													"referencedDeclaration": 695,
													"src": "1997:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:3"
									},
									"scope": 1271,
									"src": "1947:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "2355:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "2388:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 718,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "2395:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 716,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "2365:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "2365:38:3"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "2106:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 714,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 713,
												"name": "onlyInitializing",
												"nameLocations": [
													"2338:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "2338:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:16:3"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2272:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2299:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "2285:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 708,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2285:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2320:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "2306:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 710,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:44:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:3"
									},
									"scope": 1271,
									"src": "2263:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "2518:114:3",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2549:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "2528:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 732,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 731,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2528:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 695,
																"src": "2528:12:3"
															},
															"referencedDeclaration": 695,
															"src": "2528:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 734,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2553:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$695_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:43:3"
											},
											{
												"expression": {
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 737,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "2581:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2583:5:3",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 692,
														"src": "2581:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 740,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "2591:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2581:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "2581:15:3"
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 743,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "2606:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2608:7:3",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 694,
														"src": "2606:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 746,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2618:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2606:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "2606:19:3"
											}
										]
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 729,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 728,
												"name": "onlyInitializing",
												"nameLocations": [
													"2501:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "2501:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2501:16:3"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2425:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2462:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2448:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2448:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2483:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2469:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 725,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:44:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:3"
									},
									"scope": 1271,
									"src": "2416:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1880
									],
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "2757:84:3",
										"statements": [
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2788:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "2767:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 757,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 756,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2767:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 695,
																"src": "2767:12:3"
															},
															"referencedDeclaration": 695,
															"src": "2767:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 759,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2792:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$695_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 762,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "2827:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2829:5:3",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 692,
													"src": "2827:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 755,
												"id": 764,
												"nodeType": "Return",
												"src": "2820:14:3"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "2638:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2706:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:3"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2742:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 753,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:3"
									},
									"scope": 1271,
									"src": "2697:144:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1886
									],
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "3016:86:3",
										"statements": [
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3047:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 781,
														"src": "3026:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 773,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 772,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3026:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 695,
																"src": "3026:12:3"
															},
															"referencedDeclaration": 695,
															"src": "3026:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 775,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "3051:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$695_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 778,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3086:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3088:7:3",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 694,
													"src": "3086:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 771,
												"id": 780,
												"nodeType": "Return",
												"src": "3079:16:3"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "2847:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2963:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:3"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "3001:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 769,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3001:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:3"
									},
									"scope": 1271,
									"src": "2954:148:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1892
									],
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "3791:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3808:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 787,
												"id": 789,
												"nodeType": "Return",
												"src": "3801:9:3"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "3108:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3744:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:3"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "3784:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 785,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3784:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:7:3"
									},
									"scope": 1271,
									"src": "3735:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1816
									],
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "3938:91:3",
										"statements": [
											{
												"assignments": [
													799
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3969:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "3948:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 798,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 797,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3948:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 695,
																"src": "3948:12:3"
															},
															"referencedDeclaration": 695,
															"src": "3948:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 800,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "3973:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$695_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3948:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 803,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4008:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4010:12:3",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 690,
													"src": "4008:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 796,
												"id": 805,
												"nodeType": "Return",
												"src": "4001:21:3"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "3823:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3886:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3897:2:3"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "3929:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:9:3"
									},
									"scope": 1271,
									"src": "3877:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1824
									],
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "4161:97:3",
										"statements": [
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4192:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "4171:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 816,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 815,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4171:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 695,
																"src": "4171:12:3"
															},
															"referencedDeclaration": 695,
															"src": "4171:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 818,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "4196:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$695_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4196:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4171:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 821,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4231:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4233:9:3",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 682,
														"src": "4231:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 824,
													"indexExpression": {
														"id": 823,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4243:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4231:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 814,
												"id": 825,
												"nodeType": "Return",
												"src": "4224:27:3"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "4035:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4096:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4114:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4106:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4106:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4105:17:3"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4152:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:9:3"
									},
									"scope": 1271,
									"src": "4087:171:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1834
									],
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "4528:103:3",
										"statements": [
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4546:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "4538:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 837,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 839,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "4554:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4554:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "4586:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "4593:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "4597:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4576:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "4576:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4620:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 836,
												"id": 849,
												"nodeType": "Return",
												"src": "4613:11:3"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "4264:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4462:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4479:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4471:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4491:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4483:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:27:3"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4522:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 834,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4522:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4521:6:3"
									},
									"scope": 1271,
									"src": "4453:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1844
									],
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "4778:106:3",
										"statements": [
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4809:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "4788:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 862,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 861,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4788:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 695,
																"src": "4788:12:3"
															},
															"referencedDeclaration": 695,
															"src": "4788:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 866,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 864,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "4813:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$695_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4813:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4788:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 867,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "4848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4850:11:3",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 688,
															"src": "4848:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 870,
														"indexExpression": {
															"id": 869,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "4862:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4848:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 872,
													"indexExpression": {
														"id": 871,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "4869:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4848:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 860,
												"id": 873,
												"nodeType": "Return",
												"src": "4841:36:3"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "4637:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4698:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4716:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4708:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4708:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4731:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4723:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4707:32:3"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4769:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:9:3"
									},
									"scope": 1271,
									"src": "4689:195:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1854
									],
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "5270:107:3",
										"statements": [
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5288:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "5280:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 885,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5280:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 889,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 887,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "5296:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5296:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5280:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "5327:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "5334:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "5343:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1154,
															1222
														],
														"referencedDeclaration": 1154,
														"src": "5318:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5318:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "5318:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 884,
												"id": 897,
												"nodeType": "Return",
												"src": "5359:11:3"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "4890:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5200:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5216:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "5208:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5233:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "5225:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:32:3"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "5264:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5264:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5263:6:3"
									},
									"scope": 1271,
									"src": "5191:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1866
									],
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "6062:151:3",
										"statements": [
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6080:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "6072:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 911,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6072:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 913,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "6090:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6090:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6072:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "6128:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "6134:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "6143:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "6112:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "6112:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "6169:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "6175:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "6179:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "6159:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6159:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "6159:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6202:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 910,
												"id": 929,
												"nodeType": "Return",
												"src": "6195:11:3"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "5383:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5978:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5999:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "5991:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6013:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6005:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6025:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6017:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5990:41:3"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6056:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 908,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6056:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:6:3"
									},
									"scope": 1271,
									"src": "5969:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "6663:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 941,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "6677:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6693:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6685:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 942,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6685:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6685:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6677:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "IfStatement",
												"src": "6673:86:3",
												"trueBody": {
													"id": 954,
													"nodeType": "Block",
													"src": "6697:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6745:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6737:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 948,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6737:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6737:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 947,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "6718:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6718:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 953,
															"nodeType": "RevertStatement",
															"src": "6711:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 956,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "6772:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6778:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 957,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6778:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6778:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6772:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"nodeType": "IfStatement",
												"src": "6768:86:3",
												"trueBody": {
													"id": 969,
													"nodeType": "Block",
													"src": "6790:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 965,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6840:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6832:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 963,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6832:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6832:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 962,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6811:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6811:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 968,
															"nodeType": "RevertStatement",
															"src": "6804:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 972,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "6871:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "6877:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "6881:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 971,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "6863:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6863:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "6863:24:3"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "6219:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6595:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6613:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "6605:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6605:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6627:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "6619:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6639:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "6631:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6604:41:3"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6663:0:3"
									},
									"scope": 1271,
									"src": "6586:308:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "7284:1095:3",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7315:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "7294:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 989,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 988,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7294:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 695,
																"src": "7294:12:3"
															},
															"referencedDeclaration": 695,
															"src": "7294:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 991,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "7319:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$695_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7319:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7294:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "7351:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7367:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7359:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 995,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7359:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7359:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7351:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1036,
													"nodeType": "Block",
													"src": "7527:366:3",
													"statements": [
														{
															"assignments": [
																1008
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1008,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7549:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1036,
																	"src": "7541:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1007,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7541:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1013,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1009,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "7563:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7565:9:3",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 682,
																	"src": "7563:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1012,
																"indexExpression": {
																	"id": 1011,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "7575:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7563:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7541:39:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1014,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "7598:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1015,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "7612:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7598:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1024,
															"nodeType": "IfStatement",
															"src": "7594:115:3",
															"trueBody": {
																"id": 1023,
																"nodeType": "Block",
																"src": "7619:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1018,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 981,
																					"src": "7669:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1019,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "7675:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 985,
																					"src": "7688:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1017,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1360,
																				"src": "7644:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7644:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1022,
																		"nodeType": "RevertStatement",
																		"src": "7637:57:3"
																	}
																]
															}
														},
														{
															"id": 1035,
															"nodeType": "UncheckedBlock",
															"src": "7722:161:3",
															"statements": [
																{
																	"expression": {
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1025,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 990,
																					"src": "7829:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7831:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 682,
																				"src": "7829:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1029,
																			"indexExpression": {
																				"id": 1027,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 981,
																				"src": "7841:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7829:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1030,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "7849:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1031,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 985,
																				"src": "7863:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7849:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7829:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1034,
																	"nodeType": "ExpressionStatement",
																	"src": "7829:39:3"
																}
															]
														}
													]
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "7347:546:3",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "7371:150:3",
													"statements": [
														{
															"expression": {
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1000,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "7487:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7489:12:3",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 690,
																	"src": "7487:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1003,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "7505:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7487:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "7487:23:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1038,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "7907:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7921:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7913:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1039,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7913:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7913:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7907:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "8124:208:3",
													"statements": [
														{
															"id": 1060,
															"nodeType": "UncheckedBlock",
															"src": "8138:184:3",
															"statements": [
																{
																	"expression": {
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1052,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 990,
																					"src": "8283:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1055,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8285:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 682,
																				"src": "8283:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1056,
																			"indexExpression": {
																				"id": 1054,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "8295:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8283:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1057,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "8302:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8283:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1059,
																	"nodeType": "ExpressionStatement",
																	"src": "8283:24:3"
																}
															]
														}
													]
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "7903:429:3",
												"trueBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "7925:193:3",
													"statements": [
														{
															"id": 1050,
															"nodeType": "UncheckedBlock",
															"src": "7939:169:3",
															"statements": [
																{
																	"expression": {
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1044,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "8070:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8072:12:3",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 690,
																			"src": "8070:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1047,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "8088:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8070:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1049,
																	"nodeType": "ExpressionStatement",
																	"src": "8070:23:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1064,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "8356:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "8362:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "8366:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1063,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "8347:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8347:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "EmitStatement",
												"src": "8342:30:3"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "6900:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7218:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7234:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "7226:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7226:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7248:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "7240:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7240:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7260:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "7252:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7252:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:41:3"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7284:0:3"
									},
									"scope": 1271,
									"src": "7209:1170:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "8778:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1078,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "8792:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8811:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8803:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1079,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8803:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8803:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8792:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "8788:91:3",
												"trueBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "8815:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8865:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8857:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1085,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8857:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8857:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1084,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "8836:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8836:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1090,
															"nodeType": "RevertStatement",
															"src": "8829:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8904:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8896:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1094,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8896:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8896:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "8908:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "8917:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "8888:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "8888:35:3"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "8385:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8731:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "8737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8762:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "8754:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:32:3"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8778:0:3"
									},
									"scope": 1271,
									"src": "8722:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "9304:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1111,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "9318:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9337:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9329:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1112,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9329:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9329:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9318:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1125,
												"nodeType": "IfStatement",
												"src": "9314:89:3",
												"trueBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "9341:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9389:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9381:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1118,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9381:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9381:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1117,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "9362:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9362:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1123,
															"nodeType": "RevertStatement",
															"src": "9355:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1127,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "9420:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9437:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9429:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1128,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9429:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9429:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "9441:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "9412:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9412:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "9412:35:3"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "8936:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9257:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9271:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "9263:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9263:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9288:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "9280:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9280:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9262:32:3"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9304:0:3"
									},
									"scope": 1271,
									"src": "9248:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "10064:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1147,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "10083:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "10090:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "10099:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10106:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1146,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1154,
															1222
														],
														"referencedDeclaration": 1222,
														"src": "10074:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10074:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "10074:37:3"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "9460:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9999:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10016:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "10008:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "10023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10048:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "10040:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10040:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10007:47:3"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10064:0:3"
									},
									"scope": 1271,
									"src": "9990:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "11063:389:3",
										"statements": [
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11094:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1221,
														"src": "11073:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1167,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1166,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11073:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 695,
																"src": "11073:12:3"
															},
															"referencedDeclaration": 695,
															"src": "11073:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1169,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "11098:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$695_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11098:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11073:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "11130:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11147:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11139:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11139:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11139:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11130:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "11126:89:3",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "11151:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11201:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11193:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1179,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11193:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11193:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "11172:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11172:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1184,
															"nodeType": "RevertStatement",
															"src": "11165:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1187,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "11228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11247:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11239:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1188,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11239:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11239:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11228:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "11224:90:3",
												"trueBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "11251:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11300:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11292:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1194,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11292:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11292:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1193,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "11272:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11272:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1199,
															"nodeType": "RevertStatement",
															"src": "11265:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1202,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "11323:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$695_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11325:11:3",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 688,
																"src": "11323:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1207,
															"indexExpression": {
																"id": 1204,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "11337:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11323:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1208,
														"indexExpression": {
															"id": 1205,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "11344:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11323:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1209,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "11355:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11323:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "11323:37:3"
											},
											{
												"condition": {
													"id": 1212,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1163,
													"src": "11374:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "11370:76:3",
												"trueBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "11385:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1214,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "11413:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1215,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "11420:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1216,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1161,
																		"src": "11429:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1213,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "11404:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1218,
															"nodeType": "EmitStatement",
															"src": "11399:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "10124:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10974:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10991:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "10983:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10983:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11006:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "10998:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10998:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11023:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "11015:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11015:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11035:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "11030:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11030:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10982:63:3"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11063:0:3"
									},
									"scope": 1271,
									"src": "10965:487:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "11823:387:3",
										"statements": [
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11841:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1269,
														"src": "11833:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11833:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"arguments": [
														{
															"id": 1235,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "11870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "11877:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1234,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "11860:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11860:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11833:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1239,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "11899:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11923:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1241,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11923:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1240,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11918:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11918:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11932:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11918:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11899:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "11895:309:3",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "11937:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1246,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "11955:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1247,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "11974:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11955:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1256,
															"nodeType": "IfStatement",
															"src": "11951:130:3",
															"trueBody": {
																"id": 1255,
																"nodeType": "Block",
																"src": "11981:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1250,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1227,
																					"src": "12033:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1251,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1233,
																					"src": "12042:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1252,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1229,
																					"src": "12060:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1249,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1379,
																				"src": "12006:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12006:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1254,
																		"nodeType": "RevertStatement",
																		"src": "11999:67:3"
																	}
																]
															}
														},
														{
															"id": 1266,
															"nodeType": "UncheckedBlock",
															"src": "12094:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1258,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1225,
																				"src": "12131:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1259,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1227,
																				"src": "12138:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1260,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1233,
																					"src": "12147:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1261,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1229,
																					"src": "12166:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12147:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12173:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1257,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1154,
																				1222
																			],
																			"referencedDeclaration": 1222,
																			"src": "12122:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12122:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1265,
																	"nodeType": "ExpressionStatement",
																	"src": "12122:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "11458:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11743:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11767:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "11759:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "11774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11774:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11799:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "11791:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11758:47:3"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11823:0:3"
									},
									"scope": 1271,
									"src": "11734:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1272,
							"src": "1281:10931:3",
							"usedErrors": [
								221,
								224,
								1360,
								1365,
								1370,
								1379,
								1384,
								1389
							],
							"usedEvents": [
								229,
								1801,
								1810
							]
						}
					],
					"src": "105:12108:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1317
						],
						"Initializable": [
							472
						]
					},
					"id": 1318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1318,
							"sourceUnit": 473,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1274,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 472,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1277,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "728:13:4"
									},
									"id": 1278,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1276,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1317,
							"linearizedBaseContracts": [
								1317,
								472
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1280,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 1317,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1287,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1286,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 1317,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1295,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1297,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 1317,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1304,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1306,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 1317,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1312,
												"id": 1314,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 1317,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1318,
							"src": "688:505:4",
							"usedErrors": [
								221,
								224
							],
							"usedEvents": [
								229
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1338
						]
					},
					"id": 1339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1319,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1320,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:5",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1338,
							"linearizedBaseContracts": [
								1338
							],
							"name": "IERC1967",
							"nameLocation": "245:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:5",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1325,
									"name": "Upgraded",
									"nameLocation": "339:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "348:30:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:5"
									},
									"src": "333:47:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:5",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1332,
									"name": "AdminChanged",
									"nameLocation": "464:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "477:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "500:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:5"
									},
									"src": "458:60:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:5",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1337,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "609:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:5"
									},
									"src": "588:45:5"
								}
							],
							"scope": 1339,
							"src": "235:400:5",
							"usedErrors": [],
							"usedEvents": [
								1325,
								1332,
								1337
							]
						}
					],
					"src": "107:529:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1348
						]
					},
					"id": 1349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1341,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:6",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1348,
							"linearizedBaseContracts": [
								1348
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:6",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:6"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "869:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:6"
									},
									"scope": 1348,
									"src": "821:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1349,
							"src": "344:536:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1485
						],
						"IERC20Errors": [
							1390
						],
						"IERC721Errors": [
							1438
						]
					},
					"id": 1486,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1350,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1351,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:7",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1390,
							"linearizedBaseContracts": [
								1390
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1360,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "654:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "670:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "687:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:7"
									},
									"src": "623:80:7"
								},
								{
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1365,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "891:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:7"
									},
									"src": "866:41:7"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1370,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1104:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:7"
									},
									"src": "1077:45:7"
								},
								{
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:7",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1379,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1511:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1528:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1547:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:7"
									},
									"src": "1478:85:7"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1384,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1775:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:7"
									},
									"src": "1748:45:7"
								},
								{
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:7",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1389,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2025:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:7"
									},
									"src": "1999:43:7"
								}
							],
							"scope": 1486,
							"src": "280:1764:7",
							"usedErrors": [
								1360,
								1365,
								1370,
								1379,
								1384,
								1389
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1391,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:7",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1438,
							"linearizedBaseContracts": [
								1438
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:7",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1396,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "2469:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:7"
									},
									"src": "2444:40:7"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:7",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1401,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2656:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:7"
									},
									"src": "2627:46:7"
								},
								{
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:7",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1410,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "3000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "3016:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "3033:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:7"
									},
									"src": "2973:75:7"
								},
								{
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1415,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "3237:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:7"
									},
									"src": "3211:42:7"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1420,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "3451:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:7"
									},
									"src": "3423:46:7"
								},
								{
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1427,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3760:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3778:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:7"
									},
									"src": "3727:68:7"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1432,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "4008:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:7"
									},
									"src": "3980:46:7"
								},
								{
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1437,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "4262:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:7"
									},
									"src": "4234:46:7"
								}
							],
							"scope": 1486,
							"src": "2190:2092:7",
							"usedErrors": [
								1396,
								1401,
								1410,
								1415,
								1420,
								1427,
								1432,
								1437
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1439,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:7",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1485,
							"linearizedBaseContracts": [
								1485
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1450,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "4860:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "4876:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "4893:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "4909:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:7"
									},
									"src": "4827:99:7"
								},
								{
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1455,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "5116:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:7"
									},
									"src": "5089:43:7"
								},
								{
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1460,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "5331:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:7"
									},
									"src": "5302:47:7"
								},
								{
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1467,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "5651:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "5669:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:7"
									},
									"src": "5616:68:7"
								},
								{
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1472,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5898:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:7"
									},
									"src": "5869:47:7"
								},
								{
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1477,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "6153:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:7"
									},
									"src": "6124:47:7"
								},
								{
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:7",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1484,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "6494:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "6513:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:7"
									},
									"src": "6462:73:7"
								}
							],
							"scope": 1486,
							"src": "4430:2107:7",
							"usedErrors": [
								1450,
								1455,
								1460,
								1467,
								1472,
								1477,
								1484
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2153
						],
						"ERC1967Utils": [
							1779
						],
						"IBeacon": [
							1789
						],
						"IERC1967": [
							1338
						],
						"StorageSlot": [
							2299
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1487,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1489,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 1790,
							"src": "140:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1488,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1789,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1491,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 1339,
							"src": "187:55:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1490,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1338,
										"src": "195:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 2154,
							"src": "243:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1492,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2153,
										"src": "251:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 2300,
							"src": "292:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1494,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2299,
										"src": "300:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1496,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:8",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:8",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1500,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1779,
									"src": "763:114:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1498,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1499,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:8",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1505,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "993:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:8"
									},
									"src": "958:59:8"
								},
								{
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:8",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1510,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1114:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:8"
									},
									"src": "1088:41:8"
								},
								{
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:8",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1515,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1228:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:8"
									},
									"src": "1201:43:8"
								},
								{
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:8",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1518,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:8"
									},
									"src": "1337:26:8"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "1502:77:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1526,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "1546:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1524,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "1519:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2299_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2210,
															"src": "1519:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2181_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2181_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2180,
													"src": "1519:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1529,
												"nodeType": "Return",
												"src": "1512:60:8"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:8",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:8"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "1493:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:8"
									},
									"scope": 1779,
									"src": "1441:138:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "1734:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1537,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "1748:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1547,
												"nodeType": "IfStatement",
												"src": "1744:119:8",
												"trueBody": {
													"id": 1546,
													"nodeType": "Block",
													"src": "1784:79:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1543,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "1834:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1542,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "1805:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1545,
															"nodeType": "RevertStatement",
															"src": "1798:54:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1551,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "1899:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1548,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2299,
																	"src": "1872:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2299_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2210,
																"src": "1872:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2181_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2181_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2180,
														"src": "1872:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1554,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "1928:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:8"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:8",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1699:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:8"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:8"
									},
									"scope": 1779,
									"src": "1671:281:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "2345:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1567,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2374:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1566,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "2355:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1573,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2425:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1570,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "2407:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1338_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:8",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1325,
														"src": "2407:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "EmitStatement",
												"src": "2402:41:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1576,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "2458:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1591,
													"nodeType": "Block",
													"src": "2559:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1588,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "2573:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1590,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:8"
														}
													]
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "2454:148:8",
												"trueBody": {
													"id": 1587,
													"nodeType": "Block",
													"src": "2475:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1583,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "2518:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1584,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "2537:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1580,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "2489:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2153_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2070,
																	"src": "2489:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1586,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:8",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "2290:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "2317:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:8"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:8"
									},
									"scope": 1779,
									"src": "2264:344:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:8",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1598,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1779,
									"src": "2829:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1596,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1597,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "3339:68:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1606,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "3383:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1604,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "3356:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2299_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2210,
															"src": "3356:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2181_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2181_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2180,
													"src": "3356:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1609,
												"nodeType": "Return",
												"src": "3349:51:8"
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:8",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:8"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3330:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:8"
									},
									"scope": 1779,
									"src": "3287:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "3535:172:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1617,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "3549:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1618,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1631,
												"nodeType": "IfStatement",
												"src": "3545:91:8",
												"trueBody": {
													"id": 1630,
													"nodeType": "Block",
													"src": "3573:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1624,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1623,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "3594:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1629,
															"nodeType": "RevertStatement",
															"src": "3587:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1635,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "3672:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1632,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2299,
																	"src": "3645:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2299_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2210,
																"src": "3645:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2181_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2181_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1637,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2180,
														"src": "3645:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1638,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "3692:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:8"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:8",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "3509:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:8"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:8"
									},
									"scope": 1779,
									"src": "3490:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "3875:94:8",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1651,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "3912:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1653,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "3924:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1648,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3890:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1338_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:8",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1332,
														"src": "3890:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "EmitStatement",
												"src": "3885:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1657,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "3953:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1656,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "3943:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:8"
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:8",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3848:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:8"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:8"
									},
									"scope": 1779,
									"src": "3827:142:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:8",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1665,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1779,
									"src": "4246:106:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1663,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1664,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "4468:69:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1673,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1665,
																"src": "4512:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1671,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "4485:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2299_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2210,
															"src": "4485:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2181_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2181_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2180,
													"src": "4485:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1670,
												"id": 1676,
												"nodeType": "Return",
												"src": "4478:52:8"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:8",
										"text": " @dev Returns the current beacon."
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:8"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4459:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:8"
									},
									"scope": 1779,
									"src": "4415:122:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "4667:390:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1684,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "4681:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1694,
												"nodeType": "IfStatement",
												"src": "4677:95:8",
												"trueBody": {
													"id": 1693,
													"nodeType": "Block",
													"src": "4709:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1690,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "4751:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1689,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "4730:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1692,
															"nodeType": "RevertStatement",
															"src": "4723:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1698,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "4809:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1695,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2299,
																	"src": "4782:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2299_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2210,
																"src": "4782:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2181_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2181_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2180,
														"src": "4782:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1701,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "4830:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:8"
											},
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:8",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "4850:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1704,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1711,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1707,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "4889:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1706,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "4881:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1789_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1789",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:8",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1788,
														"src": "4881:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1712,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "4930:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1722,
												"nodeType": "IfStatement",
												"src": "4926:125:8",
												"trueBody": {
													"id": 1721,
													"nodeType": "Block",
													"src": "4969:82:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1718,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "5019:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1717,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "4990:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1720,
															"nodeType": "RevertStatement",
															"src": "4983:57:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:8",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4640:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:8"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:8"
									},
									"scope": 1779,
									"src": "4620:437:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "5661:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1733,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "5682:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1732,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "5671:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1739,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "5731:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1736,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "5707:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1338_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:8",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1337,
														"src": "5707:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1741,
												"nodeType": "EmitStatement",
												"src": "5702:39:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1742,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "5756:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1761,
													"nodeType": "Block",
													"src": "5875:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1758,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "5889:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1760,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:8"
														}
													]
												},
												"id": 1762,
												"nodeType": "IfStatement",
												"src": "5752:166:8",
												"trueBody": {
													"id": 1757,
													"nodeType": "Block",
													"src": "5773:96:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1750,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1727,
																						"src": "5824:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1749,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1789,
																					"src": "5816:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1789_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1789",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:8",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1788,
																			"src": "5816:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1754,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1729,
																		"src": "5853:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1746,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "5787:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2153_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2070,
																	"src": "5787:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1756,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:8",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "5614:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "5633:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:8"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:8"
									},
									"scope": 1779,
									"src": "5582:342:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "6149:86:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1768,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1776,
												"nodeType": "IfStatement",
												"src": "6159:70:8",
												"trueBody": {
													"id": 1775,
													"nodeType": "Block",
													"src": "6178:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1772,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "6199:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1774,
															"nodeType": "RevertStatement",
															"src": "6192:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:8",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:8"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:8"
									},
									"scope": 1779,
									"src": "6113:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1780,
							"src": "496:5741:8",
							"usedErrors": [
								1505,
								1510,
								1515,
								1518
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1789
						]
					},
					"id": 1790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1782,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:9",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1789,
							"linearizedBaseContracts": [
								1789
							],
							"name": "IBeacon",
							"nameLocation": "224:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:9",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:9"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "460:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:9"
									},
									"scope": 1789,
									"src": "411:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1790,
							"src": "214:257:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1867
						]
					},
					"id": 1868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1792,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:10",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1867,
							"linearizedBaseContracts": [
								1867
							],
							"name": "IERC20",
							"nameLocation": "214:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:10",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1801,
									"name": "Transfer",
									"nameLocation": "396:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "405:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "427:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "447:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:10"
									},
									"src": "390:72:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:10",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1810,
									"name": "Approval",
									"nameLocation": "627:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "636:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "659:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "684:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:10"
									},
									"src": "621:78:10"
								},
								{
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:10",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:10"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "821:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:10"
									},
									"scope": 1867,
									"src": "775:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:10",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "931:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:10"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "971:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:10"
									},
									"scope": 1867,
									"src": "912:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:10",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1222:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1234:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:10"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1267:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:10"
									},
									"scope": 1867,
									"src": "1204:69:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:10",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1567:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1582:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:10"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1622:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:10"
									},
									"scope": 1867,
									"src": "1548:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:10",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "2326:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "2343:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:10"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "2376:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:10"
									},
									"scope": 1867,
									"src": "2309:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:10",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2712:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2726:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2738:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:10"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2771:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:10"
									},
									"scope": 1867,
									"src": "2690:87:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1868,
							"src": "204:2575:10",
							"usedErrors": [],
							"usedEvents": [
								1801,
								1810
							]
						}
					],
					"src": "106:2674:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1867
						],
						"IERC20Metadata": [
							1893
						]
					},
					"id": 1894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1894,
							"sourceUnit": 1868,
							"src": "151:37:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1870,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1867,
										"src": "159:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1873,
										"name": "IERC20",
										"nameLocations": [
											"306:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1867,
										"src": "306:6:11"
									},
									"id": 1874,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:11"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1872,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:11",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1893,
							"linearizedBaseContracts": [
								1893,
								1867
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:11",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:11"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "417:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1877,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:11"
									},
									"scope": 1893,
									"src": "378:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:11",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:11"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "540:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1883,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:11"
									},
									"scope": 1893,
									"src": "499:56:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:11",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:11"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "674:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1889,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:11"
									},
									"scope": 1893,
									"src": "631:50:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1894,
							"src": "278:405:11",
							"usedErrors": [],
							"usedEvents": [
								1801,
								1810
							]
						}
					],
					"src": "125:559:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2153
						],
						"Errors": [
							2175
						]
					},
					"id": 2154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1895,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2154,
							"sourceUnit": 2176,
							"src": "127:36:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1896,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2175,
										"src": "135:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1898,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:12",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2153,
							"linearizedBaseContracts": [
								2153
							],
							"name": "Address",
							"nameLocation": "241:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:12",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1903,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "358:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:12"
									},
									"src": "335:39:12"
								},
								{
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "1361:294:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1913,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2153",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2153",
																		"typeString": "library Address"
																	}
																],
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:12",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1916,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "1399:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1930,
												"nodeType": "IfStatement",
												"src": "1371:125:12",
												"trueBody": {
													"id": 1929,
													"nodeType": "Block",
													"src": "1407:89:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1923,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2153",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2153",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1921,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:12",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1926,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1908,
																		"src": "1478:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1918,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2175,
																		"src": "1428:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2175_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:12",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2163,
																	"src": "1428:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1928,
															"nodeType": "RevertStatement",
															"src": "1421:64:12"
														}
													]
												}
											},
											{
												"assignments": [
													1932,
													1934
												],
												"declarations": [
													{
														"constant": false,
														"id": 1932,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1950,
														"src": "1507:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1931,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1934,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1950,
														"src": "1521:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1933,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1941,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1935,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "1548:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1937,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "1570:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:12"
											},
											{
												"condition": {
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:12",
													"subExpression": {
														"id": 1942,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "1596:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1949,
												"nodeType": "IfStatement",
												"src": "1591:58:12",
												"trueBody": {
													"id": 1948,
													"nodeType": "Block",
													"src": "1605:44:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1945,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1934,
																		"src": "1627:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1944,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "1619:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1947,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:12",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1309:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1336:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:12"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:12"
									},
									"scope": 2153,
									"src": "1290:365:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "2589:62:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1962,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "2628:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1963,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "2636:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1961,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "2606:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1960,
												"id": 1966,
												"nodeType": "Return",
												"src": "2599:45:12"
											}
										]
									},
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:12",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2522:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2538:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:12"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2575:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1958,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:12"
									},
									"scope": 2153,
									"src": "2500:151:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "3088:294:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1982,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2153",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2153",
																		"typeString": "library Address"
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1980,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:12",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1985,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "3126:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1999,
												"nodeType": "IfStatement",
												"src": "3098:123:12",
												"trueBody": {
													"id": 1998,
													"nodeType": "Block",
													"src": "3133:88:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1992,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2153",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2153",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1990,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:12",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1995,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "3204:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1987,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2175,
																		"src": "3154:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2175_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:12",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2163,
																	"src": "3154:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1997,
															"nodeType": "RevertStatement",
															"src": "3147:63:12"
														}
													]
												}
											},
											{
												"assignments": [
													2001,
													2003
												],
												"declarations": [
													{
														"constant": false,
														"id": 2001,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2017,
														"src": "3231:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2000,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2003,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2017,
														"src": "3245:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2002,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2010,
												"initialValue": {
													"arguments": [
														{
															"id": 2008,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "3298:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2004,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "3272:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2006,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "3291:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2012,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "3347:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2013,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "3355:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2014,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "3364:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2011,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "3320:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1979,
												"id": 2016,
												"nodeType": "Return",
												"src": "3313:62:12"
											}
										]
									},
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "3006:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "3022:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "3041:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:12"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "3074:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:12"
									},
									"scope": 2153,
									"src": "2975:407:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "3621:154:12",
										"statements": [
											{
												"assignments": [
													2029,
													2031
												],
												"declarations": [
													{
														"constant": false,
														"id": 2029,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2043,
														"src": "3632:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2028,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2031,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2043,
														"src": "3646:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2030,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2036,
												"initialValue": {
													"arguments": [
														{
															"id": 2034,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "3691:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2032,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "3673:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:12",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2038,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "3740:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2039,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "3748:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2040,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "3757:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2037,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "3713:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2027,
												"id": 2042,
												"nodeType": "Return",
												"src": "3706:62:12"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "3549:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "3565:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:12"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "3607:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:12"
									},
									"scope": 2153,
									"src": "3521:254:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2069,
										"nodeType": "Block",
										"src": "4013:156:12",
										"statements": [
											{
												"assignments": [
													2055,
													2057
												],
												"declarations": [
													{
														"constant": false,
														"id": 2055,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2069,
														"src": "4024:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2054,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2057,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2069,
														"src": "4038:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2056,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2062,
												"initialValue": {
													"arguments": [
														{
															"id": 2060,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "4085:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2058,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "4065:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:12",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2064,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "4134:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2065,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "4142:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2066,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "4151:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2063,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "4107:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2068,
												"nodeType": "Return",
												"src": "4100:62:12"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "3946:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "3962:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:12"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "3999:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2051,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:12"
									},
									"scope": 2153,
									"src": "3916:253:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "4595:424:12",
										"statements": [
											{
												"condition": {
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:12",
													"subExpression": {
														"id": 2082,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2075,
														"src": "4610:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2107,
													"nodeType": "Block",
													"src": "4669:344:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2089,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2077,
																			"src": "4857:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2093,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2073,
																				"src": "4883:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:12",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2104,
															"nodeType": "IfStatement",
															"src": "4853:119:12",
															"trueBody": {
																"id": 2103,
																"nodeType": "Block",
																"src": "4908:64:12",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2100,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2073,
																					"src": "4950:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2099,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1903,
																				"src": "4933:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2102,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:12"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2105,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "4992:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2081,
															"id": 2106,
															"nodeType": "Return",
															"src": "4985:17:12"
														}
													]
												},
												"id": 2108,
												"nodeType": "IfStatement",
												"src": "4605:408:12",
												"trueBody": {
													"id": 2088,
													"nodeType": "Block",
													"src": "4619:44:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2085,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "4641:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2084,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "4633:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2087,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:12",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "4482:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "4506:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2074,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "4528:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:12"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "4581:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:12"
									},
									"scope": 2153,
									"src": "4437:582:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "5323:122:12",
										"statements": [
											{
												"condition": {
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:12",
													"subExpression": {
														"id": 2120,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2113,
														"src": "5338:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2129,
													"nodeType": "Block",
													"src": "5397:42:12",
													"statements": [
														{
															"expression": {
																"id": 2127,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "5418:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2119,
															"id": 2128,
															"nodeType": "Return",
															"src": "5411:17:12"
														}
													]
												},
												"id": 2130,
												"nodeType": "IfStatement",
												"src": "5333:106:12",
												"trueBody": {
													"id": 2126,
													"nodeType": "Block",
													"src": "5347:44:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2123,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "5369:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2122,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "5361:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2125,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:12",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "5247:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "5261:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:12"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "5309:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:12"
									},
									"scope": 2153,
									"src": "5221:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2151,
										"nodeType": "Block",
										"src": "5614:432:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2138,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "5690:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2149,
													"nodeType": "Block",
													"src": "5989:51:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2144,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2175,
																		"src": "6010:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2175_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:12",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2166,
																	"src": "6010:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2148,
															"nodeType": "RevertStatement",
															"src": "6003:26:12"
														}
													]
												},
												"id": 2150,
												"nodeType": "IfStatement",
												"src": "5686:354:12",
												"trueBody": {
													"id": 2143,
													"nodeType": "Block",
													"src": "5713:270:12",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:12",
																"nodeType": "YulBlock",
																"src": "5840:133:12",
																"statements": [
																	{
																		"nativeSrc": "5858:40:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:12"
																			},
																			"nativeSrc": "5881:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:12"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:12",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:12",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:12",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:12"
																					},
																					"nativeSrc": "5922:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:12"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:12",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:12"
																			},
																			"nativeSrc": "5915:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:12"
																		},
																		"nativeSrc": "5915:44:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:12"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2135,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:12",
																	"valueSize": 1
																},
																{
																	"declaration": 2135,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:12",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2142,
															"nodeType": "InlineAssembly",
															"src": "5815:158:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:12",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "5576:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:12"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:12"
									},
									"scope": 2153,
									"src": "5559:487:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2154,
							"src": "233:5815:12",
							"usedErrors": [
								1903
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2175
						]
					},
					"id": 2176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2156,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:13",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2175,
							"linearizedBaseContracts": [
								2175
							],
							"name": "Errors",
							"nameLocation": "419:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2157,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:13",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2163,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "557:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "574:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:13"
									},
									"src": "531:59:13"
								},
								{
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:13",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2166,
									"name": "FailedCall",
									"nameLocation": "696:10:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:13"
									},
									"src": "690:19:13"
								},
								{
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:13",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2169,
									"name": "FailedDeployment",
									"nameLocation": "772:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:13"
									},
									"src": "766:25:13"
								},
								{
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:13",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2174,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "884:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:13"
									},
									"src": "860:33:13"
								}
							],
							"scope": 2176,
							"src": "411:484:13",
							"usedErrors": [
								2163,
								2166,
								2169,
								2174
							],
							"usedEvents": []
						}
					],
					"src": "100:796:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2299
						]
					},
					"id": 2300,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2178,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:14",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2299,
							"linearizedBaseContracts": [
								2299
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2181,
									"members": [
										{
											"constant": false,
											"id": 2180,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "1462:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2179,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:14",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "1433:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2184,
									"members": [
										{
											"constant": false,
											"id": 2183,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "1517:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2182,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:14",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "1488:46:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2187,
									"members": [
										{
											"constant": false,
											"id": 2186,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2187,
											"src": "1569:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2185,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:14",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "1540:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2190,
									"members": [
										{
											"constant": false,
											"id": 2189,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2190,
											"src": "1624:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2188,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:14",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "1595:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2193,
									"members": [
										{
											"constant": false,
											"id": 2192,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2193,
											"src": "1678:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2191,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:14",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "1650:47:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2196,
									"members": [
										{
											"constant": false,
											"id": 2195,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2196,
											"src": "1731:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2194,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:14",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "1703:47:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2199,
									"members": [
										{
											"constant": false,
											"id": 2198,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "1783:11:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2197,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:14",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "1756:45:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2209,
										"nodeType": "Block",
										"src": "1983:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:14",
													"nodeType": "YulBlock",
													"src": "2018:38:14",
													"statements": [
														{
															"nativeSrc": "2032:14:14",
															"nodeType": "YulAssignment",
															"src": "2032:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:14",
																"nodeType": "YulIdentifier",
																"src": "2042:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2206,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2202,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2208,
												"nodeType": "InlineAssembly",
												"src": "1993:63:14"
											}
										]
									},
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:14",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "1923:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2201,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:14"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "1960:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2181_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2205,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2204,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2181,
														"src": "1960:11:14"
													},
													"referencedDeclaration": 2181,
													"src": "1960:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2181_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:14"
									},
									"scope": 2299,
									"src": "1899:163:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "2243:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:14",
													"nodeType": "YulBlock",
													"src": "2278:38:14",
													"statements": [
														{
															"nativeSrc": "2292:14:14",
															"nodeType": "YulAssignment",
															"src": "2292:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:14",
																"nodeType": "YulIdentifier",
																"src": "2302:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2213,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2219,
												"nodeType": "InlineAssembly",
												"src": "2253:63:14"
											}
										]
									},
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:14",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "2183:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:14"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "2220:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2184_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2216,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2215,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2184,
														"src": "2220:11:14"
													},
													"referencedDeclaration": 2184,
													"src": "2220:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2184_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:14"
									},
									"scope": 2299,
									"src": "2159:163:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "2503:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:14",
													"nodeType": "YulBlock",
													"src": "2538:38:14",
													"statements": [
														{
															"nativeSrc": "2552:14:14",
															"nodeType": "YulAssignment",
															"src": "2552:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:14",
																"nodeType": "YulIdentifier",
																"src": "2562:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2228,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2224,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2230,
												"nodeType": "InlineAssembly",
												"src": "2513:63:14"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:14",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "2443:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:14"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "2480:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2187_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2227,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2226,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2187,
														"src": "2480:11:14"
													},
													"referencedDeclaration": 2187,
													"src": "2480:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2187_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:14"
									},
									"scope": 2299,
									"src": "2419:163:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2242,
										"nodeType": "Block",
										"src": "2763:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:14",
													"nodeType": "YulBlock",
													"src": "2798:38:14",
													"statements": [
														{
															"nativeSrc": "2812:14:14",
															"nodeType": "YulAssignment",
															"src": "2812:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:14",
																"nodeType": "YulIdentifier",
																"src": "2822:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2239,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2235,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2241,
												"nodeType": "InlineAssembly",
												"src": "2773:63:14"
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:14",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "2703:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:14"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "2740:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2190_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2238,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2237,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2190,
														"src": "2740:11:14"
													},
													"referencedDeclaration": 2190,
													"src": "2740:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2190_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:14"
									},
									"scope": 2299,
									"src": "2679:163:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2253,
										"nodeType": "Block",
										"src": "3020:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:14",
													"nodeType": "YulBlock",
													"src": "3055:38:14",
													"statements": [
														{
															"nativeSrc": "3069:14:14",
															"nodeType": "YulAssignment",
															"src": "3069:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:14",
																"nodeType": "YulIdentifier",
																"src": "3079:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2246,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2252,
												"nodeType": "InlineAssembly",
												"src": "3030:63:14"
											}
										]
									},
									"documentation": {
										"id": 2244,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:14",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "2961:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:14"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "2998:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2193_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2249,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2248,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2193,
														"src": "2998:10:14"
													},
													"referencedDeclaration": 2193,
													"src": "2998:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2193_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:14"
									},
									"scope": 2299,
									"src": "2938:161:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "3277:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:14",
													"nodeType": "YulBlock",
													"src": "3312:38:14",
													"statements": [
														{
															"nativeSrc": "3326:14:14",
															"nodeType": "YulAssignment",
															"src": "3326:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:14",
																"nodeType": "YulIdentifier",
																"src": "3336:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2261,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2257,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2263,
												"nodeType": "InlineAssembly",
												"src": "3287:63:14"
											}
										]
									},
									"documentation": {
										"id": 2255,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:14",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "3218:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2256,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:14"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "3255:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2196_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2259,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "3255:10:14"
													},
													"referencedDeclaration": 2196,
													"src": "3255:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2196_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:14"
									},
									"scope": 2299,
									"src": "3195:161:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "3558:85:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:14",
													"nodeType": "YulBlock",
													"src": "3593:44:14",
													"statements": [
														{
															"nativeSrc": "3607:20:14",
															"nodeType": "YulAssignment",
															"src": "3607:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:14",
																"nodeType": "YulIdentifier",
																"src": "3617:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2272,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2268,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2274,
												"nodeType": "InlineAssembly",
												"src": "3568:69:14"
											}
										]
									},
									"documentation": {
										"id": 2266,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:14",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "3491:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:14"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "3536:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2196_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2270,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "3536:10:14"
													},
													"referencedDeclaration": 2196,
													"src": "3536:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2196_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:14"
									},
									"scope": 2299,
									"src": "3468:175:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2286,
										"nodeType": "Block",
										"src": "3818:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:14",
													"nodeType": "YulBlock",
													"src": "3853:38:14",
													"statements": [
														{
															"nativeSrc": "3867:14:14",
															"nodeType": "YulAssignment",
															"src": "3867:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:14",
																"nodeType": "YulIdentifier",
																"src": "3877:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2283,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2279,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2285,
												"nodeType": "InlineAssembly",
												"src": "3828:63:14"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:14",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "3760:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:14"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "3797:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2199_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2281,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2199,
														"src": "3797:9:14"
													},
													"referencedDeclaration": 2199,
													"src": "3797:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2199_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:14"
									},
									"scope": 2299,
									"src": "3738:159:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "4094:85:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:14",
													"nodeType": "YulBlock",
													"src": "4129:44:14",
													"statements": [
														{
															"nativeSrc": "4143:20:14",
															"nodeType": "YulAssignment",
															"src": "4143:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:14",
																"nodeType": "YulIdentifier",
																"src": "4153:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2294,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2290,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2296,
												"nodeType": "InlineAssembly",
												"src": "4104:69:14"
											}
										]
									},
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:14",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "4029:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:14"
									},
									"returnParameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "4073:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2199_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2292,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2199,
														"src": "4073:9:14"
													},
													"referencedDeclaration": 2199,
													"src": "4073:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2199_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:14"
									},
									"scope": 2299,
									"src": "4007:172:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2300,
							"src": "1407:2774:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:14"
				},
				"id": 14
			},
			"contracts/token/CrocodiloBomberdino.sol": {
				"ast": {
					"absolutePath": "contracts/token/CrocodiloBomberdino.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1317
						],
						"CrocodiloBomberdino": [
							2566
						],
						"ERC1967Utils": [
							1779
						],
						"ERC20Upgradeable": [
							1271
						],
						"FeeManager": [
							2602
						],
						"IERC1822Proxiable": [
							1348
						],
						"IERC20": [
							1867
						],
						"IERC20Errors": [
							1390
						],
						"IERC20Metadata": [
							1893
						],
						"Initializable": [
							472
						],
						"OwnableUpgradeable": [
							204
						],
						"UUPSUpgradeable": [
							654
						]
					},
					"id": 2567,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2301,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2302,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2567,
							"sourceUnit": 1272,
							"src": "61:78:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2567,
							"sourceUnit": 205,
							"src": "141:75:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2304,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2567,
							"sourceUnit": 655,
							"src": "218:77:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/utils/FeeManager.sol",
							"file": "contracts/token/utils/FeeManager.sol",
							"id": 2305,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2567,
							"sourceUnit": 2603,
							"src": "297:46:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2307,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"603:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1271,
										"src": "603:16:15"
									},
									"id": 2308,
									"nodeType": "InheritanceSpecifier",
									"src": "603:16:15"
								},
								{
									"baseName": {
										"id": 2309,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"621:18:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 204,
										"src": "621:18:15"
									},
									"id": 2310,
									"nodeType": "InheritanceSpecifier",
									"src": "621:18:15"
								},
								{
									"baseName": {
										"id": 2311,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"641:15:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 654,
										"src": "641:15:15"
									},
									"id": 2312,
									"nodeType": "InheritanceSpecifier",
									"src": "641:15:15"
								},
								{
									"baseName": {
										"id": 2313,
										"name": "FeeManager",
										"nameLocations": [
											"658:10:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2602,
										"src": "658:10:15"
									},
									"id": 2314,
									"nodeType": "InheritanceSpecifier",
									"src": "658:10:15"
								}
							],
							"canonicalName": "CrocodiloBomberdino",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2306,
								"nodeType": "StructuredDocumentation",
								"src": "347:222:15",
								"text": " @title CrocodiloBomberdino\n @dev Upgradeable ERC20 token with a 5% fee on transfers:\n      2% burn, 2% utility, and 1% liquidity.\n      Uses the UUPS upgradeable pattern and integrates fee management."
							},
							"fullyImplemented": true,
							"id": 2566,
							"linearizedBaseContracts": [
								2566,
								2602,
								654,
								1348,
								204,
								1271,
								1390,
								1893,
								1867,
								1317,
								472
							],
							"name": "CrocodiloBomberdino",
							"nameLocation": "580:19:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2319,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "759:14:15",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "734:62:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2315,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "734:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 2318,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 2316,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "776:13:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 2317,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "792:4:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "776:20:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2372,
										"nodeType": "Block",
										"src": "1136:836:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "43726f636f64696c6f20426f6d62657264696e6f",
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1160:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48a549cd701f6dce69fb921977c2438128974104ca6e78047c9eefb01e53966f",
																"typeString": "literal_string \"Crocodilo Bomberdino\""
															},
															"value": "Crocodilo Bomberdino"
														},
														{
															"hexValue": "424f4d42455244494e4f",
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_100ead320e08da50c7f509ce9f3fe4d8af9a0e7aeeb5f5eaf032ce1e74b6cbf0",
																"typeString": "literal_string \"BOMBERDINO\""
															},
															"value": "BOMBERDINO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_48a549cd701f6dce69fb921977c2438128974104ca6e78047c9eefb01e53966f",
																"typeString": "literal_string \"Crocodilo Bomberdino\""
															},
															{
																"typeIdentifier": "t_stringliteral_100ead320e08da50c7f509ce9f3fe4d8af9a0e7aeeb5f5eaf032ce1e74b6cbf0",
																"typeString": "literal_string \"BOMBERDINO\""
															}
														],
														"id": 2325,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "1147:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:50:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2329,
												"nodeType": "ExpressionStatement",
												"src": "1147:50:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2331,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1223:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1227:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1223:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2330,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1208:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1208:26:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2334,
												"nodeType": "ExpressionStatement",
												"src": "1208:26:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2335,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1364:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:24:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2337,
												"nodeType": "ExpressionStatement",
												"src": "1364:24:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2339,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1464:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1468:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1464:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2341,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2319,
															"src": "1476:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2338,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "1458:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1458:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2343,
												"nodeType": "ExpressionStatement",
												"src": "1458:33:15"
											},
											{
												"expression": {
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2344,
														"name": "burnWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2571,
														"src": "1607:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307830373764613533653038363566313131423335393132643430303832326241383934303143613634",
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1620:42:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x077da53e0865f111B35912d400822bA89401Ca64"
													},
													"src": "1607:55:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2347,
												"nodeType": "ExpressionStatement",
												"src": "1607:55:15"
											},
											{
												"expression": {
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2348,
														"name": "utilityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "1673:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307837373541464533343439376131383733353036303764363639633039374444394636444466616164",
														"id": 2349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1689:42:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x775AFE34497a187350607d669c097DD9F6DDfaad"
													},
													"src": "1673:58:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2351,
												"nodeType": "ExpressionStatement",
												"src": "1673:58:15"
											},
											{
												"expression": {
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2352,
														"name": "liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2575,
														"src": "1742:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307864343235303961373031413139326365323034453546423162653466426130433862303861393832",
														"id": 2353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1760:42:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xd42509a701A192ce204E5FB1be4fBa0C8b08a982"
													},
													"src": "1742:60:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2355,
												"nodeType": "ExpressionStatement",
												"src": "1742:60:15"
											},
											{
												"expression": {
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2356,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "1890:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2359,
														"indexExpression": {
															"expression": {
																"id": 2357,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1902:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1906:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1902:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1890:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1916:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1890:30:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2362,
												"nodeType": "ExpressionStatement",
												"src": "1890:30:15"
											},
											{
												"expression": {
													"id": 2370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2363,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "1931:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2368,
														"indexExpression": {
															"arguments": [
																{
																	"id": 2366,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1951:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CrocodiloBomberdino_$2566",
																		"typeString": "contract CrocodiloBomberdino"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CrocodiloBomberdino_$2566",
																		"typeString": "contract CrocodiloBomberdino"
																	}
																],
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1943:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2364,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1943:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1943:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1931:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1960:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1931:33:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2371,
												"nodeType": "ExpressionStatement",
												"src": "1931:33:15"
											}
										]
									},
									"documentation": {
										"id": 2320,
										"nodeType": "StructuredDocumentation",
										"src": "805:284:15",
										"text": " @dev Initializes the contract: sets token details, mints the total supply,\n      initializes fee wallet addresses (replace these with your secure addresses before mainnet deployment),\n      and exempts the deployer and the contract itself from fees."
									},
									"functionSelector": "8129fc1c",
									"id": 2373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2322,
												"name": "initializer",
												"nameLocations": [
													"1124:11:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 312,
												"src": "1124:11:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1124:11:15"
										}
									],
									"name": "initialize",
									"nameLocation": "1104:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1114:2:15"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1136:0:15"
									},
									"scope": 2566,
									"src": "1095:877:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										608
									],
									"body": {
										"id": 2382,
										"nodeType": "Block",
										"src": "2158:2:15",
										"statements": []
									},
									"documentation": {
										"id": 2374,
										"nodeType": "StructuredDocumentation",
										"src": "1980:90:15",
										"text": " @dev UUPS upgrade authorization function. Only the owner can upgrade."
									},
									"id": 2383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2380,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2379,
												"name": "onlyOwner",
												"nameLocations": [
													"2148:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 99,
												"src": "2148:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2148:9:15"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "2085:17:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2378,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2139:8:15"
									},
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2111:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "2103:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:27:15"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:15"
									},
									"scope": 2566,
									"src": "2076:84:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										978
									],
									"body": {
										"id": 2482,
										"nodeType": "Block",
										"src": "2552:928:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2394,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "2567:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2396,
														"indexExpression": {
															"id": 2395,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "2579:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2567:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 2397,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "2590:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2399,
														"indexExpression": {
															"id": 2398,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2388,
															"src": "2602:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2590:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2567:45:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2480,
													"nodeType": "Block",
													"src": "2772:701:15",
													"statements": [
														{
															"assignments": [
																2411
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2411,
																	"mutability": "mutable",
																	"name": "feeTotal",
																	"nameLocation": "2834:8:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2480,
																	"src": "2826:16:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2410,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2826:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2419,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2412,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2390,
																				"src": "2846:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2413,
																					"name": "totalFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2601,
																					"src": "2855:8:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 2414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2855:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2846:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2416,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2845:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2869:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2845:27:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2826:46:15"
														},
														{
															"assignments": [
																2421
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2421,
																	"mutability": "mutable",
																	"name": "burnAmount",
																	"nameLocation": "2895:10:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2480,
																	"src": "2887:18:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2420,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2887:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2428,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2422,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2390,
																				"src": "2909:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2423,
																				"name": "burnFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2578,
																				"src": "2918:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2909:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2425,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2908:18:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2929:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2908:24:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2887:45:15"
														},
														{
															"assignments": [
																2430
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2430,
																	"mutability": "mutable",
																	"name": "utilityAmount",
																	"nameLocation": "2955:13:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2480,
																	"src": "2947:21:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2429,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2947:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2437,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2431,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2390,
																				"src": "2972:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2432,
																				"name": "utilityFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2581,
																				"src": "2981:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2972:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2434,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2971:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2995:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2971:27:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2947:51:15"
														},
														{
															"assignments": [
																2439
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2439,
																	"mutability": "mutable",
																	"name": "liquidityAmount",
																	"nameLocation": "3021:15:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2480,
																	"src": "3013:23:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2438,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3013:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2445,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2440,
																		"name": "feeTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2411,
																		"src": "3039:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2441,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2421,
																		"src": "3050:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3039:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2443,
																	"name": "utilityAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "3063:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3039:37:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3013:63:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2449,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2386,
																		"src": "3162:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2450,
																		"name": "burnWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2571,
																		"src": "3170:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2451,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2421,
																		"src": "3182:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2446,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3146:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_CrocodiloBomberdino_$2566_$",
																			"typeString": "type(contract super CrocodiloBomberdino)"
																		}
																	},
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3152:9:15",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 978,
																	"src": "3146:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3146:47:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2453,
															"nodeType": "ExpressionStatement",
															"src": "3146:47:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2457,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2386,
																		"src": "3224:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2458,
																		"name": "utilityWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2573,
																		"src": "3232:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2459,
																		"name": "utilityAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2430,
																		"src": "3247:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2454,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3208:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_CrocodiloBomberdino_$2566_$",
																			"typeString": "type(contract super CrocodiloBomberdino)"
																		}
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3214:9:15",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 978,
																	"src": "3208:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3208:53:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2461,
															"nodeType": "ExpressionStatement",
															"src": "3208:53:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2465,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2386,
																		"src": "3292:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2466,
																		"name": "liquidityWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2575,
																		"src": "3300:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2467,
																		"name": "liquidityAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2439,
																		"src": "3317:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2462,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3276:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_CrocodiloBomberdino_$2566_$",
																			"typeString": "type(contract super CrocodiloBomberdino)"
																		}
																	},
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3282:9:15",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 978,
																	"src": "3276:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3276:57:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2469,
															"nodeType": "ExpressionStatement",
															"src": "3276:57:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2473,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2386,
																		"src": "3424:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2474,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "3432:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2475,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "3443:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2476,
																			"name": "feeTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2411,
																			"src": "3452:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3443:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2470,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3408:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_CrocodiloBomberdino_$2566_$",
																			"typeString": "type(contract super CrocodiloBomberdino)"
																		}
																	},
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3414:9:15",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 978,
																	"src": "3408:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3408:53:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2479,
															"nodeType": "ExpressionStatement",
															"src": "3408:53:15"
														}
													]
												},
												"id": 2481,
												"nodeType": "IfStatement",
												"src": "2563:910:15",
												"trueBody": {
													"id": 2409,
													"nodeType": "Block",
													"src": "2614:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2404,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2386,
																		"src": "2728:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2405,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "2736:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2406,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "2747:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2401,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2712:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_CrocodiloBomberdino_$2566_$",
																			"typeString": "type(contract super CrocodiloBomberdino)"
																		}
																	},
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2718:9:15",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 978,
																	"src": "2712:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2712:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2408,
															"nodeType": "ExpressionStatement",
															"src": "2712:42:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2384,
										"nodeType": "StructuredDocumentation",
										"src": "2168:290:15",
										"text": " @dev Overrides the ERC20 _transfer function to apply a 5% fee on transfers.\n      The fee is split as follows:\n        - 2% is sent to the burn wallet.\n        - 2% is sent to the utility wallet.\n        - 1% is sent to the liquidity wallet."
									},
									"id": 2483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2473:9:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2543:8:15"
									},
									"parameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2491:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "2483:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2507:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "2499:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2526:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "2518:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:51:15"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2552:0:15"
									},
									"scope": 2566,
									"src": "2464:1016:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "3990:116:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2494,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2486,
																"src": "4009:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4028:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4020:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2495,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4020:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4020:10:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4009:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206163636f756e742061646472657373",
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4032:25:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
																"typeString": "literal_string \"Invalid account address\""
															},
															"value": "Invalid account address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
																"typeString": "literal_string \"Invalid account address\""
															}
														],
														"id": 2493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4001:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4001:57:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2502,
												"nodeType": "ExpressionStatement",
												"src": "4001:57:15"
											},
											{
												"expression": {
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2503,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "4069:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2505,
														"indexExpression": {
															"id": 2504,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2486,
															"src": "4081:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4069:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2506,
														"name": "exempt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "4092:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4069:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2508,
												"nodeType": "ExpressionStatement",
												"src": "4069:29:15"
											}
										]
									},
									"documentation": {
										"id": 2484,
										"nodeType": "StructuredDocumentation",
										"src": "3700:207:15",
										"text": " @notice Updates the fee exemption status for an account.\n @param account The address to update.\n @param exempt  Boolean flag indicating if the account should be fee-exempt."
									},
									"functionSelector": "5e4043e9",
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2491,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2490,
												"name": "onlyOwner",
												"nameLocations": [
													"3980:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 99,
												"src": "3980:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3980:9:15"
										}
									],
									"name": "updateFeeExemption",
									"nameLocation": "3922:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3949:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "3941:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "exempt",
												"nameLocation": "3963:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "3958:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3958:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:30:15"
									},
									"returnParameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3990:0:15"
									},
									"scope": 2566,
									"src": "3913:193:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "4508:372:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2523,
																"name": "_burnWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "4527:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4550:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4542:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2524,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4542:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4542:10:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4527:25:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275726e2077616c6c65742063616e6e6f74206265207a65726f",
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4554:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811",
																"typeString": "literal_string \"Burn wallet cannot be zero\""
															},
															"value": "Burn wallet cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7a2da1930ca37d8b45959d19a5423e0aee4fa93878a1fb9fbc474cb575c0811",
																"typeString": "literal_string \"Burn wallet cannot be zero\""
															}
														],
														"id": 2522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4519:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4519:64:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2531,
												"nodeType": "ExpressionStatement",
												"src": "4519:64:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2533,
																"name": "_utilityWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "4602:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4628:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4620:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2534,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4620:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4620:10:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4602:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5574696c6974792077616c6c65742063616e6e6f74206265207a65726f",
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4632:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f",
																"typeString": "literal_string \"Utility wallet cannot be zero\""
															},
															"value": "Utility wallet cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_531ccac585104e100a138d348b68a3e0487e9f47aa109f7717f66dd35d34d08f",
																"typeString": "literal_string \"Utility wallet cannot be zero\""
															}
														],
														"id": 2532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4594:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4594:70:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2541,
												"nodeType": "ExpressionStatement",
												"src": "4594:70:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2543,
																"name": "_liquidityWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "4683:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4711:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4703:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2544,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4703:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4703:10:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4683:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69717569646974792077616c6c65742063616e6e6f74206265207a65726f",
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4715:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64",
																"typeString": "literal_string \"Liquidity wallet cannot be zero\""
															},
															"value": "Liquidity wallet cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fab5bb74ff7ce7a6800760eb522f79171fcc953a0ccfe6ff55759b166318ea64",
																"typeString": "literal_string \"Liquidity wallet cannot be zero\""
															}
														],
														"id": 2542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4675:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4675:74:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2551,
												"nodeType": "ExpressionStatement",
												"src": "4675:74:15"
											},
											{
												"expression": {
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2552,
														"name": "burnWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2571,
														"src": "4762:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2553,
														"name": "_burnWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2513,
														"src": "4775:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4762:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2555,
												"nodeType": "ExpressionStatement",
												"src": "4762:24:15"
											},
											{
												"expression": {
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2556,
														"name": "utilityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "4797:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2557,
														"name": "_utilityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2515,
														"src": "4813:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4797:30:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2559,
												"nodeType": "ExpressionStatement",
												"src": "4797:30:15"
											},
											{
												"expression": {
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2560,
														"name": "liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2575,
														"src": "4838:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2561,
														"name": "_liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2517,
														"src": "4856:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4838:34:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2563,
												"nodeType": "ExpressionStatement",
												"src": "4838:34:15"
											}
										]
									},
									"documentation": {
										"id": 2511,
										"nodeType": "StructuredDocumentation",
										"src": "4114:241:15",
										"text": " @notice Updates the fee wallet addresses.\n @param _burnWallet      New burn wallet address.\n @param _utilityWallet   New utility wallet address.\n @param _liquidityWallet New liquidity wallet address."
									},
									"functionSelector": "147c9f6d",
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2520,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2519,
												"name": "onlyOwner",
												"nameLocations": [
													"4498:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 99,
												"src": "4498:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "4498:9:15"
										}
									],
									"name": "updateWallets",
									"nameLocation": "4370:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "_burnWallet",
												"nameLocation": "4402:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "4394:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4394:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "_utilityWallet",
												"nameLocation": "4432:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "4424:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4424:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "_liquidityWallet",
												"nameLocation": "4465:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "4457:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:105:15"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4508:0:15"
									},
									"scope": 2566,
									"src": "4361:519:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2567,
							"src": "571:4312:15",
							"usedErrors": [
								30,
								35,
								221,
								224,
								499,
								504,
								1360,
								1365,
								1370,
								1379,
								1384,
								1389,
								1505,
								1518,
								1903,
								2166
							],
							"usedEvents": [
								41,
								229,
								1325,
								1801,
								1810
							]
						}
					],
					"src": "33:4852:15"
				},
				"id": 15
			},
			"contracts/token/utils/FeeManager.sol": {
				"ast": {
					"absolutePath": "contracts/token/utils/FeeManager.sol",
					"exportedSymbols": {
						"FeeManager": [
							2602
						]
					},
					"id": 2603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2568,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:16"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "FeeManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2569,
								"nodeType": "StructuredDocumentation",
								"src": "61:265:16",
								"text": " @title FeeManager\n @dev Contains fee parameters, wallet address storage, and fee calculation.\n      This abstract contract does NOT enforce access control;\n      functions that need protection will be implemented in the derived token contract."
							},
							"fullyImplemented": true,
							"id": 2602,
							"linearizedBaseContracts": [
								2602
							],
							"name": "FeeManager",
							"nameLocation": "346:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06228749",
									"id": 2571,
									"mutability": "mutable",
									"name": "burnWallet",
									"nameLocation": "426:10:16",
									"nodeType": "VariableDeclaration",
									"scope": 2602,
									"src": "411:25:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2570,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bf4cc52b",
									"id": 2573,
									"mutability": "mutable",
									"name": "utilityWallet",
									"nameLocation": "458:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 2602,
									"src": "443:28:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2572,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4698016",
									"id": 2575,
									"mutability": "mutable",
									"name": "liquidityWallet",
									"nameLocation": "493:15:16",
									"nodeType": "VariableDeclaration",
									"scope": 2602,
									"src": "478:30:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2574,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fce589d8",
									"id": 2578,
									"mutability": "mutable",
									"name": "burnFee",
									"nameLocation": "604:7:16",
									"nodeType": "VariableDeclaration",
									"scope": 2602,
									"src": "589:26:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2576,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "589:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2577,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "614:1:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dccd8bd2",
									"id": 2581,
									"mutability": "mutable",
									"name": "utilityFee",
									"nameLocation": "659:10:16",
									"nodeType": "VariableDeclaration",
									"scope": 2602,
									"src": "644:29:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2579,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "644:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2580,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "672:1:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "98118cb4",
									"id": 2584,
									"mutability": "mutable",
									"name": "liquidityFee",
									"nameLocation": "717:12:16",
									"nodeType": "VariableDeclaration",
									"scope": 2602,
									"src": "702:31:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2582,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "702:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2583,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "732:1:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f4218e0",
									"id": 2588,
									"mutability": "mutable",
									"name": "isFeeExempt",
									"nameLocation": "884:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2602,
									"src": "852:43:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2587,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2585,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "860:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "852:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2586,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "871:4:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "1022:61:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2594,
															"name": "burnFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "1040:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2595,
															"name": "utilityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2581,
															"src": "1050:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1040:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2597,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2584,
														"src": "1063:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1040:35:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2593,
												"id": 2599,
												"nodeType": "Return",
												"src": "1033:42:16"
											}
										]
									},
									"documentation": {
										"id": 2589,
										"nodeType": "StructuredDocumentation",
										"src": "904:62:16",
										"text": " @notice Returns the total fee percentage."
									},
									"functionSelector": "1df4ccfc",
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalFee",
									"nameLocation": "981:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "989:2:16"
									},
									"returnParameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "1013:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:9:16"
									},
									"scope": 2602,
									"src": "972:111:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2603,
							"src": "328:758:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1055:16"
				},
				"id": 16
			}
		}
	}
}